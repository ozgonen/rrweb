{"ast":null,"code":"var _jsxFileName = \"/Users/ogonen/rrweb/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Replayer } from \"rrweb\";\nimport \"./App.css\";\nimport { cutRecording, trimRecording, analyzeRecording, findEventsByContent, timestampToRelativeTime, formatTime, parseTimeString } from \"./RecordingCutter\";\n\n// Event type mapping for rrweb\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getEventTypeInfo = event => {\n  const eventTypes = {\n    0: {\n      name: \"DomContentLoaded\",\n      color: \"#4CAF50\",\n      symbol: \"📄\"\n    },\n    1: {\n      name: \"Load\",\n      color: \"#2196F3\",\n      symbol: \"✅\"\n    },\n    2: {\n      name: \"FullSnapshot\",\n      color: \"#FF9800\",\n      symbol: \"📸\"\n    },\n    3: {\n      name: \"IncrementalSnapshot\",\n      color: \"#9C27B0\",\n      symbol: \"🔄\"\n    },\n    4: {\n      name: \"Meta\",\n      color: \"#795548\",\n      symbol: \"ℹ️\"\n    },\n    5: {\n      name: \"Custom\",\n      color: \"#607D8B\",\n      symbol: \"⭐\"\n    }\n  };\n  const baseInfo = eventTypes[event.type] || {\n    name: \"Unknown\",\n    color: \"#666\",\n    symbol: \"❓\"\n  };\n\n  // Add more detail for incremental snapshots\n  if (event.type === 3 && event.data) {\n    const source = event.data.source;\n    const sourceNames = {\n      0: \"Mutation\",\n      1: \"MouseMove\",\n      2: \"MouseInteraction\",\n      3: \"Scroll\",\n      4: \"ViewportResize\",\n      5: \"Input\",\n      6: \"TouchMove\",\n      7: \"MediaInteraction\",\n      8: \"StyleSheetRule\",\n      9: \"CanvasMutation\",\n      10: \"Font\",\n      11: \"Log\",\n      12: \"Drag\",\n      13: \"StyleDeclaration\"\n    };\n    if (sourceNames[source] !== undefined) {\n      return {\n        ...baseInfo,\n        name: `${baseInfo.name} (${sourceNames[source]})`,\n        subType: sourceNames[source]\n      };\n    }\n  }\n  return baseInfo;\n};\nfunction App() {\n  _s();\n  const [events, setEvents] = useState(null);\n  const [error, setError] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [recording, setRecording] = useState(null); // Analysis of current recording\n  const [cutTimestamp, setCutTimestamp] = useState(\"\");\n  const [beforeSeconds, setBeforeSeconds] = useState(5);\n  const [afterSeconds, setAfterSeconds] = useState(5);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [foundEvents, setFoundEvents] = useState([]);\n  const playerRef = useRef(null);\n  const replayer = useRef(null);\n\n  // Player timeline states\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [isTrimmingMode, setIsTrimmingMode] = useState(false);\n  const [trimStart, setTrimStart] = useState(0);\n  const [trimEnd, setTrimEnd] = useState(0);\n  const timelineUpdateInterval = useRef(null);\n  const [eventMarkers, setEventMarkers] = useState([]);\n  const processEventMarkers = (eventsArray, recordingAnalysis) => {\n    if (!eventsArray || !recordingAnalysis) return [];\n    const startTime = recordingAnalysis.startTime;\n    const markers = [];\n\n    // Group events by timestamp to avoid overlapping markers\n    const eventsByTime = {};\n    eventsArray.forEach(event => {\n      const relativeTime = event.timestamp - startTime;\n      const percentage = relativeTime / recordingAnalysis.duration * 100;\n      const key = Math.floor(percentage * 10) / 10; // Round to 0.1%\n\n      if (!eventsByTime[key]) {\n        eventsByTime[key] = [];\n      }\n      eventsByTime[key].push({\n        ...event,\n        relativeTime,\n        percentage,\n        typeInfo: getEventTypeInfo(event)\n      });\n    });\n\n    // Convert to array and limit incremental snapshots\n    Object.entries(eventsByTime).forEach(([key, events]) => {\n      // If there are many incremental snapshots at the same time, group them\n      const incrementalSnapshots = events.filter(e => e.type === 3);\n      const otherEvents = events.filter(e => e.type !== 3);\n\n      // Add all non-incremental events\n      markers.push(...otherEvents);\n\n      // For incremental snapshots, only add a representative sample\n      if (incrementalSnapshots.length > 0) {\n        // Group by subtype\n        const bySubType = {};\n        incrementalSnapshots.forEach(e => {\n          const subType = e.typeInfo.subType || \"Unknown\";\n          if (!bySubType[subType]) {\n            bySubType[subType] = [];\n          }\n          bySubType[subType].push(e);\n        });\n\n        // Add one marker per subtype\n        Object.entries(bySubType).forEach(([subType, snapshots]) => {\n          const representative = snapshots[0];\n          markers.push({\n            ...representative,\n            count: snapshots.length,\n            grouped: true\n          });\n        });\n      }\n    });\n    return markers.sort((a, b) => a.timestamp - b.timestamp);\n  };\n  const handleFileUpload = file => {\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const content = e.target.result;\n        let jsonData;\n        if (typeof content === \"string\") {\n          jsonData = JSON.parse(content);\n        } else {\n          // Handle binary content\n          const text = new TextDecoder().decode(content);\n          jsonData = JSON.parse(text);\n        }\n\n        // Debug: Log the raw data structure\n        console.log(\"Raw JSON data:\", jsonData);\n        console.log(\"Data type:\", typeof jsonData);\n        console.log(\"Is array:\", Array.isArray(jsonData));\n\n        // Handle different rrweb recording formats\n        let eventsArray;\n        if (Array.isArray(jsonData)) {\n          eventsArray = jsonData;\n        } else if (jsonData.events && Array.isArray(jsonData.events)) {\n          // Some recordings store events in a nested structure\n          eventsArray = jsonData.events;\n        } else if (jsonData.data && Array.isArray(jsonData.data)) {\n          eventsArray = jsonData.data;\n        } else {\n          // Single event wrapped in array\n          eventsArray = [jsonData];\n        }\n        console.log(\"Processed events array:\", eventsArray.length, \"events\");\n        console.log(\"First few events:\", eventsArray.slice(0, 3));\n        setEvents(eventsArray);\n        setError(null);\n\n        // Analyze the recording\n        const analysis = analyzeRecording(eventsArray);\n        setRecording(analysis);\n        console.log(\"Recording loaded:\", analysis);\n\n        // Process event markers\n        const markers = processEventMarkers(eventsArray, analysis);\n        setEventMarkers(markers);\n      } catch (err) {\n        console.error(\"Error parsing file:\", err);\n        setError(`Error loading file: ${err.message}. Please make sure the file contains valid rrweb recording data.`);\n      }\n    };\n    reader.onerror = () => {\n      setError(\"Error reading file. Please try again.\");\n    };\n\n    // Try to read as text first, fall back to binary if needed\n    reader.readAsText(file);\n  };\n  const handleFileDrop = e => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileUpload(files[0]);\n    }\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const initializePlayer = () => {\n    if (!events || !playerRef.current) return;\n    try {\n      // Clean up existing replayer with error handling\n      if (replayer.current) {\n        try {\n          replayer.current.destroy();\n        } catch (destroyError) {\n          console.warn(\"Error destroying previous replayer:\", destroyError);\n          // Force cleanup by clearing the container\n          if (playerRef.current) {\n            playerRef.current.innerHTML = \"\";\n          }\n        }\n        replayer.current = null;\n      }\n\n      // Ensure player container is clean\n      if (playerRef.current) {\n        playerRef.current.innerHTML = \"\";\n      }\n\n      // Debug: Check the events structure\n      console.log(\"Events to replay:\", events.length, \"events\");\n      const fullSnapshots = events.filter(e => e.type === 2);\n      const domUpdates = events.filter(e => e.type === 3);\n      console.log(\"Full snapshots:\", fullSnapshots.length);\n      console.log(\"DOM updates:\", domUpdates.length);\n      if (fullSnapshots.length === 0) {\n        setError(\"No full snapshot found in recording. This recording may be incomplete.\");\n        return;\n      }\n\n      // Create new replayer instance with enhanced configuration\n      replayer.current = new Replayer(events, {\n        root: playerRef.current,\n        skipInactive: false,\n        showWarning: true,\n        blockClass: \"rr-block\",\n        liveMode: false,\n        triggerFocus: false,\n        showDebug: false,\n        insertStyleRules: [\".rr-block { background: rgba(0, 0, 0, 0.1); }\", \"iframe { background: white !important; }\"]\n      });\n\n      // Add event listeners for debugging\n      replayer.current.on(\"state-change\", state => {\n        console.log(\"Replayer state changed:\", state);\n      });\n      replayer.current.on(\"resize\", size => {\n        console.log(\"Replayer resized:\", size);\n      });\n\n      // Get the duration from the replayer\n      const metadata = replayer.current.getMetaData();\n      const totalDuration = metadata.totalTime;\n      setDuration(totalDuration);\n      setTrimEnd(totalDuration);\n      console.log(\"Replayer initialized successfully\");\n    } catch (err) {\n      console.error(\"Error initializing replayer:\", err);\n      setError(`Error initializing player: ${err.message}`);\n    }\n  };\n  useEffect(() => {\n    if (events && playerRef.current) {\n      initializePlayer();\n    }\n\n    // Cleanup on unmount\n    return () => {\n      if (replayer.current) {\n        try {\n          replayer.current.destroy();\n        } catch (destroyError) {\n          console.warn(\"Error destroying replayer on cleanup:\", destroyError);\n          // Force cleanup by clearing the container\n          if (playerRef.current) {\n            playerRef.current.innerHTML = \"\";\n          }\n        }\n        replayer.current = null;\n      }\n    };\n  }, [events]);\n  const handlePlay = () => {\n    if (replayer.current) {\n      // Resume from current position instead of starting from beginning\n      if (currentTime > 0) {\n        replayer.current.play(currentTime);\n      } else {\n        replayer.current.play();\n      }\n      setIsPlaying(true);\n      // Start updating timeline\n      timelineUpdateInterval.current = setInterval(() => {\n        if (replayer.current) {\n          const time = replayer.current.getCurrentTime();\n          setCurrentTime(time);\n        }\n      }, 100);\n    }\n  };\n  const handlePause = () => {\n    if (replayer.current) {\n      replayer.current.pause();\n      setIsPlaying(false);\n      // Stop updating timeline\n      if (timelineUpdateInterval.current) {\n        clearInterval(timelineUpdateInterval.current);\n      }\n    }\n  };\n  const handleStop = () => {\n    if (replayer.current) {\n      replayer.current.pause();\n      // Reset to beginning\n      replayer.current.play(0);\n      replayer.current.pause();\n      setIsPlaying(false);\n      setCurrentTime(0);\n      // Stop updating timeline\n      if (timelineUpdateInterval.current) {\n        clearInterval(timelineUpdateInterval.current);\n      }\n    }\n  };\n  const handleSeek = time => {\n    if (replayer.current) {\n      replayer.current.play(time);\n      replayer.current.pause();\n      setCurrentTime(time);\n    }\n  };\n  const searchEvents = () => {\n    if (!events || !searchTerm.trim()) {\n      setFoundEvents([]);\n      return;\n    }\n    const found = findEventsByContent(events, searchTerm.trim());\n    setFoundEvents(found);\n  };\n  const fillTimestamp = relativeSeconds => {\n    setCutTimestamp(formatTime(relativeSeconds));\n  };\n  const handleStartTrimming = () => {\n    setIsTrimmingMode(true);\n    setTrimStart(currentTime);\n    setTrimEnd(duration);\n  };\n  const handleSaveTrim = () => {\n    if (!events || !recording) {\n      setError(\"No recording loaded\");\n      return;\n    }\n    try {\n      // Use the new trimRecording function with millisecond timestamps\n      const clip = trimRecording(events, trimStart, trimEnd);\n\n      // Convert milliseconds to seconds for the filename\n      const startSeconds = trimStart / 1000;\n      const endSeconds = trimEnd / 1000;\n\n      // Download the trimmed clip\n      const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(clip, null, 2));\n      const downloadAnchorNode = document.createElement(\"a\");\n      downloadAnchorNode.setAttribute(\"href\", dataStr);\n      downloadAnchorNode.setAttribute(\"download\", `trimmed_${formatTime(startSeconds)}_to_${formatTime(endSeconds)}.json`);\n      document.body.appendChild(downloadAnchorNode);\n      downloadAnchorNode.click();\n      downloadAnchorNode.remove();\n      setIsTrimmingMode(false);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error trimming recording:\", err);\n      setError(`Error trimming recording: ${err.message}`);\n    }\n  };\n  const handleCancelTrim = () => {\n    setIsTrimmingMode(false);\n    setTrimStart(0);\n    setTrimEnd(duration);\n  };\n  const handleTrimHandleChange = (type, value) => {\n    if (type === \"start\") {\n      setTrimStart(Math.max(0, Math.min(value, trimEnd - 1000))); // Ensure at least 1 second\n    } else {\n      setTrimEnd(Math.max(trimStart + 1000, Math.min(value, duration)));\n    }\n  };\n  const handleCut = action => {\n    if (!events || !recording) {\n      setError(\"No recording loaded\");\n      return;\n    }\n    try {\n      const relativeSeconds = parseTimeString(cutTimestamp);\n      const clip = cutRecording(events, relativeSeconds, beforeSeconds, afterSeconds);\n      if (action === \"load\") {\n        // Replace current recording with the clip\n        setEvents(clip);\n        const analysis = analyzeRecording(clip);\n        setRecording(analysis);\n        setCutTimestamp(\"\");\n        setFoundEvents([]);\n      } else if (action === \"download\") {\n        // Download the clip as JSON\n        const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(clip, null, 2));\n        const downloadAnchorNode = document.createElement(\"a\");\n        downloadAnchorNode.setAttribute(\"href\", dataStr);\n        downloadAnchorNode.setAttribute(\"download\", `clip_${cutTimestamp || \"segment\"}.json`);\n        document.body.appendChild(downloadAnchorNode);\n        downloadAnchorNode.click();\n        downloadAnchorNode.remove();\n      }\n    } catch (err) {\n      console.error(\"Error cutting recording:\", err);\n      setError(`Error cutting recording: ${err.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"RRWeb Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload an rrweb recording file to play it back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-area\",\n        onDrop: handleFileDrop,\n        onDragOver: handleDragOver,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => handleFileUpload(e.target.files[0]),\n          className: \"file-input\",\n          id: \"file-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          className: \"upload-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-icon\",\n            children: \"\\uD83D\\uDCC1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Choose a file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 15\n            }, this), \" or drag it here\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-subtext\",\n            children: \"Supports rrweb recording files (with or without .json extension)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 17\n    }, this), recording && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recording-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recording Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Duration:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: formatTime(recording.duration)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Events:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: recording.eventCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Start:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: new Date(recording.startTime).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"End:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: new Date(recording.endTime).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 9\n    }, this), events && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: playerRef,\n        className: \"player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-markers-container\",\n            children: eventMarkers.map((marker, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `event-marker ${marker.grouped ? \"grouped\" : \"\"}`,\n              style: {\n                left: `${marker.percentage}%`,\n                backgroundColor: marker.typeInfo.color\n              },\n              title: `${marker.typeInfo.name}${marker.grouped ? ` (${marker.count} events)` : \"\"} at ${formatTime(marker.relativeTime / 1000)}`,\n              onClick: () => handleSeek(marker.relativeTime),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"event-marker-symbol\",\n                children: marker.typeInfo.symbol\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 21\n              }, this), marker.grouped && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"event-marker-count\",\n                children: marker.count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 23\n              }, this)]\n            }, `${marker.timestamp}-${index}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline\",\n            onClick: e => {\n              if (!isTrimmingMode && e.target === e.currentTarget) {\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const percentage = x / rect.width;\n                const seekTime = percentage * duration;\n                handleSeek(seekTime);\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timeline-progress\",\n              style: {\n                width: `${currentTime / duration * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 17\n            }, this), !isTrimmingMode && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timeline-scrubber\",\n              style: {\n                left: `${currentTime / duration * 100}%`\n              },\n              onMouseDown: e => {\n                e.stopPropagation();\n                const startX = e.clientX;\n                const startTime = currentTime;\n                const rect = e.currentTarget.parentElement.getBoundingClientRect();\n                const handleMouseMove = e => {\n                  const deltaX = e.clientX - startX;\n                  const deltaPercent = deltaX / rect.width;\n                  const newTime = Math.max(0, Math.min(duration, startTime + deltaPercent * duration));\n                  handleSeek(newTime);\n                };\n                const handleMouseUp = () => {\n                  document.removeEventListener(\"mousemove\", handleMouseMove);\n                  document.removeEventListener(\"mouseup\", handleMouseUp);\n                };\n                document.addEventListener(\"mousemove\", handleMouseMove);\n                document.addEventListener(\"mouseup\", handleMouseUp);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 19\n            }, this), isTrimmingMode && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"trim-overlay trim-start\",\n                style: {\n                  width: `${trimStart / duration * 100}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 642,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"trim-overlay trim-end\",\n                style: {\n                  left: `${trimEnd / duration * 100}%`,\n                  width: `${(duration - trimEnd) / duration * 100}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"trim-handle trim-handle-start\",\n                style: {\n                  left: `${trimStart / duration * 100}%`\n                },\n                onMouseDown: e => {\n                  e.stopPropagation();\n                  const startX = e.clientX;\n                  const startValue = trimStart;\n                  const rect = e.currentTarget.parentElement.getBoundingClientRect();\n                  const handleMouseMove = e => {\n                    const deltaX = e.clientX - startX;\n                    const deltaPercent = deltaX / rect.width;\n                    const newValue = startValue + deltaPercent * duration;\n                    handleTrimHandleChange(\"start\", newValue);\n                  };\n                  const handleMouseUp = () => {\n                    document.removeEventListener(\"mousemove\", handleMouseMove);\n                    document.removeEventListener(\"mouseup\", handleMouseUp);\n                  };\n                  document.addEventListener(\"mousemove\", handleMouseMove);\n                  document.addEventListener(\"mouseup\", handleMouseUp);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"trim-handle trim-handle-end\",\n                style: {\n                  left: `${trimEnd / duration * 100}%`\n                },\n                onMouseDown: e => {\n                  e.stopPropagation();\n                  const startX = e.clientX;\n                  const startValue = trimEnd;\n                  const rect = e.currentTarget.parentElement.getBoundingClientRect();\n                  const handleMouseMove = e => {\n                    const deltaX = e.clientX - startX;\n                    const deltaPercent = deltaX / rect.width;\n                    const newValue = startValue + deltaPercent * duration;\n                    handleTrimHandleChange(\"end\", newValue);\n                  };\n                  const handleMouseUp = () => {\n                    document.removeEventListener(\"mousemove\", handleMouseMove);\n                    document.removeEventListener(\"mouseup\", handleMouseUp);\n                  };\n                  document.addEventListener(\"mousemove\", handleMouseMove);\n                  document.addEventListener(\"mouseup\", handleMouseUp);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline-times\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatTime(currentTime / 1000)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 722,\n              columnNumber: 17\n            }, this), isTrimmingMode && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"trim-info\",\n              children: [\"Trim: \", formatTime(trimStart / 1000), \" -\", \" \", formatTime(trimEnd / 1000)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 724,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatTime(duration / 1000)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePlay,\n            disabled: isPlaying,\n            children: \"\\u25B6\\uFE0F Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePause,\n            disabled: !isPlaying,\n            children: \"\\u23F8\\uFE0F Pause\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStop,\n            children: \"\\u23F9\\uFE0F Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 15\n          }, this), !isTrimmingMode ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStartTrimming,\n            className: \"trim-button\",\n            children: \"\\u2702\\uFE0F Trim\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSaveTrim,\n              className: \"save-trim-button\",\n              children: \"\\uD83D\\uDCBE Save Trim\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCancelTrim,\n              className: \"cancel-trim-button\",\n              children: \"\\u274C Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 489,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WELbqbYmRuTYufQN8KfNRmlxNak=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Replayer","cutRecording","trimRecording","analyzeRecording","findEventsByContent","timestampToRelativeTime","formatTime","parseTimeString","jsxDEV","_jsxDEV","Fragment","_Fragment","getEventTypeInfo","event","eventTypes","name","color","symbol","baseInfo","type","data","source","sourceNames","undefined","subType","App","_s","events","setEvents","error","setError","isPlaying","setIsPlaying","recording","setRecording","cutTimestamp","setCutTimestamp","beforeSeconds","setBeforeSeconds","afterSeconds","setAfterSeconds","searchTerm","setSearchTerm","foundEvents","setFoundEvents","playerRef","replayer","currentTime","setCurrentTime","duration","setDuration","isTrimmingMode","setIsTrimmingMode","trimStart","setTrimStart","trimEnd","setTrimEnd","timelineUpdateInterval","eventMarkers","setEventMarkers","processEventMarkers","eventsArray","recordingAnalysis","startTime","markers","eventsByTime","forEach","relativeTime","timestamp","percentage","key","Math","floor","push","typeInfo","Object","entries","incrementalSnapshots","filter","e","otherEvents","length","bySubType","snapshots","representative","count","grouped","sort","a","b","handleFileUpload","file","reader","FileReader","onload","content","target","result","jsonData","JSON","parse","text","TextDecoder","decode","console","log","Array","isArray","slice","analysis","err","message","onerror","readAsText","handleFileDrop","preventDefault","files","dataTransfer","handleDragOver","initializePlayer","current","destroy","destroyError","warn","innerHTML","fullSnapshots","domUpdates","root","skipInactive","showWarning","blockClass","liveMode","triggerFocus","showDebug","insertStyleRules","on","state","size","metadata","getMetaData","totalDuration","totalTime","handlePlay","play","setInterval","time","getCurrentTime","handlePause","pause","clearInterval","handleStop","handleSeek","searchEvents","trim","found","fillTimestamp","relativeSeconds","handleStartTrimming","handleSaveTrim","clip","startSeconds","endSeconds","dataStr","encodeURIComponent","stringify","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","handleCancelTrim","handleTrimHandleChange","value","max","min","handleCut","action","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onDragOver","onChange","id","htmlFor","eventCount","Date","toLocaleTimeString","endTime","ref","map","marker","index","style","left","backgroundColor","title","onClick","currentTarget","rect","getBoundingClientRect","x","clientX","width","seekTime","onMouseDown","stopPropagation","startX","parentElement","handleMouseMove","deltaX","deltaPercent","newTime","handleMouseUp","removeEventListener","addEventListener","startValue","newValue","disabled","_c","$RefreshReg$"],"sources":["/Users/ogonen/rrweb/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { Replayer } from \"rrweb\";\nimport \"./App.css\";\nimport {\n  cutRecording,\n  trimRecording,\n  analyzeRecording,\n  findEventsByContent,\n  timestampToRelativeTime,\n  formatTime,\n  parseTimeString,\n} from \"./RecordingCutter\";\n\n// Event type mapping for rrweb\nconst getEventTypeInfo = (event) => {\n  const eventTypes = {\n    0: { name: \"DomContentLoaded\", color: \"#4CAF50\", symbol: \"📄\" },\n    1: { name: \"Load\", color: \"#2196F3\", symbol: \"✅\" },\n    2: { name: \"FullSnapshot\", color: \"#FF9800\", symbol: \"📸\" },\n    3: { name: \"IncrementalSnapshot\", color: \"#9C27B0\", symbol: \"🔄\" },\n    4: { name: \"Meta\", color: \"#795548\", symbol: \"ℹ️\" },\n    5: { name: \"Custom\", color: \"#607D8B\", symbol: \"⭐\" },\n  };\n\n  const baseInfo = eventTypes[event.type] || {\n    name: \"Unknown\",\n    color: \"#666\",\n    symbol: \"❓\",\n  };\n\n  // Add more detail for incremental snapshots\n  if (event.type === 3 && event.data) {\n    const source = event.data.source;\n    const sourceNames = {\n      0: \"Mutation\",\n      1: \"MouseMove\",\n      2: \"MouseInteraction\",\n      3: \"Scroll\",\n      4: \"ViewportResize\",\n      5: \"Input\",\n      6: \"TouchMove\",\n      7: \"MediaInteraction\",\n      8: \"StyleSheetRule\",\n      9: \"CanvasMutation\",\n      10: \"Font\",\n      11: \"Log\",\n      12: \"Drag\",\n      13: \"StyleDeclaration\",\n    };\n\n    if (sourceNames[source] !== undefined) {\n      return {\n        ...baseInfo,\n        name: `${baseInfo.name} (${sourceNames[source]})`,\n        subType: sourceNames[source],\n      };\n    }\n  }\n\n  return baseInfo;\n};\n\nfunction App() {\n  const [events, setEvents] = useState(null);\n  const [error, setError] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [recording, setRecording] = useState(null); // Analysis of current recording\n  const [cutTimestamp, setCutTimestamp] = useState(\"\");\n  const [beforeSeconds, setBeforeSeconds] = useState(5);\n  const [afterSeconds, setAfterSeconds] = useState(5);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [foundEvents, setFoundEvents] = useState([]);\n  const playerRef = useRef(null);\n  const replayer = useRef(null);\n\n  // Player timeline states\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [isTrimmingMode, setIsTrimmingMode] = useState(false);\n  const [trimStart, setTrimStart] = useState(0);\n  const [trimEnd, setTrimEnd] = useState(0);\n  const timelineUpdateInterval = useRef(null);\n  const [eventMarkers, setEventMarkers] = useState([]);\n\n  const processEventMarkers = (eventsArray, recordingAnalysis) => {\n    if (!eventsArray || !recordingAnalysis) return [];\n\n    const startTime = recordingAnalysis.startTime;\n    const markers = [];\n\n    // Group events by timestamp to avoid overlapping markers\n    const eventsByTime = {};\n\n    eventsArray.forEach((event) => {\n      const relativeTime = event.timestamp - startTime;\n      const percentage = (relativeTime / recordingAnalysis.duration) * 100;\n\n      const key = Math.floor(percentage * 10) / 10; // Round to 0.1%\n\n      if (!eventsByTime[key]) {\n        eventsByTime[key] = [];\n      }\n\n      eventsByTime[key].push({\n        ...event,\n        relativeTime,\n        percentage,\n        typeInfo: getEventTypeInfo(event),\n      });\n    });\n\n    // Convert to array and limit incremental snapshots\n    Object.entries(eventsByTime).forEach(([key, events]) => {\n      // If there are many incremental snapshots at the same time, group them\n      const incrementalSnapshots = events.filter((e) => e.type === 3);\n      const otherEvents = events.filter((e) => e.type !== 3);\n\n      // Add all non-incremental events\n      markers.push(...otherEvents);\n\n      // For incremental snapshots, only add a representative sample\n      if (incrementalSnapshots.length > 0) {\n        // Group by subtype\n        const bySubType = {};\n        incrementalSnapshots.forEach((e) => {\n          const subType = e.typeInfo.subType || \"Unknown\";\n          if (!bySubType[subType]) {\n            bySubType[subType] = [];\n          }\n          bySubType[subType].push(e);\n        });\n\n        // Add one marker per subtype\n        Object.entries(bySubType).forEach(([subType, snapshots]) => {\n          const representative = snapshots[0];\n          markers.push({\n            ...representative,\n            count: snapshots.length,\n            grouped: true,\n          });\n        });\n      }\n    });\n\n    return markers.sort((a, b) => a.timestamp - b.timestamp);\n  };\n\n  const handleFileUpload = (file) => {\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const content = e.target.result;\n        let jsonData;\n\n        if (typeof content === \"string\") {\n          jsonData = JSON.parse(content);\n        } else {\n          // Handle binary content\n          const text = new TextDecoder().decode(content);\n          jsonData = JSON.parse(text);\n        }\n\n        // Debug: Log the raw data structure\n        console.log(\"Raw JSON data:\", jsonData);\n        console.log(\"Data type:\", typeof jsonData);\n        console.log(\"Is array:\", Array.isArray(jsonData));\n\n        // Handle different rrweb recording formats\n        let eventsArray;\n        if (Array.isArray(jsonData)) {\n          eventsArray = jsonData;\n        } else if (jsonData.events && Array.isArray(jsonData.events)) {\n          // Some recordings store events in a nested structure\n          eventsArray = jsonData.events;\n        } else if (jsonData.data && Array.isArray(jsonData.data)) {\n          eventsArray = jsonData.data;\n        } else {\n          // Single event wrapped in array\n          eventsArray = [jsonData];\n        }\n\n        console.log(\"Processed events array:\", eventsArray.length, \"events\");\n        console.log(\"First few events:\", eventsArray.slice(0, 3));\n\n        setEvents(eventsArray);\n        setError(null);\n\n        // Analyze the recording\n        const analysis = analyzeRecording(eventsArray);\n        setRecording(analysis);\n        console.log(\"Recording loaded:\", analysis);\n\n        // Process event markers\n        const markers = processEventMarkers(eventsArray, analysis);\n        setEventMarkers(markers);\n      } catch (err) {\n        console.error(\"Error parsing file:\", err);\n        setError(\n          `Error loading file: ${err.message}. Please make sure the file contains valid rrweb recording data.`\n        );\n      }\n    };\n\n    reader.onerror = () => {\n      setError(\"Error reading file. Please try again.\");\n    };\n\n    // Try to read as text first, fall back to binary if needed\n    reader.readAsText(file);\n  };\n\n  const handleFileDrop = (e) => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileUpload(files[0]);\n    }\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const initializePlayer = () => {\n    if (!events || !playerRef.current) return;\n\n    try {\n      // Clean up existing replayer with error handling\n      if (replayer.current) {\n        try {\n          replayer.current.destroy();\n        } catch (destroyError) {\n          console.warn(\"Error destroying previous replayer:\", destroyError);\n          // Force cleanup by clearing the container\n          if (playerRef.current) {\n            playerRef.current.innerHTML = \"\";\n          }\n        }\n        replayer.current = null;\n      }\n\n      // Ensure player container is clean\n      if (playerRef.current) {\n        playerRef.current.innerHTML = \"\";\n      }\n\n      // Debug: Check the events structure\n      console.log(\"Events to replay:\", events.length, \"events\");\n      const fullSnapshots = events.filter((e) => e.type === 2);\n      const domUpdates = events.filter((e) => e.type === 3);\n      console.log(\"Full snapshots:\", fullSnapshots.length);\n      console.log(\"DOM updates:\", domUpdates.length);\n\n      if (fullSnapshots.length === 0) {\n        setError(\n          \"No full snapshot found in recording. This recording may be incomplete.\"\n        );\n        return;\n      }\n\n      // Create new replayer instance with enhanced configuration\n      replayer.current = new Replayer(events, {\n        root: playerRef.current,\n        skipInactive: false,\n        showWarning: true,\n        blockClass: \"rr-block\",\n        liveMode: false,\n        triggerFocus: false,\n        showDebug: false,\n        insertStyleRules: [\n          \".rr-block { background: rgba(0, 0, 0, 0.1); }\",\n          \"iframe { background: white !important; }\",\n        ],\n      });\n\n      // Add event listeners for debugging\n      replayer.current.on(\"state-change\", (state) => {\n        console.log(\"Replayer state changed:\", state);\n      });\n\n      replayer.current.on(\"resize\", (size) => {\n        console.log(\"Replayer resized:\", size);\n      });\n\n      // Get the duration from the replayer\n      const metadata = replayer.current.getMetaData();\n      const totalDuration = metadata.totalTime;\n      setDuration(totalDuration);\n      setTrimEnd(totalDuration);\n\n      console.log(\"Replayer initialized successfully\");\n    } catch (err) {\n      console.error(\"Error initializing replayer:\", err);\n      setError(`Error initializing player: ${err.message}`);\n    }\n  };\n\n  useEffect(() => {\n    if (events && playerRef.current) {\n      initializePlayer();\n    }\n\n    // Cleanup on unmount\n    return () => {\n      if (replayer.current) {\n        try {\n          replayer.current.destroy();\n        } catch (destroyError) {\n          console.warn(\"Error destroying replayer on cleanup:\", destroyError);\n          // Force cleanup by clearing the container\n          if (playerRef.current) {\n            playerRef.current.innerHTML = \"\";\n          }\n        }\n        replayer.current = null;\n      }\n    };\n  }, [events]);\n\n  const handlePlay = () => {\n    if (replayer.current) {\n      // Resume from current position instead of starting from beginning\n      if (currentTime > 0) {\n        replayer.current.play(currentTime);\n      } else {\n        replayer.current.play();\n      }\n      setIsPlaying(true);\n      // Start updating timeline\n      timelineUpdateInterval.current = setInterval(() => {\n        if (replayer.current) {\n          const time = replayer.current.getCurrentTime();\n          setCurrentTime(time);\n        }\n      }, 100);\n    }\n  };\n\n  const handlePause = () => {\n    if (replayer.current) {\n      replayer.current.pause();\n      setIsPlaying(false);\n      // Stop updating timeline\n      if (timelineUpdateInterval.current) {\n        clearInterval(timelineUpdateInterval.current);\n      }\n    }\n  };\n\n  const handleStop = () => {\n    if (replayer.current) {\n      replayer.current.pause();\n      // Reset to beginning\n      replayer.current.play(0);\n      replayer.current.pause();\n      setIsPlaying(false);\n      setCurrentTime(0);\n      // Stop updating timeline\n      if (timelineUpdateInterval.current) {\n        clearInterval(timelineUpdateInterval.current);\n      }\n    }\n  };\n\n  const handleSeek = (time) => {\n    if (replayer.current) {\n      replayer.current.play(time);\n      replayer.current.pause();\n      setCurrentTime(time);\n    }\n  };\n\n  const searchEvents = () => {\n    if (!events || !searchTerm.trim()) {\n      setFoundEvents([]);\n      return;\n    }\n\n    const found = findEventsByContent(events, searchTerm.trim());\n    setFoundEvents(found);\n  };\n\n  const fillTimestamp = (relativeSeconds) => {\n    setCutTimestamp(formatTime(relativeSeconds));\n  };\n\n  const handleStartTrimming = () => {\n    setIsTrimmingMode(true);\n    setTrimStart(currentTime);\n    setTrimEnd(duration);\n  };\n\n  const handleSaveTrim = () => {\n    if (!events || !recording) {\n      setError(\"No recording loaded\");\n      return;\n    }\n\n    try {\n      // Use the new trimRecording function with millisecond timestamps\n      const clip = trimRecording(events, trimStart, trimEnd);\n\n      // Convert milliseconds to seconds for the filename\n      const startSeconds = trimStart / 1000;\n      const endSeconds = trimEnd / 1000;\n\n      // Download the trimmed clip\n      const dataStr =\n        \"data:text/json;charset=utf-8,\" +\n        encodeURIComponent(JSON.stringify(clip, null, 2));\n      const downloadAnchorNode = document.createElement(\"a\");\n      downloadAnchorNode.setAttribute(\"href\", dataStr);\n      downloadAnchorNode.setAttribute(\n        \"download\",\n        `trimmed_${formatTime(startSeconds)}_to_${formatTime(endSeconds)}.json`\n      );\n      document.body.appendChild(downloadAnchorNode);\n      downloadAnchorNode.click();\n      downloadAnchorNode.remove();\n\n      setIsTrimmingMode(false);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error trimming recording:\", err);\n      setError(`Error trimming recording: ${err.message}`);\n    }\n  };\n\n  const handleCancelTrim = () => {\n    setIsTrimmingMode(false);\n    setTrimStart(0);\n    setTrimEnd(duration);\n  };\n\n  const handleTrimHandleChange = (type, value) => {\n    if (type === \"start\") {\n      setTrimStart(Math.max(0, Math.min(value, trimEnd - 1000))); // Ensure at least 1 second\n    } else {\n      setTrimEnd(Math.max(trimStart + 1000, Math.min(value, duration)));\n    }\n  };\n\n  const handleCut = (action) => {\n    if (!events || !recording) {\n      setError(\"No recording loaded\");\n      return;\n    }\n\n    try {\n      const relativeSeconds = parseTimeString(cutTimestamp);\n      const clip = cutRecording(\n        events,\n        relativeSeconds,\n        beforeSeconds,\n        afterSeconds\n      );\n\n      if (action === \"load\") {\n        // Replace current recording with the clip\n        setEvents(clip);\n        const analysis = analyzeRecording(clip);\n        setRecording(analysis);\n        setCutTimestamp(\"\");\n        setFoundEvents([]);\n      } else if (action === \"download\") {\n        // Download the clip as JSON\n        const dataStr =\n          \"data:text/json;charset=utf-8,\" +\n          encodeURIComponent(JSON.stringify(clip, null, 2));\n        const downloadAnchorNode = document.createElement(\"a\");\n        downloadAnchorNode.setAttribute(\"href\", dataStr);\n        downloadAnchorNode.setAttribute(\n          \"download\",\n          `clip_${cutTimestamp || \"segment\"}.json`\n        );\n        document.body.appendChild(downloadAnchorNode);\n        downloadAnchorNode.click();\n        downloadAnchorNode.remove();\n      }\n    } catch (err) {\n      console.error(\"Error cutting recording:\", err);\n      setError(`Error cutting recording: ${err.message}`);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"header\">\n        <h1>RRWeb Player</h1>\n        <p>Upload an rrweb recording file to play it back</p>\n      </div>\n\n      <div className=\"upload-section\">\n        <div\n          className=\"upload-area\"\n          onDrop={handleFileDrop}\n          onDragOver={handleDragOver}\n        >\n          <input\n            type=\"file\"\n            onChange={(e) => handleFileUpload(e.target.files[0])}\n            className=\"file-input\"\n            id=\"file-upload\"\n          />\n          <label htmlFor=\"file-upload\" className=\"upload-label\">\n            <div className=\"upload-icon\">📁</div>\n            <div className=\"upload-text\">\n              <strong>Choose a file</strong> or drag it here\n            </div>\n            <div className=\"upload-subtext\">\n              Supports rrweb recording files (with or without .json extension)\n            </div>\n          </label>\n        </div>\n      </div>\n\n      {error && <div className=\"error\">{error}</div>}\n\n      {recording && (\n        <div className=\"recording-info\">\n          <h3>Recording Information</h3>\n          <div className=\"recording-stats\">\n            <div className=\"stat\">\n              <span className=\"stat-label\">Duration:</span>\n              <span className=\"stat-value\">\n                {formatTime(recording.duration)}\n              </span>\n            </div>\n            <div className=\"stat\">\n              <span className=\"stat-label\">Events:</span>\n              <span className=\"stat-value\">{recording.eventCount}</span>\n            </div>\n            <div className=\"stat\">\n              <span className=\"stat-label\">Start:</span>\n              <span className=\"stat-value\">\n                {new Date(recording.startTime).toLocaleTimeString()}\n              </span>\n            </div>\n            <div className=\"stat\">\n              <span className=\"stat-label\">End:</span>\n              <span className=\"stat-value\">\n                {new Date(recording.endTime).toLocaleTimeString()}\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {events && (\n        <div className=\"player-section\">\n          <div ref={playerRef} className=\"player\"></div>\n\n          <div className=\"custom-controls\">\n            <div className=\"timeline-container\">\n              {/* Event markers */}\n              <div className=\"event-markers-container\">\n                {eventMarkers.map((marker, index) => (\n                  <div\n                    key={`${marker.timestamp}-${index}`}\n                    className={`event-marker ${\n                      marker.grouped ? \"grouped\" : \"\"\n                    }`}\n                    style={{\n                      left: `${marker.percentage}%`,\n                      backgroundColor: marker.typeInfo.color,\n                    }}\n                    title={`${marker.typeInfo.name}${\n                      marker.grouped ? ` (${marker.count} events)` : \"\"\n                    } at ${formatTime(marker.relativeTime / 1000)}`}\n                    onClick={() => handleSeek(marker.relativeTime)}\n                  >\n                    <span className=\"event-marker-symbol\">\n                      {marker.typeInfo.symbol}\n                    </span>\n                    {marker.grouped && (\n                      <span className=\"event-marker-count\">{marker.count}</span>\n                    )}\n                  </div>\n                ))}\n              </div>\n\n              <div\n                className=\"timeline\"\n                onClick={(e) => {\n                  if (!isTrimmingMode && e.target === e.currentTarget) {\n                    const rect = e.currentTarget.getBoundingClientRect();\n                    const x = e.clientX - rect.left;\n                    const percentage = x / rect.width;\n                    const seekTime = percentage * duration;\n                    handleSeek(seekTime);\n                  }\n                }}\n              >\n                <div\n                  className=\"timeline-progress\"\n                  style={{ width: `${(currentTime / duration) * 100}%` }}\n                />\n\n                {/* Draggable timeline scrubber */}\n                {!isTrimmingMode && (\n                  <div\n                    className=\"timeline-scrubber\"\n                    style={{ left: `${(currentTime / duration) * 100}%` }}\n                    onMouseDown={(e) => {\n                      e.stopPropagation();\n                      const startX = e.clientX;\n                      const startTime = currentTime;\n                      const rect =\n                        e.currentTarget.parentElement.getBoundingClientRect();\n\n                      const handleMouseMove = (e) => {\n                        const deltaX = e.clientX - startX;\n                        const deltaPercent = deltaX / rect.width;\n                        const newTime = Math.max(\n                          0,\n                          Math.min(\n                            duration,\n                            startTime + deltaPercent * duration\n                          )\n                        );\n                        handleSeek(newTime);\n                      };\n\n                      const handleMouseUp = () => {\n                        document.removeEventListener(\n                          \"mousemove\",\n                          handleMouseMove\n                        );\n                        document.removeEventListener(\"mouseup\", handleMouseUp);\n                      };\n\n                      document.addEventListener(\"mousemove\", handleMouseMove);\n                      document.addEventListener(\"mouseup\", handleMouseUp);\n                    }}\n                  />\n                )}\n\n                {isTrimmingMode && (\n                  <>\n                    <div\n                      className=\"trim-overlay trim-start\"\n                      style={{ width: `${(trimStart / duration) * 100}%` }}\n                    />\n                    <div\n                      className=\"trim-overlay trim-end\"\n                      style={{\n                        left: `${(trimEnd / duration) * 100}%`,\n                        width: `${((duration - trimEnd) / duration) * 100}%`,\n                      }}\n                    />\n                    <div\n                      className=\"trim-handle trim-handle-start\"\n                      style={{ left: `${(trimStart / duration) * 100}%` }}\n                      onMouseDown={(e) => {\n                        e.stopPropagation();\n                        const startX = e.clientX;\n                        const startValue = trimStart;\n                        const rect =\n                          e.currentTarget.parentElement.getBoundingClientRect();\n\n                        const handleMouseMove = (e) => {\n                          const deltaX = e.clientX - startX;\n                          const deltaPercent = deltaX / rect.width;\n                          const newValue = startValue + deltaPercent * duration;\n                          handleTrimHandleChange(\"start\", newValue);\n                        };\n\n                        const handleMouseUp = () => {\n                          document.removeEventListener(\n                            \"mousemove\",\n                            handleMouseMove\n                          );\n                          document.removeEventListener(\n                            \"mouseup\",\n                            handleMouseUp\n                          );\n                        };\n\n                        document.addEventListener(\"mousemove\", handleMouseMove);\n                        document.addEventListener(\"mouseup\", handleMouseUp);\n                      }}\n                    />\n                    <div\n                      className=\"trim-handle trim-handle-end\"\n                      style={{ left: `${(trimEnd / duration) * 100}%` }}\n                      onMouseDown={(e) => {\n                        e.stopPropagation();\n                        const startX = e.clientX;\n                        const startValue = trimEnd;\n                        const rect =\n                          e.currentTarget.parentElement.getBoundingClientRect();\n\n                        const handleMouseMove = (e) => {\n                          const deltaX = e.clientX - startX;\n                          const deltaPercent = deltaX / rect.width;\n                          const newValue = startValue + deltaPercent * duration;\n                          handleTrimHandleChange(\"end\", newValue);\n                        };\n\n                        const handleMouseUp = () => {\n                          document.removeEventListener(\n                            \"mousemove\",\n                            handleMouseMove\n                          );\n                          document.removeEventListener(\n                            \"mouseup\",\n                            handleMouseUp\n                          );\n                        };\n\n                        document.addEventListener(\"mousemove\", handleMouseMove);\n                        document.addEventListener(\"mouseup\", handleMouseUp);\n                      }}\n                    />\n                  </>\n                )}\n              </div>\n\n              <div className=\"timeline-times\">\n                <span>{formatTime(currentTime / 1000)}</span>\n                {isTrimmingMode && (\n                  <span className=\"trim-info\">\n                    Trim: {formatTime(trimStart / 1000)} -{\" \"}\n                    {formatTime(trimEnd / 1000)}\n                  </span>\n                )}\n                <span>{formatTime(duration / 1000)}</span>\n              </div>\n            </div>\n\n            <div className=\"player-controls\">\n              <button onClick={handlePlay} disabled={isPlaying}>\n                ▶️ Play\n              </button>\n              <button onClick={handlePause} disabled={!isPlaying}>\n                ⏸️ Pause\n              </button>\n              <button onClick={handleStop}>⏹️ Stop</button>\n\n              {!isTrimmingMode ? (\n                <button onClick={handleStartTrimming} className=\"trim-button\">\n                  ✂️ Trim\n                </button>\n              ) : (\n                <>\n                  <button onClick={handleSaveTrim} className=\"save-trim-button\">\n                    💾 Save Trim\n                  </button>\n                  <button\n                    onClick={handleCancelTrim}\n                    className=\"cancel-trim-button\"\n                  >\n                    ❌ Cancel\n                  </button>\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}