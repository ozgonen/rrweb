{"ast":null,"code":"var _jsxFileName = \"/Users/ogonen/rrweb/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Replayer } from \"rrweb\";\nimport \"./App.css\";\nimport { cutRecording, analyzeRecording, findEventsByContent, timestampToRelativeTime, formatTime, parseTimeString } from \"./RecordingCutter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [events, setEvents] = useState(null);\n  const [error, setError] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [recording, setRecording] = useState(null); // Analysis of current recording\n  const [cutTimestamp, setCutTimestamp] = useState(\"\");\n  const [beforeSeconds, setBeforeSeconds] = useState(5);\n  const [afterSeconds, setAfterSeconds] = useState(5);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [foundEvents, setFoundEvents] = useState([]);\n  const playerRef = useRef(null);\n  const replayer = useRef(null);\n\n  // Player timeline states\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [isTrimmingMode, setIsTrimmingMode] = useState(false);\n  const [trimStart, setTrimStart] = useState(0);\n  const [trimEnd, setTrimEnd] = useState(0);\n  const timelineUpdateInterval = useRef(null);\n  const handleFileUpload = file => {\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const content = e.target.result;\n        let jsonData;\n        if (typeof content === \"string\") {\n          jsonData = JSON.parse(content);\n        } else {\n          // Handle binary content\n          const text = new TextDecoder().decode(content);\n          jsonData = JSON.parse(text);\n        }\n\n        // Debug: Log the raw data structure\n        console.log(\"Raw JSON data:\", jsonData);\n        console.log(\"Data type:\", typeof jsonData);\n        console.log(\"Is array:\", Array.isArray(jsonData));\n\n        // Handle different rrweb recording formats\n        let eventsArray;\n        if (Array.isArray(jsonData)) {\n          eventsArray = jsonData;\n        } else if (jsonData.events && Array.isArray(jsonData.events)) {\n          // Some recordings store events in a nested structure\n          eventsArray = jsonData.events;\n        } else if (jsonData.data && Array.isArray(jsonData.data)) {\n          eventsArray = jsonData.data;\n        } else {\n          // Single event wrapped in array\n          eventsArray = [jsonData];\n        }\n        console.log(\"Processed events array:\", eventsArray.length, \"events\");\n        console.log(\"First few events:\", eventsArray.slice(0, 3));\n        setEvents(eventsArray);\n        setError(null);\n\n        // Analyze the recording\n        const analysis = analyzeRecording(eventsArray);\n        setRecording(analysis);\n        console.log(\"Recording loaded:\", analysis);\n      } catch (err) {\n        console.error(\"Error parsing file:\", err);\n        setError(`Error loading file: ${err.message}. Please make sure the file contains valid rrweb recording data.`);\n      }\n    };\n    reader.onerror = () => {\n      setError(\"Error reading file. Please try again.\");\n    };\n\n    // Try to read as text first, fall back to binary if needed\n    reader.readAsText(file);\n  };\n  const handleFileDrop = e => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileUpload(files[0]);\n    }\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const initializePlayer = () => {\n    if (!events || !playerRef.current) return;\n    try {\n      // Clean up existing replayer with error handling\n      if (replayer.current) {\n        try {\n          replayer.current.destroy();\n        } catch (destroyError) {\n          console.warn(\"Error destroying previous replayer:\", destroyError);\n          // Force cleanup by clearing the container\n          if (playerRef.current) {\n            playerRef.current.innerHTML = \"\";\n          }\n        }\n        replayer.current = null;\n      }\n\n      // Ensure player container is clean\n      if (playerRef.current) {\n        playerRef.current.innerHTML = \"\";\n      }\n\n      // Debug: Check the events structure\n      console.log(\"Events to replay:\", events.length, \"events\");\n      const fullSnapshots = events.filter(e => e.type === 2);\n      const domUpdates = events.filter(e => e.type === 3);\n      console.log(\"Full snapshots:\", fullSnapshots.length);\n      console.log(\"DOM updates:\", domUpdates.length);\n      if (fullSnapshots.length === 0) {\n        setError(\"No full snapshot found in recording. This recording may be incomplete.\");\n        return;\n      }\n\n      // Create new replayer instance with enhanced configuration\n      replayer.current = new Replayer(events, {\n        root: playerRef.current,\n        skipInactive: false,\n        showWarning: true,\n        blockClass: \"rr-block\",\n        liveMode: false,\n        triggerFocus: false,\n        showDebug: false,\n        insertStyleRules: [\".rr-block { background: rgba(0, 0, 0, 0.1); }\", \"iframe { background: white !important; }\"]\n      });\n\n      // Add event listeners for debugging\n      replayer.current.on(\"state-change\", state => {\n        console.log(\"Replayer state changed:\", state);\n      });\n      replayer.current.on(\"resize\", size => {\n        console.log(\"Replayer resized:\", size);\n      });\n\n      // Get the duration from the replayer\n      const metadata = replayer.current.getMetaData();\n      const totalDuration = metadata.totalTime;\n      setDuration(totalDuration);\n      setTrimEnd(totalDuration);\n      console.log(\"Replayer initialized successfully\");\n    } catch (err) {\n      console.error(\"Error initializing replayer:\", err);\n      setError(`Error initializing player: ${err.message}`);\n    }\n  };\n  useEffect(() => {\n    if (events && playerRef.current) {\n      initializePlayer();\n    }\n\n    // Cleanup on unmount\n    return () => {\n      if (replayer.current) {\n        try {\n          replayer.current.destroy();\n        } catch (destroyError) {\n          console.warn(\"Error destroying replayer on cleanup:\", destroyError);\n          // Force cleanup by clearing the container\n          if (playerRef.current) {\n            playerRef.current.innerHTML = \"\";\n          }\n        }\n        replayer.current = null;\n      }\n    };\n  }, [events]);\n  const handlePlay = () => {\n    if (replayer.current) {\n      replayer.current.play();\n      setIsPlaying(true);\n      // Start updating timeline\n      timelineUpdateInterval.current = setInterval(() => {\n        if (replayer.current) {\n          const time = replayer.current.getCurrentTime();\n          setCurrentTime(time);\n        }\n      }, 100);\n    }\n  };\n  const handlePause = () => {\n    if (replayer.current) {\n      replayer.current.pause();\n      setIsPlaying(false);\n      // Stop updating timeline\n      if (timelineUpdateInterval.current) {\n        clearInterval(timelineUpdateInterval.current);\n      }\n    }\n  };\n  const handleStop = () => {\n    if (replayer.current) {\n      replayer.current.pause();\n      // Reset to beginning\n      replayer.current.play(0);\n      replayer.current.pause();\n      setIsPlaying(false);\n      setCurrentTime(0);\n      // Stop updating timeline\n      if (timelineUpdateInterval.current) {\n        clearInterval(timelineUpdateInterval.current);\n      }\n    }\n  };\n  const handleSeek = time => {\n    if (replayer.current) {\n      replayer.current.play(time);\n      replayer.current.pause();\n      setCurrentTime(time);\n    }\n  };\n  const searchEvents = () => {\n    if (!events || !searchTerm.trim()) {\n      setFoundEvents([]);\n      return;\n    }\n    const found = findEventsByContent(events, searchTerm.trim());\n    setFoundEvents(found);\n  };\n  const fillTimestamp = relativeSeconds => {\n    setCutTimestamp(formatTime(relativeSeconds));\n  };\n  const handleStartTrimming = () => {\n    setIsTrimmingMode(true);\n    setTrimStart(currentTime);\n    setTrimEnd(duration);\n  };\n  const handleSaveTrim = () => {\n    if (!events || !recording) {\n      setError(\"No recording loaded\");\n      return;\n    }\n    try {\n      // Convert milliseconds to seconds for the cutting function\n      const startSeconds = trimStart / 1000;\n      const endSeconds = trimEnd / 1000;\n      const durationSeconds = endSeconds - startSeconds;\n      const centerSeconds = startSeconds + durationSeconds / 2;\n      const beforeAfterSeconds = durationSeconds / 2;\n      const clip = cutRecording(events, centerSeconds, beforeAfterSeconds, beforeAfterSeconds);\n\n      // Download the trimmed clip\n      const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(clip, null, 2));\n      const downloadAnchorNode = document.createElement(\"a\");\n      downloadAnchorNode.setAttribute(\"href\", dataStr);\n      downloadAnchorNode.setAttribute(\"download\", `trimmed_${formatTime(startSeconds)}_to_${formatTime(endSeconds)}.json`);\n      document.body.appendChild(downloadAnchorNode);\n      downloadAnchorNode.click();\n      downloadAnchorNode.remove();\n      setIsTrimmingMode(false);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error trimming recording:\", err);\n      setError(`Error trimming recording: ${err.message}`);\n    }\n  };\n  const handleCancelTrim = () => {\n    setIsTrimmingMode(false);\n    setTrimStart(0);\n    setTrimEnd(duration);\n  };\n  const handleTrimHandleChange = (type, value) => {\n    if (type === \"start\") {\n      setTrimStart(Math.max(0, Math.min(value, trimEnd - 1000))); // Ensure at least 1 second\n    } else {\n      setTrimEnd(Math.max(trimStart + 1000, Math.min(value, duration)));\n    }\n  };\n  const handleCut = action => {\n    if (!events || !recording) {\n      setError(\"No recording loaded\");\n      return;\n    }\n    try {\n      const relativeSeconds = parseTimeString(cutTimestamp);\n      const clip = cutRecording(events, relativeSeconds, beforeSeconds, afterSeconds);\n      if (action === \"load\") {\n        // Replace current recording with the clip\n        setEvents(clip);\n        const analysis = analyzeRecording(clip);\n        setRecording(analysis);\n        setCutTimestamp(\"\");\n        setFoundEvents([]);\n      } else if (action === \"download\") {\n        // Download the clip as JSON\n        const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(clip, null, 2));\n        const downloadAnchorNode = document.createElement(\"a\");\n        downloadAnchorNode.setAttribute(\"href\", dataStr);\n        downloadAnchorNode.setAttribute(\"download\", `clip_${cutTimestamp || \"segment\"}.json`);\n        document.body.appendChild(downloadAnchorNode);\n        downloadAnchorNode.click();\n        downloadAnchorNode.remove();\n      }\n    } catch (err) {\n      console.error(\"Error cutting recording:\", err);\n      setError(`Error cutting recording: ${err.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"RRWeb Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload an rrweb recording file to play it back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-area\",\n        onDrop: handleFileDrop,\n        onDragOver: handleDragOver,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => handleFileUpload(e.target.files[0]),\n          className: \"file-input\",\n          id: \"file-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          className: \"upload-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-icon\",\n            children: \"\\uD83D\\uDCC1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Choose a file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this), \" or drag it here\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-subtext\",\n            children: \"Supports rrweb recording files (with or without .json extension)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 17\n    }, this), recording && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recording-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recording Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Duration:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: formatTime(recording.duration)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Events:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: recording.eventCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Start:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: new Date(recording.startTime).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"End:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: new Date(recording.endTime).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 9\n    }, this), events && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePlay,\n          disabled: isPlaying,\n          children: \"\\u25B6\\uFE0F Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePause,\n          disabled: !isPlaying,\n          children: \"\\u23F8\\uFE0F Pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStop,\n          children: \"\\u23F9\\uFE0F Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: playerRef,\n        className: \"player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 9\n    }, this), events && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Search Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search for text content in events...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: searchEvents,\n          className: \"search-button\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 11\n      }, this), foundEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Found \", foundEvents.length, \" events:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"events-list\",\n          children: [foundEvents.slice(0, 10).map((event, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-time\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: formatTime(timestampToRelativeTime(event.timestamp, recording))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-content\",\n              children: [JSON.stringify(event).substring(0, 200), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => fillTimestamp(timestampToRelativeTime(event.timestamp, recording)),\n              className: \"fill-button\",\n              children: \"Use Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 19\n          }, this)), foundEvents.length > 10 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"... and \", foundEvents.length - 10, \" more\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 9\n    }, this), events && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cutting-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Cut Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cutting-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cutting-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Time (MM:SS or seconds):\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"1:30 or 90\",\n              value: cutTimestamp,\n              onChange: e => setCutTimestamp(e.target.value),\n              className: \"time-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Before (seconds):\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"0\",\n              max: \"60\",\n              value: beforeSeconds,\n              onChange: e => setBeforeSeconds(Number(e.target.value)),\n              className: \"duration-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"After (seconds):\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"0\",\n              max: \"60\",\n              value: afterSeconds,\n              onChange: e => setAfterSeconds(Number(e.target.value)),\n              className: \"duration-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cutting-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCut(\"load\"),\n            className: \"cut-button primary\",\n            children: \"Load Clip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCut(\"download\"),\n            className: \"cut-button secondary\",\n            children: \"Download Clip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cutting-help\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Instructions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 17\n            }, this), \" Enter a time within the video duration (\", recording ? formatTime(recording.duration) : \"0:00\", \"). The clip will include the specified seconds before and after that time.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 373,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6TwTMeWJC7PNk9FWrVXLKp0Tivk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Replayer","cutRecording","analyzeRecording","findEventsByContent","timestampToRelativeTime","formatTime","parseTimeString","jsxDEV","_jsxDEV","App","_s","events","setEvents","error","setError","isPlaying","setIsPlaying","recording","setRecording","cutTimestamp","setCutTimestamp","beforeSeconds","setBeforeSeconds","afterSeconds","setAfterSeconds","searchTerm","setSearchTerm","foundEvents","setFoundEvents","playerRef","replayer","currentTime","setCurrentTime","duration","setDuration","isTrimmingMode","setIsTrimmingMode","trimStart","setTrimStart","trimEnd","setTrimEnd","timelineUpdateInterval","handleFileUpload","file","reader","FileReader","onload","e","content","target","result","jsonData","JSON","parse","text","TextDecoder","decode","console","log","Array","isArray","eventsArray","data","length","slice","analysis","err","message","onerror","readAsText","handleFileDrop","preventDefault","files","dataTransfer","handleDragOver","initializePlayer","current","destroy","destroyError","warn","innerHTML","fullSnapshots","filter","type","domUpdates","root","skipInactive","showWarning","blockClass","liveMode","triggerFocus","showDebug","insertStyleRules","on","state","size","metadata","getMetaData","totalDuration","totalTime","handlePlay","play","setInterval","time","getCurrentTime","handlePause","pause","clearInterval","handleStop","handleSeek","searchEvents","trim","found","fillTimestamp","relativeSeconds","handleStartTrimming","handleSaveTrim","startSeconds","endSeconds","durationSeconds","centerSeconds","beforeAfterSeconds","clip","dataStr","encodeURIComponent","stringify","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","handleCancelTrim","handleTrimHandleChange","value","Math","max","min","handleCut","action","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onDragOver","onChange","id","htmlFor","eventCount","Date","startTime","toLocaleTimeString","endTime","onClick","disabled","ref","placeholder","map","event","index","timestamp","substring","Number","_c","$RefreshReg$"],"sources":["/Users/ogonen/rrweb/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { Replayer } from \"rrweb\";\nimport \"./App.css\";\nimport {\n  cutRecording,\n  analyzeRecording,\n  findEventsByContent,\n  timestampToRelativeTime,\n  formatTime,\n  parseTimeString,\n} from \"./RecordingCutter\";\n\nfunction App() {\n  const [events, setEvents] = useState(null);\n  const [error, setError] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [recording, setRecording] = useState(null); // Analysis of current recording\n  const [cutTimestamp, setCutTimestamp] = useState(\"\");\n  const [beforeSeconds, setBeforeSeconds] = useState(5);\n  const [afterSeconds, setAfterSeconds] = useState(5);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [foundEvents, setFoundEvents] = useState([]);\n  const playerRef = useRef(null);\n  const replayer = useRef(null);\n\n  // Player timeline states\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [isTrimmingMode, setIsTrimmingMode] = useState(false);\n  const [trimStart, setTrimStart] = useState(0);\n  const [trimEnd, setTrimEnd] = useState(0);\n  const timelineUpdateInterval = useRef(null);\n\n  const handleFileUpload = (file) => {\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const content = e.target.result;\n        let jsonData;\n\n        if (typeof content === \"string\") {\n          jsonData = JSON.parse(content);\n        } else {\n          // Handle binary content\n          const text = new TextDecoder().decode(content);\n          jsonData = JSON.parse(text);\n        }\n\n        // Debug: Log the raw data structure\n        console.log(\"Raw JSON data:\", jsonData);\n        console.log(\"Data type:\", typeof jsonData);\n        console.log(\"Is array:\", Array.isArray(jsonData));\n\n        // Handle different rrweb recording formats\n        let eventsArray;\n        if (Array.isArray(jsonData)) {\n          eventsArray = jsonData;\n        } else if (jsonData.events && Array.isArray(jsonData.events)) {\n          // Some recordings store events in a nested structure\n          eventsArray = jsonData.events;\n        } else if (jsonData.data && Array.isArray(jsonData.data)) {\n          eventsArray = jsonData.data;\n        } else {\n          // Single event wrapped in array\n          eventsArray = [jsonData];\n        }\n\n        console.log(\"Processed events array:\", eventsArray.length, \"events\");\n        console.log(\"First few events:\", eventsArray.slice(0, 3));\n\n        setEvents(eventsArray);\n        setError(null);\n\n        // Analyze the recording\n        const analysis = analyzeRecording(eventsArray);\n        setRecording(analysis);\n        console.log(\"Recording loaded:\", analysis);\n      } catch (err) {\n        console.error(\"Error parsing file:\", err);\n        setError(\n          `Error loading file: ${err.message}. Please make sure the file contains valid rrweb recording data.`\n        );\n      }\n    };\n\n    reader.onerror = () => {\n      setError(\"Error reading file. Please try again.\");\n    };\n\n    // Try to read as text first, fall back to binary if needed\n    reader.readAsText(file);\n  };\n\n  const handleFileDrop = (e) => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileUpload(files[0]);\n    }\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const initializePlayer = () => {\n    if (!events || !playerRef.current) return;\n\n    try {\n      // Clean up existing replayer with error handling\n      if (replayer.current) {\n        try {\n          replayer.current.destroy();\n        } catch (destroyError) {\n          console.warn(\"Error destroying previous replayer:\", destroyError);\n          // Force cleanup by clearing the container\n          if (playerRef.current) {\n            playerRef.current.innerHTML = \"\";\n          }\n        }\n        replayer.current = null;\n      }\n\n      // Ensure player container is clean\n      if (playerRef.current) {\n        playerRef.current.innerHTML = \"\";\n      }\n\n      // Debug: Check the events structure\n      console.log(\"Events to replay:\", events.length, \"events\");\n      const fullSnapshots = events.filter((e) => e.type === 2);\n      const domUpdates = events.filter((e) => e.type === 3);\n      console.log(\"Full snapshots:\", fullSnapshots.length);\n      console.log(\"DOM updates:\", domUpdates.length);\n\n      if (fullSnapshots.length === 0) {\n        setError(\n          \"No full snapshot found in recording. This recording may be incomplete.\"\n        );\n        return;\n      }\n\n      // Create new replayer instance with enhanced configuration\n      replayer.current = new Replayer(events, {\n        root: playerRef.current,\n        skipInactive: false,\n        showWarning: true,\n        blockClass: \"rr-block\",\n        liveMode: false,\n        triggerFocus: false,\n        showDebug: false,\n        insertStyleRules: [\n          \".rr-block { background: rgba(0, 0, 0, 0.1); }\",\n          \"iframe { background: white !important; }\",\n        ],\n      });\n\n      // Add event listeners for debugging\n      replayer.current.on(\"state-change\", (state) => {\n        console.log(\"Replayer state changed:\", state);\n      });\n\n      replayer.current.on(\"resize\", (size) => {\n        console.log(\"Replayer resized:\", size);\n      });\n\n      // Get the duration from the replayer\n      const metadata = replayer.current.getMetaData();\n      const totalDuration = metadata.totalTime;\n      setDuration(totalDuration);\n      setTrimEnd(totalDuration);\n\n      console.log(\"Replayer initialized successfully\");\n    } catch (err) {\n      console.error(\"Error initializing replayer:\", err);\n      setError(`Error initializing player: ${err.message}`);\n    }\n  };\n\n  useEffect(() => {\n    if (events && playerRef.current) {\n      initializePlayer();\n    }\n\n    // Cleanup on unmount\n    return () => {\n      if (replayer.current) {\n        try {\n          replayer.current.destroy();\n        } catch (destroyError) {\n          console.warn(\"Error destroying replayer on cleanup:\", destroyError);\n          // Force cleanup by clearing the container\n          if (playerRef.current) {\n            playerRef.current.innerHTML = \"\";\n          }\n        }\n        replayer.current = null;\n      }\n    };\n  }, [events]);\n\n  const handlePlay = () => {\n    if (replayer.current) {\n      replayer.current.play();\n      setIsPlaying(true);\n      // Start updating timeline\n      timelineUpdateInterval.current = setInterval(() => {\n        if (replayer.current) {\n          const time = replayer.current.getCurrentTime();\n          setCurrentTime(time);\n        }\n      }, 100);\n    }\n  };\n\n  const handlePause = () => {\n    if (replayer.current) {\n      replayer.current.pause();\n      setIsPlaying(false);\n      // Stop updating timeline\n      if (timelineUpdateInterval.current) {\n        clearInterval(timelineUpdateInterval.current);\n      }\n    }\n  };\n\n  const handleStop = () => {\n    if (replayer.current) {\n      replayer.current.pause();\n      // Reset to beginning\n      replayer.current.play(0);\n      replayer.current.pause();\n      setIsPlaying(false);\n      setCurrentTime(0);\n      // Stop updating timeline\n      if (timelineUpdateInterval.current) {\n        clearInterval(timelineUpdateInterval.current);\n      }\n    }\n  };\n\n  const handleSeek = (time) => {\n    if (replayer.current) {\n      replayer.current.play(time);\n      replayer.current.pause();\n      setCurrentTime(time);\n    }\n  };\n\n  const searchEvents = () => {\n    if (!events || !searchTerm.trim()) {\n      setFoundEvents([]);\n      return;\n    }\n\n    const found = findEventsByContent(events, searchTerm.trim());\n    setFoundEvents(found);\n  };\n\n  const fillTimestamp = (relativeSeconds) => {\n    setCutTimestamp(formatTime(relativeSeconds));\n  };\n\n  const handleStartTrimming = () => {\n    setIsTrimmingMode(true);\n    setTrimStart(currentTime);\n    setTrimEnd(duration);\n  };\n\n  const handleSaveTrim = () => {\n    if (!events || !recording) {\n      setError(\"No recording loaded\");\n      return;\n    }\n\n    try {\n      // Convert milliseconds to seconds for the cutting function\n      const startSeconds = trimStart / 1000;\n      const endSeconds = trimEnd / 1000;\n      const durationSeconds = endSeconds - startSeconds;\n      const centerSeconds = startSeconds + (durationSeconds / 2);\n      const beforeAfterSeconds = durationSeconds / 2;\n\n      const clip = cutRecording(\n        events,\n        centerSeconds,\n        beforeAfterSeconds,\n        beforeAfterSeconds\n      );\n\n      // Download the trimmed clip\n      const dataStr =\n        \"data:text/json;charset=utf-8,\" +\n        encodeURIComponent(JSON.stringify(clip, null, 2));\n      const downloadAnchorNode = document.createElement(\"a\");\n      downloadAnchorNode.setAttribute(\"href\", dataStr);\n      downloadAnchorNode.setAttribute(\n        \"download\",\n        `trimmed_${formatTime(startSeconds)}_to_${formatTime(endSeconds)}.json`\n      );\n      document.body.appendChild(downloadAnchorNode);\n      downloadAnchorNode.click();\n      downloadAnchorNode.remove();\n\n      setIsTrimmingMode(false);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error trimming recording:\", err);\n      setError(`Error trimming recording: ${err.message}`);\n    }\n  };\n\n  const handleCancelTrim = () => {\n    setIsTrimmingMode(false);\n    setTrimStart(0);\n    setTrimEnd(duration);\n  };\n\n  const handleTrimHandleChange = (type, value) => {\n    if (type === \"start\") {\n      setTrimStart(Math.max(0, Math.min(value, trimEnd - 1000))); // Ensure at least 1 second\n    } else {\n      setTrimEnd(Math.max(trimStart + 1000, Math.min(value, duration)));\n    }\n  };\n\n  const handleCut = (action) => {\n    if (!events || !recording) {\n      setError(\"No recording loaded\");\n      return;\n    }\n\n    try {\n      const relativeSeconds = parseTimeString(cutTimestamp);\n      const clip = cutRecording(\n        events,\n        relativeSeconds,\n        beforeSeconds,\n        afterSeconds\n      );\n\n      if (action === \"load\") {\n        // Replace current recording with the clip\n        setEvents(clip);\n        const analysis = analyzeRecording(clip);\n        setRecording(analysis);\n        setCutTimestamp(\"\");\n        setFoundEvents([]);\n      } else if (action === \"download\") {\n        // Download the clip as JSON\n        const dataStr =\n          \"data:text/json;charset=utf-8,\" +\n          encodeURIComponent(JSON.stringify(clip, null, 2));\n        const downloadAnchorNode = document.createElement(\"a\");\n        downloadAnchorNode.setAttribute(\"href\", dataStr);\n        downloadAnchorNode.setAttribute(\n          \"download\",\n          `clip_${cutTimestamp || \"segment\"}.json`\n        );\n        document.body.appendChild(downloadAnchorNode);\n        downloadAnchorNode.click();\n        downloadAnchorNode.remove();\n      }\n    } catch (err) {\n      console.error(\"Error cutting recording:\", err);\n      setError(`Error cutting recording: ${err.message}`);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"header\">\n        <h1>RRWeb Player</h1>\n        <p>Upload an rrweb recording file to play it back</p>\n      </div>\n\n      <div className=\"upload-section\">\n        <div\n          className=\"upload-area\"\n          onDrop={handleFileDrop}\n          onDragOver={handleDragOver}\n        >\n          <input\n            type=\"file\"\n            onChange={(e) => handleFileUpload(e.target.files[0])}\n            className=\"file-input\"\n            id=\"file-upload\"\n          />\n          <label htmlFor=\"file-upload\" className=\"upload-label\">\n            <div className=\"upload-icon\">📁</div>\n            <div className=\"upload-text\">\n              <strong>Choose a file</strong> or drag it here\n            </div>\n            <div className=\"upload-subtext\">\n              Supports rrweb recording files (with or without .json extension)\n            </div>\n          </label>\n        </div>\n      </div>\n\n      {error && <div className=\"error\">{error}</div>}\n\n      {recording && (\n        <div className=\"recording-info\">\n          <h3>Recording Information</h3>\n          <div className=\"recording-stats\">\n            <div className=\"stat\">\n              <span className=\"stat-label\">Duration:</span>\n              <span className=\"stat-value\">\n                {formatTime(recording.duration)}\n              </span>\n            </div>\n            <div className=\"stat\">\n              <span className=\"stat-label\">Events:</span>\n              <span className=\"stat-value\">{recording.eventCount}</span>\n            </div>\n            <div className=\"stat\">\n              <span className=\"stat-label\">Start:</span>\n              <span className=\"stat-value\">\n                {new Date(recording.startTime).toLocaleTimeString()}\n              </span>\n            </div>\n            <div className=\"stat\">\n              <span className=\"stat-label\">End:</span>\n              <span className=\"stat-value\">\n                {new Date(recording.endTime).toLocaleTimeString()}\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {events && (\n        <div className=\"player-section\">\n          <div className=\"player-controls\">\n            <button onClick={handlePlay} disabled={isPlaying}>\n              ▶️ Play\n            </button>\n            <button onClick={handlePause} disabled={!isPlaying}>\n              ⏸️ Pause\n            </button>\n            <button onClick={handleStop}>⏹️ Stop</button>\n          </div>\n          <div ref={playerRef} className=\"player\"></div>\n        </div>\n      )}\n\n      {events && (\n        <div className=\"search-section\">\n          <h3>Search Events</h3>\n          <div className=\"search-controls\">\n            <input\n              type=\"text\"\n              placeholder=\"Search for text content in events...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"search-input\"\n            />\n            <button onClick={searchEvents} className=\"search-button\">\n              Search\n            </button>\n          </div>\n          {foundEvents.length > 0 && (\n            <div className=\"search-results\">\n              <h4>Found {foundEvents.length} events:</h4>\n              <div className=\"events-list\">\n                {foundEvents.slice(0, 10).map((event, index) => (\n                  <div key={index} className=\"event-item\">\n                    <div className=\"event-time\">\n                      <strong>\n                        {formatTime(\n                          timestampToRelativeTime(event.timestamp, recording)\n                        )}\n                      </strong>\n                    </div>\n                    <div className=\"event-content\">\n                      {JSON.stringify(event).substring(0, 200)}...\n                    </div>\n                    <button\n                      onClick={() =>\n                        fillTimestamp(\n                          timestampToRelativeTime(event.timestamp, recording)\n                        )\n                      }\n                      className=\"fill-button\"\n                    >\n                      Use Time\n                    </button>\n                  </div>\n                ))}\n                {foundEvents.length > 10 && (\n                  <p>... and {foundEvents.length - 10} more</p>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {events && (\n        <div className=\"cutting-section\">\n          <h3>Cut Recording</h3>\n          <div className=\"cutting-controls\">\n            <div className=\"cutting-row\">\n              <label>\n                Time (MM:SS or seconds):\n                <input\n                  type=\"text\"\n                  placeholder=\"1:30 or 90\"\n                  value={cutTimestamp}\n                  onChange={(e) => setCutTimestamp(e.target.value)}\n                  className=\"time-input\"\n                />\n              </label>\n              <label>\n                Before (seconds):\n                <input\n                  type=\"number\"\n                  min=\"0\"\n                  max=\"60\"\n                  value={beforeSeconds}\n                  onChange={(e) => setBeforeSeconds(Number(e.target.value))}\n                  className=\"duration-input\"\n                />\n              </label>\n              <label>\n                After (seconds):\n                <input\n                  type=\"number\"\n                  min=\"0\"\n                  max=\"60\"\n                  value={afterSeconds}\n                  onChange={(e) => setAfterSeconds(Number(e.target.value))}\n                  className=\"duration-input\"\n                />\n              </label>\n            </div>\n            <div className=\"cutting-actions\">\n              <button\n                onClick={() => handleCut(\"load\")}\n                className=\"cut-button primary\"\n              >\n                Load Clip\n              </button>\n              <button\n                onClick={() => handleCut(\"download\")}\n                className=\"cut-button secondary\"\n              >\n                Download Clip\n              </button>\n            </div>\n            <div className=\"cutting-help\">\n              <p>\n                <strong>Instructions:</strong> Enter a time within the video\n                duration ({recording ? formatTime(recording.duration) : \"0:00\"}\n                ). The clip will include the specified seconds before and after\n                that time.\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}