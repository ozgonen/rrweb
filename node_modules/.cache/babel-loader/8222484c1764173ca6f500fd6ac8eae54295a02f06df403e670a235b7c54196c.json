{"ast":null,"code":"/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n  lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n  var bytes = new Uint8Array(arraybuffer),\n    i,\n    len = bytes.length,\n    base64 = '';\n  for (i = 0; i < len; i += 3) {\n    base64 += chars[bytes[i] >> 2];\n    base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n    base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n    base64 += chars[bytes[i + 2] & 63];\n  }\n  if (len % 3 === 2) {\n    base64 = base64.substring(0, base64.length - 1) + '=';\n  } else if (len % 3 === 1) {\n    base64 = base64.substring(0, base64.length - 2) + '==';\n  }\n  return base64;\n};\nvar decode = function (base64) {\n  var bufferLength = base64.length * 0.75,\n    len = base64.length,\n    i,\n    p = 0,\n    encoded1,\n    encoded2,\n    encoded3,\n    encoded4;\n  if (base64[base64.length - 1] === '=') {\n    bufferLength--;\n    if (base64[base64.length - 2] === '=') {\n      bufferLength--;\n    }\n  }\n  var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n  for (i = 0; i < len; i += 4) {\n    encoded1 = lookup[base64.charCodeAt(i)];\n    encoded2 = lookup[base64.charCodeAt(i + 1)];\n    encoded3 = lookup[base64.charCodeAt(i + 2)];\n    encoded4 = lookup[base64.charCodeAt(i + 3)];\n    bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n    bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n    bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n  }\n  return arraybuffer;\n};\nexport { decode, encode };","map":{"version":3,"names":["chars","lookup","Uint8Array","i","length","charCodeAt","encode","arraybuffer","bytes","len","base64","substring","decode","bufferLength","p","encoded1","encoded2","encoded3","encoded4","ArrayBuffer"],"sources":["/Users/ogonen/rrweb/node_modules/rrweb/es/rrweb/ext/base64-arraybuffer/dist/base64-arraybuffer.es5.js"],"sourcesContent":["/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}