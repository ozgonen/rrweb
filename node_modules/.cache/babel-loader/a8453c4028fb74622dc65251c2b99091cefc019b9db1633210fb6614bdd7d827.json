{"ast":null,"code":"var _jsxFileName = \"/Users/ogonen/rrweb/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Replayer } from \"rrweb\";\nimport \"./App.css\";\nimport { cutRecording, trimRecording, analyzeRecording, findEventsByContent, timestampToRelativeTime, formatTime, parseTimeString } from \"./RecordingCutter\";\n\n// Event type mapping for rrweb\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getEventTypeInfo = event => {\n  const eventTypes = {\n    0: {\n      name: \"DomContentLoaded\",\n      color: \"#4CAF50\",\n      symbol: \"📄\"\n    },\n    1: {\n      name: \"Load\",\n      color: \"#2196F3\",\n      symbol: \"✅\"\n    },\n    2: {\n      name: \"FullSnapshot\",\n      color: \"#FF9800\",\n      symbol: \"📸\"\n    },\n    3: {\n      name: \"IncrementalSnapshot\",\n      color: \"#9C27B0\",\n      symbol: \"🔄\"\n    },\n    4: {\n      name: \"Meta\",\n      color: \"#795548\",\n      symbol: \"ℹ️\"\n    },\n    5: {\n      name: \"Custom\",\n      color: \"#607D8B\",\n      symbol: \"⭐\"\n    }\n  };\n  const baseInfo = eventTypes[event.type] || {\n    name: \"Unknown\",\n    color: \"#666\",\n    symbol: \"❓\"\n  };\n\n  // Add more detail for incremental snapshots\n  if (event.type === 3 && event.data) {\n    const source = event.data.source;\n    const sourceNames = {\n      0: \"Mutation\",\n      1: \"MouseMove\",\n      2: \"MouseInteraction\",\n      3: \"Scroll\",\n      4: \"ViewportResize\",\n      5: \"Input\",\n      6: \"TouchMove\",\n      7: \"MediaInteraction\",\n      8: \"StyleSheetRule\",\n      9: \"CanvasMutation\",\n      10: \"Font\",\n      11: \"Log\",\n      12: \"Drag\",\n      13: \"StyleDeclaration\"\n    };\n    if (sourceNames[source] !== undefined) {\n      return {\n        ...baseInfo,\n        name: `${baseInfo.name} (${sourceNames[source]})`,\n        subType: sourceNames[source]\n      };\n    }\n  }\n  return baseInfo;\n};\n\n// Snackbar Component\nconst Snackbar = ({\n  message,\n  type,\n  onClose\n}) => {\n  _s();\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onClose();\n    }, 5000); // Auto close after 5 seconds\n\n    return () => clearTimeout(timer);\n  }, [onClose]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `snackbar ${type}`,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"snackbar-close\",\n      onClick: onClose,\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Snackbar, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Snackbar;\nfunction App() {\n  _s2();\n  const [events, setEvents] = useState(null);\n  const [error, setError] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [recording, setRecording] = useState(null); // Analysis of current recording\n  const [cutTimestamp, setCutTimestamp] = useState(\"\");\n  const [beforeSeconds, setBeforeSeconds] = useState(5);\n  const [afterSeconds, setAfterSeconds] = useState(5);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [foundEvents, setFoundEvents] = useState([]);\n  const playerRef = useRef(null);\n  const replayer = useRef(null);\n\n  // Player timeline states\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [isTrimmingMode, setIsTrimmingMode] = useState(false);\n  const [trimStart, setTrimStart] = useState(0);\n  const [trimEnd, setTrimEnd] = useState(0);\n  const timelineUpdateInterval = useRef(null);\n  const [eventMarkers, setEventMarkers] = useState([]);\n  const [snackbar, setSnackbar] = useState(null);\n  const processEventMarkers = (eventsArray, recordingAnalysis) => {\n    if (!eventsArray || !recordingAnalysis) return [];\n    const startTime = recordingAnalysis.startTime;\n    const markers = [];\n\n    // Only show significant events: Full snapshots, major interactions, and occasional incremental snapshots\n    const significantEvents = eventsArray.filter(event => {\n      // Always show full snapshots\n      if (event.type === 2) return true;\n\n      // Show meta events\n      if (event.type === 4) return true;\n\n      // For incremental snapshots, only show mouse clicks, scrolls, and viewport resizes\n      if (event.type === 3 && event.data) {\n        const source = event.data.source;\n        return source === 2 || source === 3 || source === 4; // MouseInteraction, Scroll, ViewportResize\n      }\n      return false;\n    });\n\n    // Group events by time ranges (every 1% of timeline)\n    const eventsByTimeRange = {};\n    significantEvents.forEach(event => {\n      const relativeTime = event.timestamp - startTime;\n      // Convert duration from seconds to milliseconds for correct calculation\n      const percentage = relativeTime / (recordingAnalysis.duration * 1000) * 100;\n      const timeRange = Math.floor(percentage); // Group by 1% ranges\n\n      if (!eventsByTimeRange[timeRange]) {\n        eventsByTimeRange[timeRange] = [];\n      }\n      eventsByTimeRange[timeRange].push({\n        ...event,\n        relativeTime,\n        percentage,\n        typeInfo: getEventTypeInfo(event)\n      });\n    });\n\n    // Convert to markers, only one per time range\n    Object.entries(eventsByTimeRange).forEach(([timeRange, events]) => {\n      if (events.length === 1) {\n        markers.push(events[0]);\n      } else {\n        // Multiple events in same time range - create a grouped marker\n        const representative = events[0];\n        markers.push({\n          ...representative,\n          count: events.length,\n          grouped: true\n        });\n      }\n    });\n    return markers.sort((a, b) => a.timestamp - b.timestamp);\n  };\n\n  // Helper function to show notifications\n  const showNotification = (message, type = \"error\") => {\n    setSnackbar({\n      message,\n      type\n    });\n  };\n  const handleFileUpload = file => {\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const content = e.target.result;\n        let jsonData;\n        if (typeof content === \"string\") {\n          jsonData = JSON.parse(content);\n        } else {\n          // Handle binary content\n          const text = new TextDecoder().decode(content);\n          jsonData = JSON.parse(text);\n        }\n\n        // Debug: Log the raw data structure\n        console.log(\"Raw JSON data:\", jsonData);\n        console.log(\"Data type:\", typeof jsonData);\n        console.log(\"Is array:\", Array.isArray(jsonData));\n\n        // Handle different rrweb recording formats\n        let eventsArray;\n        if (Array.isArray(jsonData)) {\n          eventsArray = jsonData;\n        } else if (jsonData.events && Array.isArray(jsonData.events)) {\n          // Some recordings store events in a nested structure\n          eventsArray = jsonData.events;\n        } else if (jsonData.data && Array.isArray(jsonData.data)) {\n          eventsArray = jsonData.data;\n        } else {\n          // Single event wrapped in array\n          eventsArray = [jsonData];\n        }\n        console.log(\"Processed events array:\", eventsArray.length, \"events\");\n        console.log(\"First few events:\", eventsArray.slice(0, 3));\n\n        // Basic validation\n        if (!eventsArray || eventsArray.length === 0) {\n          showNotification(\"Invalid recording format: no events found\", \"error\");\n          return;\n        }\n\n        // Analyze the recording\n        const analysis = analyzeRecording(eventsArray);\n        if (!analysis) {\n          showNotification(\"Unable to analyze recording\", \"error\");\n          return;\n        }\n        setRecording(analysis);\n        setEvents(eventsArray);\n        setError(null);\n        console.log(\"Recording loaded:\", analysis);\n\n        // Process event markers\n        const markers = processEventMarkers(eventsArray, analysis);\n        setEventMarkers(markers);\n        showNotification(\"Recording loaded successfully\", \"success\");\n      } catch (err) {\n        console.error(\"Error parsing file:\", err);\n        showNotification(`Error loading file: ${err.message}. Please make sure the file contains valid rrweb recording data.`, \"error\");\n      }\n    };\n    reader.onerror = () => {\n      showNotification(\"Error reading file. Please try again.\", \"error\");\n    };\n    reader.readAsText(file);\n  };\n  const handleFileDrop = e => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileUpload(files[0]);\n    }\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const initializePlayer = () => {\n    if (!events || !playerRef.current) return;\n    try {\n      // Clean up existing replayer with error handling\n      if (replayer.current) {\n        try {\n          replayer.current.destroy();\n        } catch (destroyError) {\n          console.warn(\"Error destroying previous replayer:\", destroyError);\n          // Force cleanup by clearing the container\n          if (playerRef.current) {\n            playerRef.current.innerHTML = \"\";\n          }\n        }\n        replayer.current = null;\n      }\n\n      // Ensure player container is clean\n      if (playerRef.current) {\n        playerRef.current.innerHTML = \"\";\n      }\n\n      // Debug: Check the events structure\n      console.log(\"Events to replay:\", events.length, \"events\");\n      const fullSnapshots = events.filter(e => e.type === 2);\n      const domUpdates = events.filter(e => e.type === 3);\n      console.log(\"Full snapshots:\", fullSnapshots.length);\n      console.log(\"DOM updates:\", domUpdates.length);\n      if (fullSnapshots.length === 0) {\n        setError(\"No full snapshot found in recording. This recording may be incomplete.\");\n        return;\n      }\n\n      // Create new replayer instance with enhanced configuration\n      replayer.current = new Replayer(events, {\n        root: playerRef.current,\n        skipInactive: false,\n        showWarning: true,\n        blockClass: \"rr-block\",\n        liveMode: false,\n        triggerFocus: false,\n        showDebug: false,\n        insertStyleRules: [\".rr-block { background: rgba(0, 0, 0, 0.1); }\", \"iframe { background: white !important; }\"]\n      });\n\n      // Add event listeners for debugging\n      replayer.current.on(\"state-change\", state => {\n        console.log(\"Replayer state changed:\", state);\n      });\n      replayer.current.on(\"resize\", size => {\n        console.log(\"Replayer resized:\", size);\n      });\n\n      // Get the duration from the replayer\n      const metadata = replayer.current.getMetaData();\n      const totalDuration = metadata.totalTime;\n      setDuration(totalDuration);\n      setTrimEnd(totalDuration);\n      console.log(\"Replayer initialized successfully\");\n    } catch (err) {\n      console.error(\"Error initializing replayer:\", err);\n      setError(`Error initializing player: ${err.message}`);\n    }\n  };\n  useEffect(() => {\n    if (events && playerRef.current) {\n      initializePlayer();\n    }\n\n    // Cleanup on unmount\n    return () => {\n      if (replayer.current) {\n        try {\n          replayer.current.destroy();\n        } catch (destroyError) {\n          console.warn(\"Error destroying replayer on cleanup:\", destroyError);\n          // Force cleanup by clearing the container\n          if (playerRef.current) {\n            playerRef.current.innerHTML = \"\";\n          }\n        }\n        replayer.current = null;\n      }\n    };\n  }, [events]);\n  const handlePlay = () => {\n    if (replayer.current) {\n      // Resume from current position instead of starting from beginning\n      if (currentTime > 0) {\n        replayer.current.play(currentTime);\n      } else {\n        replayer.current.play();\n      }\n      setIsPlaying(true);\n      // Start updating timeline\n      timelineUpdateInterval.current = setInterval(() => {\n        if (replayer.current) {\n          const time = replayer.current.getCurrentTime();\n          setCurrentTime(time);\n        }\n      }, 100);\n    }\n  };\n  const handlePause = () => {\n    if (replayer.current) {\n      replayer.current.pause();\n      setIsPlaying(false);\n      // Stop updating timeline\n      if (timelineUpdateInterval.current) {\n        clearInterval(timelineUpdateInterval.current);\n      }\n    }\n  };\n  const handleStop = () => {\n    if (replayer.current) {\n      replayer.current.pause();\n      // Reset to beginning\n      replayer.current.play(0);\n      replayer.current.pause();\n      setIsPlaying(false);\n      setCurrentTime(0);\n      // Stop updating timeline\n      if (timelineUpdateInterval.current) {\n        clearInterval(timelineUpdateInterval.current);\n      }\n    }\n  };\n  const handleSeek = time => {\n    if (replayer.current) {\n      replayer.current.play(time);\n      replayer.current.pause();\n      setCurrentTime(time);\n    }\n  };\n  const searchEvents = () => {\n    if (!events || !searchTerm.trim()) {\n      setFoundEvents([]);\n      return;\n    }\n    const found = findEventsByContent(events, searchTerm.trim());\n    setFoundEvents(found);\n  };\n  const fillTimestamp = relativeSeconds => {\n    setCutTimestamp(formatTime(relativeSeconds));\n  };\n  const handleStartTrimming = () => {\n    setIsTrimmingMode(true);\n    // Ensure trim end is at least 1 second after trim start\n    const startTime = currentTime;\n    const endTime = Math.min(duration, Math.max(currentTime + 1000, duration));\n\n    // If we're too close to the end, adjust the start time\n    if (duration - currentTime < 1000) {\n      setTrimStart(Math.max(0, duration - 1000));\n      setTrimEnd(duration);\n    } else {\n      setTrimStart(currentTime);\n      setTrimEnd(endTime);\n    }\n  };\n  const handleSaveTrim = async () => {\n    if (!events || !recording) {\n      showNotification(\"No recording loaded\", \"error\");\n      return;\n    }\n\n    // Validate trim range\n    if (trimEnd <= trimStart) {\n      showNotification(\"End time must be after start time\", \"error\");\n      return;\n    }\n    if (trimEnd - trimStart < 100) {\n      showNotification(\"Trim duration must be at least 0.1 seconds\", \"error\");\n      return;\n    }\n    try {\n      showNotification(\"Creating trimmed recording... This may take a moment.\", \"info\");\n\n      // IMPORTANT: trimStart and trimEnd are relative times (ms from start of recording)\n      // but trimRecording expects absolute timestamps, so we need to convert them\n      const recordingStart = events[0].timestamp;\n      const absoluteStartMs = recordingStart + trimStart;\n      const absoluteEndMs = recordingStart + trimEnd;\n      console.log(`Trimming: relative start=${trimStart}ms (${formatTime(trimStart / 1000)}), end=${trimEnd}ms (${formatTime(trimEnd / 1000)})`);\n      console.log(`Recording starts at ${recordingStart}ms`);\n      console.log(`Absolute timestamps: start=${absoluteStartMs}ms, end=${absoluteEndMs}ms`);\n\n      // Use the new trimRecording function with absolute timestamps\n      const clip = await trimRecording(events, absoluteStartMs, absoluteEndMs);\n\n      // Convert milliseconds to seconds for the filename\n      const startSeconds = trimStart / 1000;\n      const endSeconds = trimEnd / 1000;\n\n      // Download the trimmed clip\n      const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(clip, null, 2));\n      const downloadAnchorNode = document.createElement(\"a\");\n      downloadAnchorNode.setAttribute(\"href\", dataStr);\n      downloadAnchorNode.setAttribute(\"download\", `trimmed_${formatTime(startSeconds)}_to_${formatTime(endSeconds)}.json`);\n      document.body.appendChild(downloadAnchorNode);\n      downloadAnchorNode.click();\n      downloadAnchorNode.remove();\n      setIsTrimmingMode(false);\n      showNotification(`Recording trimmed successfully (${formatTime(startSeconds)} - ${formatTime(endSeconds)}). The playback starts exactly at ${formatTime(startSeconds)}.`, \"success\");\n    } catch (err) {\n      console.error(\"Error trimming recording:\", err);\n      showNotification(`Error trimming recording: ${err.message}`, \"error\");\n    }\n  };\n  const handleCancelTrim = () => {\n    setIsTrimmingMode(false);\n    setTrimStart(0);\n    setTrimEnd(duration);\n  };\n  const handleTrimHandleChange = (type, value) => {\n    if (type === \"start\") {\n      setTrimStart(Math.max(0, Math.min(value, trimEnd - 1000))); // Ensure at least 1 second\n    } else {\n      setTrimEnd(Math.max(trimStart + 1000, Math.min(value, duration)));\n    }\n  };\n  const handleCut = action => {\n    if (!events || !recording) {\n      showNotification(\"No recording loaded\", \"error\");\n      return;\n    }\n    try {\n      const relativeSeconds = parseTimeString(cutTimestamp);\n      const clip = cutRecording(events, relativeSeconds, beforeSeconds, afterSeconds);\n      if (action === \"load\") {\n        // Replace current recording with the clip\n        setEvents(clip);\n        const analysis = analyzeRecording(clip);\n        setRecording(analysis);\n        setCutTimestamp(\"\");\n        setFoundEvents([]);\n\n        // Process event markers for the clip\n        const markers = processEventMarkers(clip, analysis);\n        setEventMarkers(markers);\n        showNotification(\"Clip loaded successfully\", \"success\");\n      } else if (action === \"download\") {\n        // Download the clip as JSON\n        const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(clip, null, 2));\n        const downloadAnchorNode = document.createElement(\"a\");\n        downloadAnchorNode.setAttribute(\"href\", dataStr);\n        downloadAnchorNode.setAttribute(\"download\", `clip_${cutTimestamp || \"segment\"}.json`);\n        document.body.appendChild(downloadAnchorNode);\n        downloadAnchorNode.click();\n        downloadAnchorNode.remove();\n        showNotification(\"Clip downloaded successfully\", \"success\");\n      }\n    } catch (err) {\n      console.error(\"Error cutting recording:\", err);\n      showNotification(`Error cutting recording: ${err.message}`, \"error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"RRWeb Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload an rrweb recording file to play it back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-area\",\n        onDrop: handleFileDrop,\n        onDragOver: handleDragOver,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => handleFileUpload(e.target.files[0]),\n          className: \"file-input\",\n          id: \"file-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          className: \"upload-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-icon\",\n            children: \"\\uD83D\\uDCC1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Choose a file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 15\n            }, this), \" or drag it here\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-subtext\",\n            children: \"Supports rrweb recording files (with or without .json extension)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 17\n    }, this), recording && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recording-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recording Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Duration:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: formatTime(recording.duration)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Events:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: recording.eventCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Start:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: new Date(recording.startTime).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"End:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: new Date(recording.endTime).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 9\n    }, this), events && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: playerRef,\n        className: \"player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline\",\n            onClick: e => {\n              if (!isTrimmingMode && e.target === e.currentTarget) {\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const percentage = x / rect.width;\n                const seekTime = percentage * duration;\n                handleSeek(seekTime);\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timeline-progress\",\n              style: {\n                width: `${currentTime / duration * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-markers-container\",\n              children: eventMarkers.map((marker, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `event-marker ${marker.grouped ? \"grouped\" : \"\"}`,\n                style: {\n                  left: `${marker.percentage}%`,\n                  backgroundColor: marker.typeInfo.color\n                },\n                title: `${marker.typeInfo.name}${marker.grouped ? ` (${marker.count} events)` : \"\"} at ${formatTime(marker.relativeTime / 1000)}`,\n                onClick: () => handleSeek(marker.relativeTime),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"event-marker-symbol\",\n                  children: marker.typeInfo.symbol\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 690,\n                  columnNumber: 23\n                }, this), marker.grouped && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"event-marker-count\",\n                  children: marker.count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 694,\n                  columnNumber: 25\n                }, this)]\n              }, `${marker.timestamp}-${index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 676,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 17\n            }, this), !isTrimmingMode && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timeline-scrubber\",\n              style: {\n                left: `${currentTime / duration * 100}%`\n              },\n              onMouseDown: e => {\n                e.stopPropagation();\n                const startX = e.clientX;\n                const startTime = currentTime;\n                const rect = e.currentTarget.parentElement.getBoundingClientRect();\n                const handleMouseMove = e => {\n                  const deltaX = e.clientX - startX;\n                  const deltaPercent = deltaX / rect.width;\n                  const newTime = Math.max(0, Math.min(duration, startTime + deltaPercent * duration));\n                  handleSeek(newTime);\n                };\n                const handleMouseUp = () => {\n                  document.removeEventListener(\"mousemove\", handleMouseMove);\n                  document.removeEventListener(\"mouseup\", handleMouseUp);\n                };\n                document.addEventListener(\"mousemove\", handleMouseMove);\n                document.addEventListener(\"mouseup\", handleMouseUp);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 19\n            }, this), isTrimmingMode && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"trim-overlay trim-start\",\n                style: {\n                  width: `${trimStart / duration * 100}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"trim-overlay trim-end\",\n                style: {\n                  left: `${trimEnd / duration * 100}%`,\n                  width: `${(duration - trimEnd) / duration * 100}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 747,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"trim-handle trim-handle-start\",\n                style: {\n                  left: `${trimStart / duration * 100}%`\n                },\n                onMouseDown: e => {\n                  e.stopPropagation();\n                  const startX = e.clientX;\n                  const startValue = trimStart;\n                  const rect = e.currentTarget.parentElement.getBoundingClientRect();\n                  const handleMouseMove = e => {\n                    const deltaX = e.clientX - startX;\n                    const deltaPercent = deltaX / rect.width;\n                    const newValue = startValue + deltaPercent * duration;\n                    handleTrimHandleChange(\"start\", newValue);\n                  };\n                  const handleMouseUp = () => {\n                    document.removeEventListener(\"mousemove\", handleMouseMove);\n                    document.removeEventListener(\"mouseup\", handleMouseUp);\n                  };\n                  document.addEventListener(\"mousemove\", handleMouseMove);\n                  document.addEventListener(\"mouseup\", handleMouseUp);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 754,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"trim-handle trim-handle-end\",\n                style: {\n                  left: `${trimEnd / duration * 100}%`\n                },\n                onMouseDown: e => {\n                  e.stopPropagation();\n                  const startX = e.clientX;\n                  const startValue = trimEnd;\n                  const rect = e.currentTarget.parentElement.getBoundingClientRect();\n                  const handleMouseMove = e => {\n                    const deltaX = e.clientX - startX;\n                    const deltaPercent = deltaX / rect.width;\n                    const newValue = startValue + deltaPercent * duration;\n                    handleTrimHandleChange(\"end\", newValue);\n                  };\n                  const handleMouseUp = () => {\n                    document.removeEventListener(\"mousemove\", handleMouseMove);\n                    document.removeEventListener(\"mouseup\", handleMouseUp);\n                  };\n                  document.addEventListener(\"mousemove\", handleMouseMove);\n                  document.addEventListener(\"mouseup\", handleMouseUp);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 786,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline-times\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatTime(currentTime / 1000)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 17\n            }, this), isTrimmingMode && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"trim-info\",\n              children: [\"Trim: \", formatTime(trimStart / 1000), \" -\", \" \", formatTime(trimEnd / 1000)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatTime(duration / 1000)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 830,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePlay,\n            disabled: isPlaying,\n            children: \"\\u25B6\\uFE0F Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 835,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePause,\n            disabled: !isPlaying,\n            children: \"\\u23F8\\uFE0F Pause\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStop,\n            children: \"\\u23F9\\uFE0F Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 841,\n            columnNumber: 15\n          }, this), !isTrimmingMode ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStartTrimming,\n            className: \"trim-button\",\n            children: \"\\u2702\\uFE0F Trim\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 844,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSaveTrim,\n              className: \"save-trim-button\",\n              children: \"\\uD83D\\uDCBE Save Trim\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 849,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCancelTrim,\n              className: \"cancel-trim-button\",\n              children: \"\\u274C Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 852,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 9\n    }, this), snackbar && /*#__PURE__*/_jsxDEV(Snackbar, {\n      message: snackbar.message,\n      type: snackbar.type,\n      onClose: () => setSnackbar(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 866,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 588,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"9fCLUHqIcENZtHaAduUACyZZa8Y=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Snackbar\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Replayer","cutRecording","trimRecording","analyzeRecording","findEventsByContent","timestampToRelativeTime","formatTime","parseTimeString","jsxDEV","_jsxDEV","Fragment","_Fragment","getEventTypeInfo","event","eventTypes","name","color","symbol","baseInfo","type","data","source","sourceNames","undefined","subType","Snackbar","message","onClose","_s","timer","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","App","_s2","events","setEvents","error","setError","isPlaying","setIsPlaying","recording","setRecording","cutTimestamp","setCutTimestamp","beforeSeconds","setBeforeSeconds","afterSeconds","setAfterSeconds","searchTerm","setSearchTerm","foundEvents","setFoundEvents","playerRef","replayer","currentTime","setCurrentTime","duration","setDuration","isTrimmingMode","setIsTrimmingMode","trimStart","setTrimStart","trimEnd","setTrimEnd","timelineUpdateInterval","eventMarkers","setEventMarkers","snackbar","setSnackbar","processEventMarkers","eventsArray","recordingAnalysis","startTime","markers","significantEvents","filter","eventsByTimeRange","forEach","relativeTime","timestamp","percentage","timeRange","Math","floor","push","typeInfo","Object","entries","length","representative","count","grouped","sort","a","b","showNotification","handleFileUpload","file","reader","FileReader","onload","e","content","target","result","jsonData","JSON","parse","text","TextDecoder","decode","console","log","Array","isArray","slice","analysis","err","onerror","readAsText","handleFileDrop","preventDefault","files","dataTransfer","handleDragOver","initializePlayer","current","destroy","destroyError","warn","innerHTML","fullSnapshots","domUpdates","root","skipInactive","showWarning","blockClass","liveMode","triggerFocus","showDebug","insertStyleRules","on","state","size","metadata","getMetaData","totalDuration","totalTime","handlePlay","play","setInterval","time","getCurrentTime","handlePause","pause","clearInterval","handleStop","handleSeek","searchEvents","trim","found","fillTimestamp","relativeSeconds","handleStartTrimming","endTime","min","max","handleSaveTrim","recordingStart","absoluteStartMs","absoluteEndMs","clip","startSeconds","endSeconds","dataStr","encodeURIComponent","stringify","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","handleCancelTrim","handleTrimHandleChange","value","handleCut","action","onDrop","onDragOver","onChange","id","htmlFor","eventCount","Date","toLocaleTimeString","ref","currentTarget","rect","getBoundingClientRect","x","clientX","left","width","seekTime","style","map","marker","index","backgroundColor","title","onMouseDown","stopPropagation","startX","parentElement","handleMouseMove","deltaX","deltaPercent","newTime","handleMouseUp","removeEventListener","addEventListener","startValue","newValue","disabled","_c2","$RefreshReg$"],"sources":["/Users/ogonen/rrweb/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { Replayer } from \"rrweb\";\nimport \"./App.css\";\nimport {\n  cutRecording,\n  trimRecording,\n  analyzeRecording,\n  findEventsByContent,\n  timestampToRelativeTime,\n  formatTime,\n  parseTimeString,\n} from \"./RecordingCutter\";\n\n// Event type mapping for rrweb\nconst getEventTypeInfo = (event) => {\n  const eventTypes = {\n    0: { name: \"DomContentLoaded\", color: \"#4CAF50\", symbol: \"📄\" },\n    1: { name: \"Load\", color: \"#2196F3\", symbol: \"✅\" },\n    2: { name: \"FullSnapshot\", color: \"#FF9800\", symbol: \"📸\" },\n    3: { name: \"IncrementalSnapshot\", color: \"#9C27B0\", symbol: \"🔄\" },\n    4: { name: \"Meta\", color: \"#795548\", symbol: \"ℹ️\" },\n    5: { name: \"Custom\", color: \"#607D8B\", symbol: \"⭐\" },\n  };\n\n  const baseInfo = eventTypes[event.type] || {\n    name: \"Unknown\",\n    color: \"#666\",\n    symbol: \"❓\",\n  };\n\n  // Add more detail for incremental snapshots\n  if (event.type === 3 && event.data) {\n    const source = event.data.source;\n    const sourceNames = {\n      0: \"Mutation\",\n      1: \"MouseMove\",\n      2: \"MouseInteraction\",\n      3: \"Scroll\",\n      4: \"ViewportResize\",\n      5: \"Input\",\n      6: \"TouchMove\",\n      7: \"MediaInteraction\",\n      8: \"StyleSheetRule\",\n      9: \"CanvasMutation\",\n      10: \"Font\",\n      11: \"Log\",\n      12: \"Drag\",\n      13: \"StyleDeclaration\",\n    };\n\n    if (sourceNames[source] !== undefined) {\n      return {\n        ...baseInfo,\n        name: `${baseInfo.name} (${sourceNames[source]})`,\n        subType: sourceNames[source],\n      };\n    }\n  }\n\n  return baseInfo;\n};\n\n// Snackbar Component\nconst Snackbar = ({ message, type, onClose }) => {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onClose();\n    }, 5000); // Auto close after 5 seconds\n\n    return () => clearTimeout(timer);\n  }, [onClose]);\n\n  return (\n    <div className={`snackbar ${type}`}>\n      <span>{message}</span>\n      <button className=\"snackbar-close\" onClick={onClose}>\n        ×\n      </button>\n    </div>\n  );\n};\n\nfunction App() {\n  const [events, setEvents] = useState(null);\n  const [error, setError] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [recording, setRecording] = useState(null); // Analysis of current recording\n  const [cutTimestamp, setCutTimestamp] = useState(\"\");\n  const [beforeSeconds, setBeforeSeconds] = useState(5);\n  const [afterSeconds, setAfterSeconds] = useState(5);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [foundEvents, setFoundEvents] = useState([]);\n  const playerRef = useRef(null);\n  const replayer = useRef(null);\n\n  // Player timeline states\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [isTrimmingMode, setIsTrimmingMode] = useState(false);\n  const [trimStart, setTrimStart] = useState(0);\n  const [trimEnd, setTrimEnd] = useState(0);\n  const timelineUpdateInterval = useRef(null);\n  const [eventMarkers, setEventMarkers] = useState([]);\n  const [snackbar, setSnackbar] = useState(null);\n\n  const processEventMarkers = (eventsArray, recordingAnalysis) => {\n    if (!eventsArray || !recordingAnalysis) return [];\n\n    const startTime = recordingAnalysis.startTime;\n    const markers = [];\n\n    // Only show significant events: Full snapshots, major interactions, and occasional incremental snapshots\n    const significantEvents = eventsArray.filter((event) => {\n      // Always show full snapshots\n      if (event.type === 2) return true;\n\n      // Show meta events\n      if (event.type === 4) return true;\n\n      // For incremental snapshots, only show mouse clicks, scrolls, and viewport resizes\n      if (event.type === 3 && event.data) {\n        const source = event.data.source;\n        return source === 2 || source === 3 || source === 4; // MouseInteraction, Scroll, ViewportResize\n      }\n\n      return false;\n    });\n\n    // Group events by time ranges (every 1% of timeline)\n    const eventsByTimeRange = {};\n\n    significantEvents.forEach((event) => {\n      const relativeTime = event.timestamp - startTime;\n      // Convert duration from seconds to milliseconds for correct calculation\n      const percentage =\n        (relativeTime / (recordingAnalysis.duration * 1000)) * 100;\n\n      const timeRange = Math.floor(percentage); // Group by 1% ranges\n\n      if (!eventsByTimeRange[timeRange]) {\n        eventsByTimeRange[timeRange] = [];\n      }\n\n      eventsByTimeRange[timeRange].push({\n        ...event,\n        relativeTime,\n        percentage,\n        typeInfo: getEventTypeInfo(event),\n      });\n    });\n\n    // Convert to markers, only one per time range\n    Object.entries(eventsByTimeRange).forEach(([timeRange, events]) => {\n      if (events.length === 1) {\n        markers.push(events[0]);\n      } else {\n        // Multiple events in same time range - create a grouped marker\n        const representative = events[0];\n        markers.push({\n          ...representative,\n          count: events.length,\n          grouped: true,\n        });\n      }\n    });\n\n    return markers.sort((a, b) => a.timestamp - b.timestamp);\n  };\n\n  // Helper function to show notifications\n  const showNotification = (message, type = \"error\") => {\n    setSnackbar({ message, type });\n  };\n\n  const handleFileUpload = (file) => {\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const content = e.target.result;\n        let jsonData;\n\n        if (typeof content === \"string\") {\n          jsonData = JSON.parse(content);\n        } else {\n          // Handle binary content\n          const text = new TextDecoder().decode(content);\n          jsonData = JSON.parse(text);\n        }\n\n        // Debug: Log the raw data structure\n        console.log(\"Raw JSON data:\", jsonData);\n        console.log(\"Data type:\", typeof jsonData);\n        console.log(\"Is array:\", Array.isArray(jsonData));\n\n        // Handle different rrweb recording formats\n        let eventsArray;\n        if (Array.isArray(jsonData)) {\n          eventsArray = jsonData;\n        } else if (jsonData.events && Array.isArray(jsonData.events)) {\n          // Some recordings store events in a nested structure\n          eventsArray = jsonData.events;\n        } else if (jsonData.data && Array.isArray(jsonData.data)) {\n          eventsArray = jsonData.data;\n        } else {\n          // Single event wrapped in array\n          eventsArray = [jsonData];\n        }\n\n        console.log(\"Processed events array:\", eventsArray.length, \"events\");\n        console.log(\"First few events:\", eventsArray.slice(0, 3));\n\n        // Basic validation\n        if (!eventsArray || eventsArray.length === 0) {\n          showNotification(\n            \"Invalid recording format: no events found\",\n            \"error\"\n          );\n          return;\n        }\n\n        // Analyze the recording\n        const analysis = analyzeRecording(eventsArray);\n        if (!analysis) {\n          showNotification(\"Unable to analyze recording\", \"error\");\n          return;\n        }\n\n        setRecording(analysis);\n        setEvents(eventsArray);\n        setError(null);\n        console.log(\"Recording loaded:\", analysis);\n\n        // Process event markers\n        const markers = processEventMarkers(eventsArray, analysis);\n        setEventMarkers(markers);\n\n        showNotification(\"Recording loaded successfully\", \"success\");\n      } catch (err) {\n        console.error(\"Error parsing file:\", err);\n        showNotification(\n          `Error loading file: ${err.message}. Please make sure the file contains valid rrweb recording data.`,\n          \"error\"\n        );\n      }\n    };\n\n    reader.onerror = () => {\n      showNotification(\"Error reading file. Please try again.\", \"error\");\n    };\n\n    reader.readAsText(file);\n  };\n\n  const handleFileDrop = (e) => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileUpload(files[0]);\n    }\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const initializePlayer = () => {\n    if (!events || !playerRef.current) return;\n\n    try {\n      // Clean up existing replayer with error handling\n      if (replayer.current) {\n        try {\n          replayer.current.destroy();\n        } catch (destroyError) {\n          console.warn(\"Error destroying previous replayer:\", destroyError);\n          // Force cleanup by clearing the container\n          if (playerRef.current) {\n            playerRef.current.innerHTML = \"\";\n          }\n        }\n        replayer.current = null;\n      }\n\n      // Ensure player container is clean\n      if (playerRef.current) {\n        playerRef.current.innerHTML = \"\";\n      }\n\n      // Debug: Check the events structure\n      console.log(\"Events to replay:\", events.length, \"events\");\n      const fullSnapshots = events.filter((e) => e.type === 2);\n      const domUpdates = events.filter((e) => e.type === 3);\n      console.log(\"Full snapshots:\", fullSnapshots.length);\n      console.log(\"DOM updates:\", domUpdates.length);\n\n      if (fullSnapshots.length === 0) {\n        setError(\n          \"No full snapshot found in recording. This recording may be incomplete.\"\n        );\n        return;\n      }\n\n      // Create new replayer instance with enhanced configuration\n      replayer.current = new Replayer(events, {\n        root: playerRef.current,\n        skipInactive: false,\n        showWarning: true,\n        blockClass: \"rr-block\",\n        liveMode: false,\n        triggerFocus: false,\n        showDebug: false,\n        insertStyleRules: [\n          \".rr-block { background: rgba(0, 0, 0, 0.1); }\",\n          \"iframe { background: white !important; }\",\n        ],\n      });\n\n      // Add event listeners for debugging\n      replayer.current.on(\"state-change\", (state) => {\n        console.log(\"Replayer state changed:\", state);\n      });\n\n      replayer.current.on(\"resize\", (size) => {\n        console.log(\"Replayer resized:\", size);\n      });\n\n      // Get the duration from the replayer\n      const metadata = replayer.current.getMetaData();\n      const totalDuration = metadata.totalTime;\n      setDuration(totalDuration);\n      setTrimEnd(totalDuration);\n\n      console.log(\"Replayer initialized successfully\");\n    } catch (err) {\n      console.error(\"Error initializing replayer:\", err);\n      setError(`Error initializing player: ${err.message}`);\n    }\n  };\n\n  useEffect(() => {\n    if (events && playerRef.current) {\n      initializePlayer();\n    }\n\n    // Cleanup on unmount\n    return () => {\n      if (replayer.current) {\n        try {\n          replayer.current.destroy();\n        } catch (destroyError) {\n          console.warn(\"Error destroying replayer on cleanup:\", destroyError);\n          // Force cleanup by clearing the container\n          if (playerRef.current) {\n            playerRef.current.innerHTML = \"\";\n          }\n        }\n        replayer.current = null;\n      }\n    };\n  }, [events]);\n\n  const handlePlay = () => {\n    if (replayer.current) {\n      // Resume from current position instead of starting from beginning\n      if (currentTime > 0) {\n        replayer.current.play(currentTime);\n      } else {\n        replayer.current.play();\n      }\n      setIsPlaying(true);\n      // Start updating timeline\n      timelineUpdateInterval.current = setInterval(() => {\n        if (replayer.current) {\n          const time = replayer.current.getCurrentTime();\n          setCurrentTime(time);\n        }\n      }, 100);\n    }\n  };\n\n  const handlePause = () => {\n    if (replayer.current) {\n      replayer.current.pause();\n      setIsPlaying(false);\n      // Stop updating timeline\n      if (timelineUpdateInterval.current) {\n        clearInterval(timelineUpdateInterval.current);\n      }\n    }\n  };\n\n  const handleStop = () => {\n    if (replayer.current) {\n      replayer.current.pause();\n      // Reset to beginning\n      replayer.current.play(0);\n      replayer.current.pause();\n      setIsPlaying(false);\n      setCurrentTime(0);\n      // Stop updating timeline\n      if (timelineUpdateInterval.current) {\n        clearInterval(timelineUpdateInterval.current);\n      }\n    }\n  };\n\n  const handleSeek = (time) => {\n    if (replayer.current) {\n      replayer.current.play(time);\n      replayer.current.pause();\n      setCurrentTime(time);\n    }\n  };\n\n  const searchEvents = () => {\n    if (!events || !searchTerm.trim()) {\n      setFoundEvents([]);\n      return;\n    }\n\n    const found = findEventsByContent(events, searchTerm.trim());\n    setFoundEvents(found);\n  };\n\n  const fillTimestamp = (relativeSeconds) => {\n    setCutTimestamp(formatTime(relativeSeconds));\n  };\n\n  const handleStartTrimming = () => {\n    setIsTrimmingMode(true);\n    // Ensure trim end is at least 1 second after trim start\n    const startTime = currentTime;\n    const endTime = Math.min(duration, Math.max(currentTime + 1000, duration));\n\n    // If we're too close to the end, adjust the start time\n    if (duration - currentTime < 1000) {\n      setTrimStart(Math.max(0, duration - 1000));\n      setTrimEnd(duration);\n    } else {\n      setTrimStart(currentTime);\n      setTrimEnd(endTime);\n    }\n  };\n\n  const handleSaveTrim = async () => {\n    if (!events || !recording) {\n      showNotification(\"No recording loaded\", \"error\");\n      return;\n    }\n\n    // Validate trim range\n    if (trimEnd <= trimStart) {\n      showNotification(\"End time must be after start time\", \"error\");\n      return;\n    }\n\n    if (trimEnd - trimStart < 100) {\n      showNotification(\"Trim duration must be at least 0.1 seconds\", \"error\");\n      return;\n    }\n\n    try {\n      showNotification(\n        \"Creating trimmed recording... This may take a moment.\",\n        \"info\"\n      );\n\n      // IMPORTANT: trimStart and trimEnd are relative times (ms from start of recording)\n      // but trimRecording expects absolute timestamps, so we need to convert them\n      const recordingStart = events[0].timestamp;\n      const absoluteStartMs = recordingStart + trimStart;\n      const absoluteEndMs = recordingStart + trimEnd;\n\n      console.log(\n        `Trimming: relative start=${trimStart}ms (${formatTime(\n          trimStart / 1000\n        )}), end=${trimEnd}ms (${formatTime(trimEnd / 1000)})`\n      );\n      console.log(`Recording starts at ${recordingStart}ms`);\n      console.log(\n        `Absolute timestamps: start=${absoluteStartMs}ms, end=${absoluteEndMs}ms`\n      );\n\n      // Use the new trimRecording function with absolute timestamps\n      const clip = await trimRecording(events, absoluteStartMs, absoluteEndMs);\n\n      // Convert milliseconds to seconds for the filename\n      const startSeconds = trimStart / 1000;\n      const endSeconds = trimEnd / 1000;\n\n      // Download the trimmed clip\n      const dataStr =\n        \"data:text/json;charset=utf-8,\" +\n        encodeURIComponent(JSON.stringify(clip, null, 2));\n      const downloadAnchorNode = document.createElement(\"a\");\n      downloadAnchorNode.setAttribute(\"href\", dataStr);\n      downloadAnchorNode.setAttribute(\n        \"download\",\n        `trimmed_${formatTime(startSeconds)}_to_${formatTime(endSeconds)}.json`\n      );\n      document.body.appendChild(downloadAnchorNode);\n      downloadAnchorNode.click();\n      downloadAnchorNode.remove();\n\n      setIsTrimmingMode(false);\n      showNotification(\n        `Recording trimmed successfully (${formatTime(\n          startSeconds\n        )} - ${formatTime(\n          endSeconds\n        )}). The playback starts exactly at ${formatTime(startSeconds)}.`,\n        \"success\"\n      );\n    } catch (err) {\n      console.error(\"Error trimming recording:\", err);\n      showNotification(`Error trimming recording: ${err.message}`, \"error\");\n    }\n  };\n\n  const handleCancelTrim = () => {\n    setIsTrimmingMode(false);\n    setTrimStart(0);\n    setTrimEnd(duration);\n  };\n\n  const handleTrimHandleChange = (type, value) => {\n    if (type === \"start\") {\n      setTrimStart(Math.max(0, Math.min(value, trimEnd - 1000))); // Ensure at least 1 second\n    } else {\n      setTrimEnd(Math.max(trimStart + 1000, Math.min(value, duration)));\n    }\n  };\n\n  const handleCut = (action) => {\n    if (!events || !recording) {\n      showNotification(\"No recording loaded\", \"error\");\n      return;\n    }\n\n    try {\n      const relativeSeconds = parseTimeString(cutTimestamp);\n      const clip = cutRecording(\n        events,\n        relativeSeconds,\n        beforeSeconds,\n        afterSeconds\n      );\n\n      if (action === \"load\") {\n        // Replace current recording with the clip\n        setEvents(clip);\n        const analysis = analyzeRecording(clip);\n        setRecording(analysis);\n        setCutTimestamp(\"\");\n        setFoundEvents([]);\n\n        // Process event markers for the clip\n        const markers = processEventMarkers(clip, analysis);\n        setEventMarkers(markers);\n\n        showNotification(\"Clip loaded successfully\", \"success\");\n      } else if (action === \"download\") {\n        // Download the clip as JSON\n        const dataStr =\n          \"data:text/json;charset=utf-8,\" +\n          encodeURIComponent(JSON.stringify(clip, null, 2));\n        const downloadAnchorNode = document.createElement(\"a\");\n        downloadAnchorNode.setAttribute(\"href\", dataStr);\n        downloadAnchorNode.setAttribute(\n          \"download\",\n          `clip_${cutTimestamp || \"segment\"}.json`\n        );\n        document.body.appendChild(downloadAnchorNode);\n        downloadAnchorNode.click();\n        downloadAnchorNode.remove();\n\n        showNotification(\"Clip downloaded successfully\", \"success\");\n      }\n    } catch (err) {\n      console.error(\"Error cutting recording:\", err);\n      showNotification(`Error cutting recording: ${err.message}`, \"error\");\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"header\">\n        <h1>RRWeb Player</h1>\n        <p>Upload an rrweb recording file to play it back</p>\n      </div>\n\n      <div className=\"upload-section\">\n        <div\n          className=\"upload-area\"\n          onDrop={handleFileDrop}\n          onDragOver={handleDragOver}\n        >\n          <input\n            type=\"file\"\n            onChange={(e) => handleFileUpload(e.target.files[0])}\n            className=\"file-input\"\n            id=\"file-upload\"\n          />\n          <label htmlFor=\"file-upload\" className=\"upload-label\">\n            <div className=\"upload-icon\">📁</div>\n            <div className=\"upload-text\">\n              <strong>Choose a file</strong> or drag it here\n            </div>\n            <div className=\"upload-subtext\">\n              Supports rrweb recording files (with or without .json extension)\n            </div>\n          </label>\n        </div>\n      </div>\n\n      {error && <div className=\"error\">{error}</div>}\n\n      {recording && (\n        <div className=\"recording-info\">\n          <h3>Recording Information</h3>\n          <div className=\"recording-stats\">\n            <div className=\"stat\">\n              <span className=\"stat-label\">Duration:</span>\n              <span className=\"stat-value\">\n                {formatTime(recording.duration)}\n              </span>\n            </div>\n            <div className=\"stat\">\n              <span className=\"stat-label\">Events:</span>\n              <span className=\"stat-value\">{recording.eventCount}</span>\n            </div>\n            <div className=\"stat\">\n              <span className=\"stat-label\">Start:</span>\n              <span className=\"stat-value\">\n                {new Date(recording.startTime).toLocaleTimeString()}\n              </span>\n            </div>\n            <div className=\"stat\">\n              <span className=\"stat-label\">End:</span>\n              <span className=\"stat-value\">\n                {new Date(recording.endTime).toLocaleTimeString()}\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {events && (\n        <div className=\"player-section\">\n          <div ref={playerRef} className=\"player\"></div>\n\n          <div className=\"custom-controls\">\n            <div className=\"timeline-container\">\n              <div\n                className=\"timeline\"\n                onClick={(e) => {\n                  if (!isTrimmingMode && e.target === e.currentTarget) {\n                    const rect = e.currentTarget.getBoundingClientRect();\n                    const x = e.clientX - rect.left;\n                    const percentage = x / rect.width;\n                    const seekTime = percentage * duration;\n                    handleSeek(seekTime);\n                  }\n                }}\n              >\n                <div\n                  className=\"timeline-progress\"\n                  style={{ width: `${(currentTime / duration) * 100}%` }}\n                />\n\n                {/* Event markers */}\n                <div className=\"event-markers-container\">\n                  {eventMarkers.map((marker, index) => (\n                    <div\n                      key={`${marker.timestamp}-${index}`}\n                      className={`event-marker ${\n                        marker.grouped ? \"grouped\" : \"\"\n                      }`}\n                      style={{\n                        left: `${marker.percentage}%`,\n                        backgroundColor: marker.typeInfo.color,\n                      }}\n                      title={`${marker.typeInfo.name}${\n                        marker.grouped ? ` (${marker.count} events)` : \"\"\n                      } at ${formatTime(marker.relativeTime / 1000)}`}\n                      onClick={() => handleSeek(marker.relativeTime)}\n                    >\n                      <span className=\"event-marker-symbol\">\n                        {marker.typeInfo.symbol}\n                      </span>\n                      {marker.grouped && (\n                        <span className=\"event-marker-count\">\n                          {marker.count}\n                        </span>\n                      )}\n                    </div>\n                  ))}\n                </div>\n\n                {/* Draggable timeline scrubber */}\n                {!isTrimmingMode && (\n                  <div\n                    className=\"timeline-scrubber\"\n                    style={{ left: `${(currentTime / duration) * 100}%` }}\n                    onMouseDown={(e) => {\n                      e.stopPropagation();\n                      const startX = e.clientX;\n                      const startTime = currentTime;\n                      const rect =\n                        e.currentTarget.parentElement.getBoundingClientRect();\n\n                      const handleMouseMove = (e) => {\n                        const deltaX = e.clientX - startX;\n                        const deltaPercent = deltaX / rect.width;\n                        const newTime = Math.max(\n                          0,\n                          Math.min(\n                            duration,\n                            startTime + deltaPercent * duration\n                          )\n                        );\n                        handleSeek(newTime);\n                      };\n\n                      const handleMouseUp = () => {\n                        document.removeEventListener(\n                          \"mousemove\",\n                          handleMouseMove\n                        );\n                        document.removeEventListener(\"mouseup\", handleMouseUp);\n                      };\n\n                      document.addEventListener(\"mousemove\", handleMouseMove);\n                      document.addEventListener(\"mouseup\", handleMouseUp);\n                    }}\n                  />\n                )}\n\n                {isTrimmingMode && (\n                  <>\n                    <div\n                      className=\"trim-overlay trim-start\"\n                      style={{ width: `${(trimStart / duration) * 100}%` }}\n                    />\n                    <div\n                      className=\"trim-overlay trim-end\"\n                      style={{\n                        left: `${(trimEnd / duration) * 100}%`,\n                        width: `${((duration - trimEnd) / duration) * 100}%`,\n                      }}\n                    />\n                    <div\n                      className=\"trim-handle trim-handle-start\"\n                      style={{ left: `${(trimStart / duration) * 100}%` }}\n                      onMouseDown={(e) => {\n                        e.stopPropagation();\n                        const startX = e.clientX;\n                        const startValue = trimStart;\n                        const rect =\n                          e.currentTarget.parentElement.getBoundingClientRect();\n\n                        const handleMouseMove = (e) => {\n                          const deltaX = e.clientX - startX;\n                          const deltaPercent = deltaX / rect.width;\n                          const newValue = startValue + deltaPercent * duration;\n                          handleTrimHandleChange(\"start\", newValue);\n                        };\n\n                        const handleMouseUp = () => {\n                          document.removeEventListener(\n                            \"mousemove\",\n                            handleMouseMove\n                          );\n                          document.removeEventListener(\n                            \"mouseup\",\n                            handleMouseUp\n                          );\n                        };\n\n                        document.addEventListener(\"mousemove\", handleMouseMove);\n                        document.addEventListener(\"mouseup\", handleMouseUp);\n                      }}\n                    />\n                    <div\n                      className=\"trim-handle trim-handle-end\"\n                      style={{ left: `${(trimEnd / duration) * 100}%` }}\n                      onMouseDown={(e) => {\n                        e.stopPropagation();\n                        const startX = e.clientX;\n                        const startValue = trimEnd;\n                        const rect =\n                          e.currentTarget.parentElement.getBoundingClientRect();\n\n                        const handleMouseMove = (e) => {\n                          const deltaX = e.clientX - startX;\n                          const deltaPercent = deltaX / rect.width;\n                          const newValue = startValue + deltaPercent * duration;\n                          handleTrimHandleChange(\"end\", newValue);\n                        };\n\n                        const handleMouseUp = () => {\n                          document.removeEventListener(\n                            \"mousemove\",\n                            handleMouseMove\n                          );\n                          document.removeEventListener(\n                            \"mouseup\",\n                            handleMouseUp\n                          );\n                        };\n\n                        document.addEventListener(\"mousemove\", handleMouseMove);\n                        document.addEventListener(\"mouseup\", handleMouseUp);\n                      }}\n                    />\n                  </>\n                )}\n              </div>\n\n              <div className=\"timeline-times\">\n                <span>{formatTime(currentTime / 1000)}</span>\n                {isTrimmingMode && (\n                  <span className=\"trim-info\">\n                    Trim: {formatTime(trimStart / 1000)} -{\" \"}\n                    {formatTime(trimEnd / 1000)}\n                  </span>\n                )}\n                <span>{formatTime(duration / 1000)}</span>\n              </div>\n            </div>\n\n            <div className=\"player-controls\">\n              <button onClick={handlePlay} disabled={isPlaying}>\n                ▶️ Play\n              </button>\n              <button onClick={handlePause} disabled={!isPlaying}>\n                ⏸️ Pause\n              </button>\n              <button onClick={handleStop}>⏹️ Stop</button>\n\n              {!isTrimmingMode ? (\n                <button onClick={handleStartTrimming} className=\"trim-button\">\n                  ✂️ Trim\n                </button>\n              ) : (\n                <>\n                  <button onClick={handleSaveTrim} className=\"save-trim-button\">\n                    💾 Save Trim\n                  </button>\n                  <button\n                    onClick={handleCancelTrim}\n                    className=\"cancel-trim-button\"\n                  >\n                    ❌ Cancel\n                  </button>\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {snackbar && (\n        <Snackbar\n          message={snackbar.message}\n          type={snackbar.type}\n          onClose={() => setSnackbar(null)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,SACEC,YAAY,EACZC,aAAa,EACbC,gBAAgB,EAChBC,mBAAmB,EACnBC,uBAAuB,EACvBC,UAAU,EACVC,eAAe,QACV,mBAAmB;;AAE1B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;EAClC,MAAMC,UAAU,GAAG;IACjB,CAAC,EAAE;MAAEC,IAAI,EAAE,kBAAkB;MAAEC,KAAK,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAK,CAAC;IAC/D,CAAC,EAAE;MAAEF,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAI,CAAC;IAClD,CAAC,EAAE;MAAEF,IAAI,EAAE,cAAc;MAAEC,KAAK,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAK,CAAC;IAC3D,CAAC,EAAE;MAAEF,IAAI,EAAE,qBAAqB;MAAEC,KAAK,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAK,CAAC;IAClE,CAAC,EAAE;MAAEF,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAK,CAAC;IACnD,CAAC,EAAE;MAAEF,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAI;EACrD,CAAC;EAED,MAAMC,QAAQ,GAAGJ,UAAU,CAACD,KAAK,CAACM,IAAI,CAAC,IAAI;IACzCJ,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE;EACV,CAAC;;EAED;EACA,IAAIJ,KAAK,CAACM,IAAI,KAAK,CAAC,IAAIN,KAAK,CAACO,IAAI,EAAE;IAClC,MAAMC,MAAM,GAAGR,KAAK,CAACO,IAAI,CAACC,MAAM;IAChC,MAAMC,WAAW,GAAG;MAClB,CAAC,EAAE,UAAU;MACb,CAAC,EAAE,WAAW;MACd,CAAC,EAAE,kBAAkB;MACrB,CAAC,EAAE,QAAQ;MACX,CAAC,EAAE,gBAAgB;MACnB,CAAC,EAAE,OAAO;MACV,CAAC,EAAE,WAAW;MACd,CAAC,EAAE,kBAAkB;MACrB,CAAC,EAAE,gBAAgB;MACnB,CAAC,EAAE,gBAAgB;MACnB,EAAE,EAAE,MAAM;MACV,EAAE,EAAE,KAAK;MACT,EAAE,EAAE,MAAM;MACV,EAAE,EAAE;IACN,CAAC;IAED,IAAIA,WAAW,CAACD,MAAM,CAAC,KAAKE,SAAS,EAAE;MACrC,OAAO;QACL,GAAGL,QAAQ;QACXH,IAAI,EAAE,GAAGG,QAAQ,CAACH,IAAI,KAAKO,WAAW,CAACD,MAAM,CAAC,GAAG;QACjDG,OAAO,EAAEF,WAAW,CAACD,MAAM;MAC7B,CAAC;IACH;EACF;EAEA,OAAOH,QAAQ;AACjB,CAAC;;AAED;AACA,MAAMO,QAAQ,GAAGA,CAAC;EAAEC,OAAO;EAAEP,IAAI;EAAEQ;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC/C7B,SAAS,CAAC,MAAM;IACd,MAAM8B,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BH,OAAO,CAAC,CAAC;IACX,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAMI,YAAY,CAACF,KAAK,CAAC;EAClC,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EAEb,oBACElB,OAAA;IAAKuB,SAAS,EAAE,YAAYb,IAAI,EAAG;IAAAc,QAAA,gBACjCxB,OAAA;MAAAwB,QAAA,EAAOP;IAAO;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACtB5B,OAAA;MAAQuB,SAAS,EAAC,gBAAgB;MAACM,OAAO,EAAEX,OAAQ;MAAAM,QAAA,EAAC;IAErD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACT,EAAA,CAjBIH,QAAQ;AAAAc,EAAA,GAARd,QAAQ;AAmBd,SAASe,GAAGA,CAAA,EAAG;EAAAC,GAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAG9C,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAAC+C,KAAK,EAAEC,QAAQ,CAAC,GAAGhD,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACiD,SAAS,EAAEC,YAAY,CAAC,GAAGlD,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACmD,SAAS,EAAEC,YAAY,CAAC,GAAGpD,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClD,MAAM,CAACqD,YAAY,EAAEC,eAAe,CAAC,GAAGtD,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACuD,aAAa,EAAEC,gBAAgB,CAAC,GAAGxD,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACyD,YAAY,EAAEC,eAAe,CAAC,GAAG1D,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAAC2D,UAAU,EAAEC,aAAa,CAAC,GAAG5D,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC6D,WAAW,EAAEC,cAAc,CAAC,GAAG9D,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM+D,SAAS,GAAG9D,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM+D,QAAQ,GAAG/D,MAAM,CAAC,IAAI,CAAC;;EAE7B;EACA,MAAM,CAACgE,WAAW,EAAEC,cAAc,CAAC,GAAGlE,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACmE,QAAQ,EAAEC,WAAW,CAAC,GAAGpE,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACqE,cAAc,EAAEC,iBAAiB,CAAC,GAAGtE,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACuE,SAAS,EAAEC,YAAY,CAAC,GAAGxE,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACyE,OAAO,EAAEC,UAAU,CAAC,GAAG1E,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM2E,sBAAsB,GAAG1E,MAAM,CAAC,IAAI,CAAC;EAC3C,MAAM,CAAC2E,YAAY,EAAEC,eAAe,CAAC,GAAG7E,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC8E,QAAQ,EAAEC,WAAW,CAAC,GAAG/E,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMgF,mBAAmB,GAAGA,CAACC,WAAW,EAAEC,iBAAiB,KAAK;IAC9D,IAAI,CAACD,WAAW,IAAI,CAACC,iBAAiB,EAAE,OAAO,EAAE;IAEjD,MAAMC,SAAS,GAAGD,iBAAiB,CAACC,SAAS;IAC7C,MAAMC,OAAO,GAAG,EAAE;;IAElB;IACA,MAAMC,iBAAiB,GAAGJ,WAAW,CAACK,MAAM,CAAEtE,KAAK,IAAK;MACtD;MACA,IAAIA,KAAK,CAACM,IAAI,KAAK,CAAC,EAAE,OAAO,IAAI;;MAEjC;MACA,IAAIN,KAAK,CAACM,IAAI,KAAK,CAAC,EAAE,OAAO,IAAI;;MAEjC;MACA,IAAIN,KAAK,CAACM,IAAI,KAAK,CAAC,IAAIN,KAAK,CAACO,IAAI,EAAE;QAClC,MAAMC,MAAM,GAAGR,KAAK,CAACO,IAAI,CAACC,MAAM;QAChC,OAAOA,MAAM,KAAK,CAAC,IAAIA,MAAM,KAAK,CAAC,IAAIA,MAAM,KAAK,CAAC,CAAC,CAAC;MACvD;MAEA,OAAO,KAAK;IACd,CAAC,CAAC;;IAEF;IACA,MAAM+D,iBAAiB,GAAG,CAAC,CAAC;IAE5BF,iBAAiB,CAACG,OAAO,CAAExE,KAAK,IAAK;MACnC,MAAMyE,YAAY,GAAGzE,KAAK,CAAC0E,SAAS,GAAGP,SAAS;MAChD;MACA,MAAMQ,UAAU,GACbF,YAAY,IAAIP,iBAAiB,CAACf,QAAQ,GAAG,IAAI,CAAC,GAAI,GAAG;MAE5D,MAAMyB,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACH,UAAU,CAAC,CAAC,CAAC;;MAE1C,IAAI,CAACJ,iBAAiB,CAACK,SAAS,CAAC,EAAE;QACjCL,iBAAiB,CAACK,SAAS,CAAC,GAAG,EAAE;MACnC;MAEAL,iBAAiB,CAACK,SAAS,CAAC,CAACG,IAAI,CAAC;QAChC,GAAG/E,KAAK;QACRyE,YAAY;QACZE,UAAU;QACVK,QAAQ,EAAEjF,gBAAgB,CAACC,KAAK;MAClC,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACAiF,MAAM,CAACC,OAAO,CAACX,iBAAiB,CAAC,CAACC,OAAO,CAAC,CAAC,CAACI,SAAS,EAAE/C,MAAM,CAAC,KAAK;MACjE,IAAIA,MAAM,CAACsD,MAAM,KAAK,CAAC,EAAE;QACvBf,OAAO,CAACW,IAAI,CAAClD,MAAM,CAAC,CAAC,CAAC,CAAC;MACzB,CAAC,MAAM;QACL;QACA,MAAMuD,cAAc,GAAGvD,MAAM,CAAC,CAAC,CAAC;QAChCuC,OAAO,CAACW,IAAI,CAAC;UACX,GAAGK,cAAc;UACjBC,KAAK,EAAExD,MAAM,CAACsD,MAAM;UACpBG,OAAO,EAAE;QACX,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IAEF,OAAOlB,OAAO,CAACmB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACd,SAAS,GAAGe,CAAC,CAACf,SAAS,CAAC;EAC1D,CAAC;;EAED;EACA,MAAMgB,gBAAgB,GAAGA,CAAC7E,OAAO,EAAEP,IAAI,GAAG,OAAO,KAAK;IACpDyD,WAAW,CAAC;MAAElD,OAAO;MAAEP;IAAK,CAAC,CAAC;EAChC,CAAC;EAED,MAAMqF,gBAAgB,GAAIC,IAAI,IAAK;IACjC,IAAI,CAACA,IAAI,EAAE;IAEX,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;MACrB,IAAI;QACF,MAAMC,OAAO,GAAGD,CAAC,CAACE,MAAM,CAACC,MAAM;QAC/B,IAAIC,QAAQ;QAEZ,IAAI,OAAOH,OAAO,KAAK,QAAQ,EAAE;UAC/BG,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,OAAO,CAAC;QAChC,CAAC,MAAM;UACL;UACA,MAAMM,IAAI,GAAG,IAAIC,WAAW,CAAC,CAAC,CAACC,MAAM,CAACR,OAAO,CAAC;UAC9CG,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC;QAC7B;;QAEA;QACAG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEP,QAAQ,CAAC;QACvCM,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,OAAOP,QAAQ,CAAC;QAC1CM,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,KAAK,CAACC,OAAO,CAACT,QAAQ,CAAC,CAAC;;QAEjD;QACA,IAAInC,WAAW;QACf,IAAI2C,KAAK,CAACC,OAAO,CAACT,QAAQ,CAAC,EAAE;UAC3BnC,WAAW,GAAGmC,QAAQ;QACxB,CAAC,MAAM,IAAIA,QAAQ,CAACvE,MAAM,IAAI+E,KAAK,CAACC,OAAO,CAACT,QAAQ,CAACvE,MAAM,CAAC,EAAE;UAC5D;UACAoC,WAAW,GAAGmC,QAAQ,CAACvE,MAAM;QAC/B,CAAC,MAAM,IAAIuE,QAAQ,CAAC7F,IAAI,IAAIqG,KAAK,CAACC,OAAO,CAACT,QAAQ,CAAC7F,IAAI,CAAC,EAAE;UACxD0D,WAAW,GAAGmC,QAAQ,CAAC7F,IAAI;QAC7B,CAAC,MAAM;UACL;UACA0D,WAAW,GAAG,CAACmC,QAAQ,CAAC;QAC1B;QAEAM,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE1C,WAAW,CAACkB,MAAM,EAAE,QAAQ,CAAC;QACpEuB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE1C,WAAW,CAAC6C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;QAEzD;QACA,IAAI,CAAC7C,WAAW,IAAIA,WAAW,CAACkB,MAAM,KAAK,CAAC,EAAE;UAC5CO,gBAAgB,CACd,2CAA2C,EAC3C,OACF,CAAC;UACD;QACF;;QAEA;QACA,MAAMqB,QAAQ,GAAGzH,gBAAgB,CAAC2E,WAAW,CAAC;QAC9C,IAAI,CAAC8C,QAAQ,EAAE;UACbrB,gBAAgB,CAAC,6BAA6B,EAAE,OAAO,CAAC;UACxD;QACF;QAEAtD,YAAY,CAAC2E,QAAQ,CAAC;QACtBjF,SAAS,CAACmC,WAAW,CAAC;QACtBjC,QAAQ,CAAC,IAAI,CAAC;QACd0E,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEI,QAAQ,CAAC;;QAE1C;QACA,MAAM3C,OAAO,GAAGJ,mBAAmB,CAACC,WAAW,EAAE8C,QAAQ,CAAC;QAC1DlD,eAAe,CAACO,OAAO,CAAC;QAExBsB,gBAAgB,CAAC,+BAA+B,EAAE,SAAS,CAAC;MAC9D,CAAC,CAAC,OAAOsB,GAAG,EAAE;QACZN,OAAO,CAAC3E,KAAK,CAAC,qBAAqB,EAAEiF,GAAG,CAAC;QACzCtB,gBAAgB,CACd,uBAAuBsB,GAAG,CAACnG,OAAO,kEAAkE,EACpG,OACF,CAAC;MACH;IACF,CAAC;IAEDgF,MAAM,CAACoB,OAAO,GAAG,MAAM;MACrBvB,gBAAgB,CAAC,uCAAuC,EAAE,OAAO,CAAC;IACpE,CAAC;IAEDG,MAAM,CAACqB,UAAU,CAACtB,IAAI,CAAC;EACzB,CAAC;EAED,MAAMuB,cAAc,GAAInB,CAAC,IAAK;IAC5BA,CAAC,CAACoB,cAAc,CAAC,CAAC;IAClB,MAAMC,KAAK,GAAGrB,CAAC,CAACsB,YAAY,CAACD,KAAK;IAClC,IAAIA,KAAK,CAAClC,MAAM,GAAG,CAAC,EAAE;MACpBQ,gBAAgB,CAAC0B,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5B;EACF,CAAC;EAED,MAAME,cAAc,GAAIvB,CAAC,IAAK;IAC5BA,CAAC,CAACoB,cAAc,CAAC,CAAC;EACpB,CAAC;EAED,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,CAAC3F,MAAM,IAAI,CAACkB,SAAS,CAAC0E,OAAO,EAAE;IAEnC,IAAI;MACF;MACA,IAAIzE,QAAQ,CAACyE,OAAO,EAAE;QACpB,IAAI;UACFzE,QAAQ,CAACyE,OAAO,CAACC,OAAO,CAAC,CAAC;QAC5B,CAAC,CAAC,OAAOC,YAAY,EAAE;UACrBjB,OAAO,CAACkB,IAAI,CAAC,qCAAqC,EAAED,YAAY,CAAC;UACjE;UACA,IAAI5E,SAAS,CAAC0E,OAAO,EAAE;YACrB1E,SAAS,CAAC0E,OAAO,CAACI,SAAS,GAAG,EAAE;UAClC;QACF;QACA7E,QAAQ,CAACyE,OAAO,GAAG,IAAI;MACzB;;MAEA;MACA,IAAI1E,SAAS,CAAC0E,OAAO,EAAE;QACrB1E,SAAS,CAAC0E,OAAO,CAACI,SAAS,GAAG,EAAE;MAClC;;MAEA;MACAnB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE9E,MAAM,CAACsD,MAAM,EAAE,QAAQ,CAAC;MACzD,MAAM2C,aAAa,GAAGjG,MAAM,CAACyC,MAAM,CAAE0B,CAAC,IAAKA,CAAC,CAAC1F,IAAI,KAAK,CAAC,CAAC;MACxD,MAAMyH,UAAU,GAAGlG,MAAM,CAACyC,MAAM,CAAE0B,CAAC,IAAKA,CAAC,CAAC1F,IAAI,KAAK,CAAC,CAAC;MACrDoG,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEmB,aAAa,CAAC3C,MAAM,CAAC;MACpDuB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEoB,UAAU,CAAC5C,MAAM,CAAC;MAE9C,IAAI2C,aAAa,CAAC3C,MAAM,KAAK,CAAC,EAAE;QAC9BnD,QAAQ,CACN,wEACF,CAAC;QACD;MACF;;MAEA;MACAgB,QAAQ,CAACyE,OAAO,GAAG,IAAItI,QAAQ,CAAC0C,MAAM,EAAE;QACtCmG,IAAI,EAAEjF,SAAS,CAAC0E,OAAO;QACvBQ,YAAY,EAAE,KAAK;QACnBC,WAAW,EAAE,IAAI;QACjBC,UAAU,EAAE,UAAU;QACtBC,QAAQ,EAAE,KAAK;QACfC,YAAY,EAAE,KAAK;QACnBC,SAAS,EAAE,KAAK;QAChBC,gBAAgB,EAAE,CAChB,+CAA+C,EAC/C,0CAA0C;MAE9C,CAAC,CAAC;;MAEF;MACAvF,QAAQ,CAACyE,OAAO,CAACe,EAAE,CAAC,cAAc,EAAGC,KAAK,IAAK;QAC7C/B,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE8B,KAAK,CAAC;MAC/C,CAAC,CAAC;MAEFzF,QAAQ,CAACyE,OAAO,CAACe,EAAE,CAAC,QAAQ,EAAGE,IAAI,IAAK;QACtChC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE+B,IAAI,CAAC;MACxC,CAAC,CAAC;;MAEF;MACA,MAAMC,QAAQ,GAAG3F,QAAQ,CAACyE,OAAO,CAACmB,WAAW,CAAC,CAAC;MAC/C,MAAMC,aAAa,GAAGF,QAAQ,CAACG,SAAS;MACxC1F,WAAW,CAACyF,aAAa,CAAC;MAC1BnF,UAAU,CAACmF,aAAa,CAAC;MAEzBnC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAClD,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZN,OAAO,CAAC3E,KAAK,CAAC,8BAA8B,EAAEiF,GAAG,CAAC;MAClDhF,QAAQ,CAAC,8BAA8BgF,GAAG,CAACnG,OAAO,EAAE,CAAC;IACvD;EACF,CAAC;EAED3B,SAAS,CAAC,MAAM;IACd,IAAI2C,MAAM,IAAIkB,SAAS,CAAC0E,OAAO,EAAE;MAC/BD,gBAAgB,CAAC,CAAC;IACpB;;IAEA;IACA,OAAO,MAAM;MACX,IAAIxE,QAAQ,CAACyE,OAAO,EAAE;QACpB,IAAI;UACFzE,QAAQ,CAACyE,OAAO,CAACC,OAAO,CAAC,CAAC;QAC5B,CAAC,CAAC,OAAOC,YAAY,EAAE;UACrBjB,OAAO,CAACkB,IAAI,CAAC,uCAAuC,EAAED,YAAY,CAAC;UACnE;UACA,IAAI5E,SAAS,CAAC0E,OAAO,EAAE;YACrB1E,SAAS,CAAC0E,OAAO,CAACI,SAAS,GAAG,EAAE;UAClC;QACF;QACA7E,QAAQ,CAACyE,OAAO,GAAG,IAAI;MACzB;IACF,CAAC;EACH,CAAC,EAAE,CAAC5F,MAAM,CAAC,CAAC;EAEZ,MAAMkH,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI/F,QAAQ,CAACyE,OAAO,EAAE;MACpB;MACA,IAAIxE,WAAW,GAAG,CAAC,EAAE;QACnBD,QAAQ,CAACyE,OAAO,CAACuB,IAAI,CAAC/F,WAAW,CAAC;MACpC,CAAC,MAAM;QACLD,QAAQ,CAACyE,OAAO,CAACuB,IAAI,CAAC,CAAC;MACzB;MACA9G,YAAY,CAAC,IAAI,CAAC;MAClB;MACAyB,sBAAsB,CAAC8D,OAAO,GAAGwB,WAAW,CAAC,MAAM;QACjD,IAAIjG,QAAQ,CAACyE,OAAO,EAAE;UACpB,MAAMyB,IAAI,GAAGlG,QAAQ,CAACyE,OAAO,CAAC0B,cAAc,CAAC,CAAC;UAC9CjG,cAAc,CAACgG,IAAI,CAAC;QACtB;MACF,CAAC,EAAE,GAAG,CAAC;IACT;EACF,CAAC;EAED,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIpG,QAAQ,CAACyE,OAAO,EAAE;MACpBzE,QAAQ,CAACyE,OAAO,CAAC4B,KAAK,CAAC,CAAC;MACxBnH,YAAY,CAAC,KAAK,CAAC;MACnB;MACA,IAAIyB,sBAAsB,CAAC8D,OAAO,EAAE;QAClC6B,aAAa,CAAC3F,sBAAsB,CAAC8D,OAAO,CAAC;MAC/C;IACF;EACF,CAAC;EAED,MAAM8B,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIvG,QAAQ,CAACyE,OAAO,EAAE;MACpBzE,QAAQ,CAACyE,OAAO,CAAC4B,KAAK,CAAC,CAAC;MACxB;MACArG,QAAQ,CAACyE,OAAO,CAACuB,IAAI,CAAC,CAAC,CAAC;MACxBhG,QAAQ,CAACyE,OAAO,CAAC4B,KAAK,CAAC,CAAC;MACxBnH,YAAY,CAAC,KAAK,CAAC;MACnBgB,cAAc,CAAC,CAAC,CAAC;MACjB;MACA,IAAIS,sBAAsB,CAAC8D,OAAO,EAAE;QAClC6B,aAAa,CAAC3F,sBAAsB,CAAC8D,OAAO,CAAC;MAC/C;IACF;EACF,CAAC;EAED,MAAM+B,UAAU,GAAIN,IAAI,IAAK;IAC3B,IAAIlG,QAAQ,CAACyE,OAAO,EAAE;MACpBzE,QAAQ,CAACyE,OAAO,CAACuB,IAAI,CAACE,IAAI,CAAC;MAC3BlG,QAAQ,CAACyE,OAAO,CAAC4B,KAAK,CAAC,CAAC;MACxBnG,cAAc,CAACgG,IAAI,CAAC;IACtB;EACF,CAAC;EAED,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAAC5H,MAAM,IAAI,CAACc,UAAU,CAAC+G,IAAI,CAAC,CAAC,EAAE;MACjC5G,cAAc,CAAC,EAAE,CAAC;MAClB;IACF;IAEA,MAAM6G,KAAK,GAAGpK,mBAAmB,CAACsC,MAAM,EAAEc,UAAU,CAAC+G,IAAI,CAAC,CAAC,CAAC;IAC5D5G,cAAc,CAAC6G,KAAK,CAAC;EACvB,CAAC;EAED,MAAMC,aAAa,GAAIC,eAAe,IAAK;IACzCvH,eAAe,CAAC7C,UAAU,CAACoK,eAAe,CAAC,CAAC;EAC9C,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChCxG,iBAAiB,CAAC,IAAI,CAAC;IACvB;IACA,MAAMa,SAAS,GAAGlB,WAAW;IAC7B,MAAM8G,OAAO,GAAGlF,IAAI,CAACmF,GAAG,CAAC7G,QAAQ,EAAE0B,IAAI,CAACoF,GAAG,CAAChH,WAAW,GAAG,IAAI,EAAEE,QAAQ,CAAC,CAAC;;IAE1E;IACA,IAAIA,QAAQ,GAAGF,WAAW,GAAG,IAAI,EAAE;MACjCO,YAAY,CAACqB,IAAI,CAACoF,GAAG,CAAC,CAAC,EAAE9G,QAAQ,GAAG,IAAI,CAAC,CAAC;MAC1CO,UAAU,CAACP,QAAQ,CAAC;IACtB,CAAC,MAAM;MACLK,YAAY,CAACP,WAAW,CAAC;MACzBS,UAAU,CAACqG,OAAO,CAAC;IACrB;EACF,CAAC;EAED,MAAMG,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACrI,MAAM,IAAI,CAACM,SAAS,EAAE;MACzBuD,gBAAgB,CAAC,qBAAqB,EAAE,OAAO,CAAC;MAChD;IACF;;IAEA;IACA,IAAIjC,OAAO,IAAIF,SAAS,EAAE;MACxBmC,gBAAgB,CAAC,mCAAmC,EAAE,OAAO,CAAC;MAC9D;IACF;IAEA,IAAIjC,OAAO,GAAGF,SAAS,GAAG,GAAG,EAAE;MAC7BmC,gBAAgB,CAAC,4CAA4C,EAAE,OAAO,CAAC;MACvE;IACF;IAEA,IAAI;MACFA,gBAAgB,CACd,uDAAuD,EACvD,MACF,CAAC;;MAED;MACA;MACA,MAAMyE,cAAc,GAAGtI,MAAM,CAAC,CAAC,CAAC,CAAC6C,SAAS;MAC1C,MAAM0F,eAAe,GAAGD,cAAc,GAAG5G,SAAS;MAClD,MAAM8G,aAAa,GAAGF,cAAc,GAAG1G,OAAO;MAE9CiD,OAAO,CAACC,GAAG,CACT,4BAA4BpD,SAAS,OAAO9D,UAAU,CACpD8D,SAAS,GAAG,IACd,CAAC,UAAUE,OAAO,OAAOhE,UAAU,CAACgE,OAAO,GAAG,IAAI,CAAC,GACrD,CAAC;MACDiD,OAAO,CAACC,GAAG,CAAC,uBAAuBwD,cAAc,IAAI,CAAC;MACtDzD,OAAO,CAACC,GAAG,CACT,8BAA8ByD,eAAe,WAAWC,aAAa,IACvE,CAAC;;MAED;MACA,MAAMC,IAAI,GAAG,MAAMjL,aAAa,CAACwC,MAAM,EAAEuI,eAAe,EAAEC,aAAa,CAAC;;MAExE;MACA,MAAME,YAAY,GAAGhH,SAAS,GAAG,IAAI;MACrC,MAAMiH,UAAU,GAAG/G,OAAO,GAAG,IAAI;;MAEjC;MACA,MAAMgH,OAAO,GACX,+BAA+B,GAC/BC,kBAAkB,CAACrE,IAAI,CAACsE,SAAS,CAACL,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;MACnD,MAAMM,kBAAkB,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACtDF,kBAAkB,CAACG,YAAY,CAAC,MAAM,EAAEN,OAAO,CAAC;MAChDG,kBAAkB,CAACG,YAAY,CAC7B,UAAU,EACV,WAAWtL,UAAU,CAAC8K,YAAY,CAAC,OAAO9K,UAAU,CAAC+K,UAAU,CAAC,OAClE,CAAC;MACDK,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,kBAAkB,CAAC;MAC7CA,kBAAkB,CAACM,KAAK,CAAC,CAAC;MAC1BN,kBAAkB,CAACO,MAAM,CAAC,CAAC;MAE3B7H,iBAAiB,CAAC,KAAK,CAAC;MACxBoC,gBAAgB,CACd,mCAAmCjG,UAAU,CAC3C8K,YACF,CAAC,MAAM9K,UAAU,CACf+K,UACF,CAAC,qCAAqC/K,UAAU,CAAC8K,YAAY,CAAC,GAAG,EACjE,SACF,CAAC;IACH,CAAC,CAAC,OAAOvD,GAAG,EAAE;MACZN,OAAO,CAAC3E,KAAK,CAAC,2BAA2B,EAAEiF,GAAG,CAAC;MAC/CtB,gBAAgB,CAAC,6BAA6BsB,GAAG,CAACnG,OAAO,EAAE,EAAE,OAAO,CAAC;IACvE;EACF,CAAC;EAED,MAAMuK,gBAAgB,GAAGA,CAAA,KAAM;IAC7B9H,iBAAiB,CAAC,KAAK,CAAC;IACxBE,YAAY,CAAC,CAAC,CAAC;IACfE,UAAU,CAACP,QAAQ,CAAC;EACtB,CAAC;EAED,MAAMkI,sBAAsB,GAAGA,CAAC/K,IAAI,EAAEgL,KAAK,KAAK;IAC9C,IAAIhL,IAAI,KAAK,OAAO,EAAE;MACpBkD,YAAY,CAACqB,IAAI,CAACoF,GAAG,CAAC,CAAC,EAAEpF,IAAI,CAACmF,GAAG,CAACsB,KAAK,EAAE7H,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,MAAM;MACLC,UAAU,CAACmB,IAAI,CAACoF,GAAG,CAAC1G,SAAS,GAAG,IAAI,EAAEsB,IAAI,CAACmF,GAAG,CAACsB,KAAK,EAAEnI,QAAQ,CAAC,CAAC,CAAC;IACnE;EACF,CAAC;EAED,MAAMoI,SAAS,GAAIC,MAAM,IAAK;IAC5B,IAAI,CAAC3J,MAAM,IAAI,CAACM,SAAS,EAAE;MACzBuD,gBAAgB,CAAC,qBAAqB,EAAE,OAAO,CAAC;MAChD;IACF;IAEA,IAAI;MACF,MAAMmE,eAAe,GAAGnK,eAAe,CAAC2C,YAAY,CAAC;MACrD,MAAMiI,IAAI,GAAGlL,YAAY,CACvByC,MAAM,EACNgI,eAAe,EACftH,aAAa,EACbE,YACF,CAAC;MAED,IAAI+I,MAAM,KAAK,MAAM,EAAE;QACrB;QACA1J,SAAS,CAACwI,IAAI,CAAC;QACf,MAAMvD,QAAQ,GAAGzH,gBAAgB,CAACgL,IAAI,CAAC;QACvClI,YAAY,CAAC2E,QAAQ,CAAC;QACtBzE,eAAe,CAAC,EAAE,CAAC;QACnBQ,cAAc,CAAC,EAAE,CAAC;;QAElB;QACA,MAAMsB,OAAO,GAAGJ,mBAAmB,CAACsG,IAAI,EAAEvD,QAAQ,CAAC;QACnDlD,eAAe,CAACO,OAAO,CAAC;QAExBsB,gBAAgB,CAAC,0BAA0B,EAAE,SAAS,CAAC;MACzD,CAAC,MAAM,IAAI8F,MAAM,KAAK,UAAU,EAAE;QAChC;QACA,MAAMf,OAAO,GACX,+BAA+B,GAC/BC,kBAAkB,CAACrE,IAAI,CAACsE,SAAS,CAACL,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QACnD,MAAMM,kBAAkB,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QACtDF,kBAAkB,CAACG,YAAY,CAAC,MAAM,EAAEN,OAAO,CAAC;QAChDG,kBAAkB,CAACG,YAAY,CAC7B,UAAU,EACV,QAAQ1I,YAAY,IAAI,SAAS,OACnC,CAAC;QACDwI,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,kBAAkB,CAAC;QAC7CA,kBAAkB,CAACM,KAAK,CAAC,CAAC;QAC1BN,kBAAkB,CAACO,MAAM,CAAC,CAAC;QAE3BzF,gBAAgB,CAAC,8BAA8B,EAAE,SAAS,CAAC;MAC7D;IACF,CAAC,CAAC,OAAOsB,GAAG,EAAE;MACZN,OAAO,CAAC3E,KAAK,CAAC,0BAA0B,EAAEiF,GAAG,CAAC;MAC9CtB,gBAAgB,CAAC,4BAA4BsB,GAAG,CAACnG,OAAO,EAAE,EAAE,OAAO,CAAC;IACtE;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBxB,OAAA;MAAKuB,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBxB,OAAA;QAAAwB,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB5B,OAAA;QAAAwB,QAAA,EAAG;MAA8C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eAEN5B,OAAA;MAAKuB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BxB,OAAA;QACEuB,SAAS,EAAC,aAAa;QACvBsK,MAAM,EAAEtE,cAAe;QACvBuE,UAAU,EAAEnE,cAAe;QAAAnG,QAAA,gBAE3BxB,OAAA;UACEU,IAAI,EAAC,MAAM;UACXqL,QAAQ,EAAG3F,CAAC,IAAKL,gBAAgB,CAACK,CAAC,CAACE,MAAM,CAACmB,KAAK,CAAC,CAAC,CAAC,CAAE;UACrDlG,SAAS,EAAC,YAAY;UACtByK,EAAE,EAAC;QAAa;UAAAvK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eACF5B,OAAA;UAAOiM,OAAO,EAAC,aAAa;UAAC1K,SAAS,EAAC,cAAc;UAAAC,QAAA,gBACnDxB,OAAA;YAAKuB,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrC5B,OAAA;YAAKuB,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BxB,OAAA;cAAAwB,QAAA,EAAQ;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,oBAChC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACN5B,OAAA;YAAKuB,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAAC;UAEhC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAELO,KAAK,iBAAInC,OAAA;MAAKuB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEW;IAAK;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAE7CW,SAAS,iBACRvC,OAAA;MAAKuB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BxB,OAAA;QAAAwB,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9B5B,OAAA;QAAKuB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BxB,OAAA;UAAKuB,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBxB,OAAA;YAAMuB,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC7C5B,OAAA;YAAMuB,SAAS,EAAC,YAAY;YAAAC,QAAA,EACzB3B,UAAU,CAAC0C,SAAS,CAACgB,QAAQ;UAAC;YAAA9B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACN5B,OAAA;UAAKuB,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBxB,OAAA;YAAMuB,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC3C5B,OAAA;YAAMuB,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEe,SAAS,CAAC2J;UAAU;YAAAzK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC,eACN5B,OAAA;UAAKuB,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBxB,OAAA;YAAMuB,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC1C5B,OAAA;YAAMuB,SAAS,EAAC,YAAY;YAAAC,QAAA,EACzB,IAAI2K,IAAI,CAAC5J,SAAS,CAACgC,SAAS,CAAC,CAAC6H,kBAAkB,CAAC;UAAC;YAAA3K,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACN5B,OAAA;UAAKuB,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBxB,OAAA;YAAMuB,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACxC5B,OAAA;YAAMuB,SAAS,EAAC,YAAY;YAAAC,QAAA,EACzB,IAAI2K,IAAI,CAAC5J,SAAS,CAAC4H,OAAO,CAAC,CAACiC,kBAAkB,CAAC;UAAC;YAAA3K,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAEAK,MAAM,iBACLjC,OAAA;MAAKuB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BxB,OAAA;QAAKqM,GAAG,EAAElJ,SAAU;QAAC5B,SAAS,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAE9C5B,OAAA;QAAKuB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BxB,OAAA;UAAKuB,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBACjCxB,OAAA;YACEuB,SAAS,EAAC,UAAU;YACpBM,OAAO,EAAGuE,CAAC,IAAK;cACd,IAAI,CAAC3C,cAAc,IAAI2C,CAAC,CAACE,MAAM,KAAKF,CAAC,CAACkG,aAAa,EAAE;gBACnD,MAAMC,IAAI,GAAGnG,CAAC,CAACkG,aAAa,CAACE,qBAAqB,CAAC,CAAC;gBACpD,MAAMC,CAAC,GAAGrG,CAAC,CAACsG,OAAO,GAAGH,IAAI,CAACI,IAAI;gBAC/B,MAAM5H,UAAU,GAAG0H,CAAC,GAAGF,IAAI,CAACK,KAAK;gBACjC,MAAMC,QAAQ,GAAG9H,UAAU,GAAGxB,QAAQ;gBACtCqG,UAAU,CAACiD,QAAQ,CAAC;cACtB;YACF,CAAE;YAAArL,QAAA,gBAEFxB,OAAA;cACEuB,SAAS,EAAC,mBAAmB;cAC7BuL,KAAK,EAAE;gBAAEF,KAAK,EAAE,GAAIvJ,WAAW,GAAGE,QAAQ,GAAI,GAAG;cAAI;YAAE;cAAA9B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxD,CAAC,eAGF5B,OAAA;cAAKuB,SAAS,EAAC,yBAAyB;cAAAC,QAAA,EACrCwC,YAAY,CAAC+I,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC9BjN,OAAA;gBAEEuB,SAAS,EAAE,gBACTyL,MAAM,CAACtH,OAAO,GAAG,SAAS,GAAG,EAAE,EAC9B;gBACHoH,KAAK,EAAE;kBACLH,IAAI,EAAE,GAAGK,MAAM,CAACjI,UAAU,GAAG;kBAC7BmI,eAAe,EAAEF,MAAM,CAAC5H,QAAQ,CAAC7E;gBACnC,CAAE;gBACF4M,KAAK,EAAE,GAAGH,MAAM,CAAC5H,QAAQ,CAAC9E,IAAI,GAC5B0M,MAAM,CAACtH,OAAO,GAAG,KAAKsH,MAAM,CAACvH,KAAK,UAAU,GAAG,EAAE,OAC5C5F,UAAU,CAACmN,MAAM,CAACnI,YAAY,GAAG,IAAI,CAAC,EAAG;gBAChDhD,OAAO,EAAEA,CAAA,KAAM+H,UAAU,CAACoD,MAAM,CAACnI,YAAY,CAAE;gBAAArD,QAAA,gBAE/CxB,OAAA;kBAAMuB,SAAS,EAAC,qBAAqB;kBAAAC,QAAA,EAClCwL,MAAM,CAAC5H,QAAQ,CAAC5E;gBAAM;kBAAAiB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnB,CAAC,EACNoL,MAAM,CAACtH,OAAO,iBACb1F,OAAA;kBAAMuB,SAAS,EAAC,oBAAoB;kBAAAC,QAAA,EACjCwL,MAAM,CAACvH;gBAAK;kBAAAhE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACT,CACP;cAAA,GApBI,GAAGoL,MAAM,CAAClI,SAAS,IAAImI,KAAK,EAAE;gBAAAxL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAqBhC,CACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,EAGL,CAAC6B,cAAc,iBACdzD,OAAA;cACEuB,SAAS,EAAC,mBAAmB;cAC7BuL,KAAK,EAAE;gBAAEH,IAAI,EAAE,GAAItJ,WAAW,GAAGE,QAAQ,GAAI,GAAG;cAAI,CAAE;cACtD6J,WAAW,EAAGhH,CAAC,IAAK;gBAClBA,CAAC,CAACiH,eAAe,CAAC,CAAC;gBACnB,MAAMC,MAAM,GAAGlH,CAAC,CAACsG,OAAO;gBACxB,MAAMnI,SAAS,GAAGlB,WAAW;gBAC7B,MAAMkJ,IAAI,GACRnG,CAAC,CAACkG,aAAa,CAACiB,aAAa,CAACf,qBAAqB,CAAC,CAAC;gBAEvD,MAAMgB,eAAe,GAAIpH,CAAC,IAAK;kBAC7B,MAAMqH,MAAM,GAAGrH,CAAC,CAACsG,OAAO,GAAGY,MAAM;kBACjC,MAAMI,YAAY,GAAGD,MAAM,GAAGlB,IAAI,CAACK,KAAK;kBACxC,MAAMe,OAAO,GAAG1I,IAAI,CAACoF,GAAG,CACtB,CAAC,EACDpF,IAAI,CAACmF,GAAG,CACN7G,QAAQ,EACRgB,SAAS,GAAGmJ,YAAY,GAAGnK,QAC7B,CACF,CAAC;kBACDqG,UAAU,CAAC+D,OAAO,CAAC;gBACrB,CAAC;gBAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;kBAC1B3C,QAAQ,CAAC4C,mBAAmB,CAC1B,WAAW,EACXL,eACF,CAAC;kBACDvC,QAAQ,CAAC4C,mBAAmB,CAAC,SAAS,EAAED,aAAa,CAAC;gBACxD,CAAC;gBAED3C,QAAQ,CAAC6C,gBAAgB,CAAC,WAAW,EAAEN,eAAe,CAAC;gBACvDvC,QAAQ,CAAC6C,gBAAgB,CAAC,SAAS,EAAEF,aAAa,CAAC;cACrD;YAAE;cAAAnM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CACF,EAEA6B,cAAc,iBACbzD,OAAA,CAAAE,SAAA;cAAAsB,QAAA,gBACExB,OAAA;gBACEuB,SAAS,EAAC,yBAAyB;gBACnCuL,KAAK,EAAE;kBAAEF,KAAK,EAAE,GAAIjJ,SAAS,GAAGJ,QAAQ,GAAI,GAAG;gBAAI;cAAE;gBAAA9B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtD,CAAC,eACF5B,OAAA;gBACEuB,SAAS,EAAC,uBAAuB;gBACjCuL,KAAK,EAAE;kBACLH,IAAI,EAAE,GAAI9I,OAAO,GAAGN,QAAQ,GAAI,GAAG,GAAG;kBACtCqJ,KAAK,EAAE,GAAI,CAACrJ,QAAQ,GAAGM,OAAO,IAAIN,QAAQ,GAAI,GAAG;gBACnD;cAAE;gBAAA9B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACF5B,OAAA;gBACEuB,SAAS,EAAC,+BAA+B;gBACzCuL,KAAK,EAAE;kBAAEH,IAAI,EAAE,GAAIhJ,SAAS,GAAGJ,QAAQ,GAAI,GAAG;gBAAI,CAAE;gBACpD6J,WAAW,EAAGhH,CAAC,IAAK;kBAClBA,CAAC,CAACiH,eAAe,CAAC,CAAC;kBACnB,MAAMC,MAAM,GAAGlH,CAAC,CAACsG,OAAO;kBACxB,MAAMqB,UAAU,GAAGpK,SAAS;kBAC5B,MAAM4I,IAAI,GACRnG,CAAC,CAACkG,aAAa,CAACiB,aAAa,CAACf,qBAAqB,CAAC,CAAC;kBAEvD,MAAMgB,eAAe,GAAIpH,CAAC,IAAK;oBAC7B,MAAMqH,MAAM,GAAGrH,CAAC,CAACsG,OAAO,GAAGY,MAAM;oBACjC,MAAMI,YAAY,GAAGD,MAAM,GAAGlB,IAAI,CAACK,KAAK;oBACxC,MAAMoB,QAAQ,GAAGD,UAAU,GAAGL,YAAY,GAAGnK,QAAQ;oBACrDkI,sBAAsB,CAAC,OAAO,EAAEuC,QAAQ,CAAC;kBAC3C,CAAC;kBAED,MAAMJ,aAAa,GAAGA,CAAA,KAAM;oBAC1B3C,QAAQ,CAAC4C,mBAAmB,CAC1B,WAAW,EACXL,eACF,CAAC;oBACDvC,QAAQ,CAAC4C,mBAAmB,CAC1B,SAAS,EACTD,aACF,CAAC;kBACH,CAAC;kBAED3C,QAAQ,CAAC6C,gBAAgB,CAAC,WAAW,EAAEN,eAAe,CAAC;kBACvDvC,QAAQ,CAAC6C,gBAAgB,CAAC,SAAS,EAAEF,aAAa,CAAC;gBACrD;cAAE;gBAAAnM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACF5B,OAAA;gBACEuB,SAAS,EAAC,6BAA6B;gBACvCuL,KAAK,EAAE;kBAAEH,IAAI,EAAE,GAAI9I,OAAO,GAAGN,QAAQ,GAAI,GAAG;gBAAI,CAAE;gBAClD6J,WAAW,EAAGhH,CAAC,IAAK;kBAClBA,CAAC,CAACiH,eAAe,CAAC,CAAC;kBACnB,MAAMC,MAAM,GAAGlH,CAAC,CAACsG,OAAO;kBACxB,MAAMqB,UAAU,GAAGlK,OAAO;kBAC1B,MAAM0I,IAAI,GACRnG,CAAC,CAACkG,aAAa,CAACiB,aAAa,CAACf,qBAAqB,CAAC,CAAC;kBAEvD,MAAMgB,eAAe,GAAIpH,CAAC,IAAK;oBAC7B,MAAMqH,MAAM,GAAGrH,CAAC,CAACsG,OAAO,GAAGY,MAAM;oBACjC,MAAMI,YAAY,GAAGD,MAAM,GAAGlB,IAAI,CAACK,KAAK;oBACxC,MAAMoB,QAAQ,GAAGD,UAAU,GAAGL,YAAY,GAAGnK,QAAQ;oBACrDkI,sBAAsB,CAAC,KAAK,EAAEuC,QAAQ,CAAC;kBACzC,CAAC;kBAED,MAAMJ,aAAa,GAAGA,CAAA,KAAM;oBAC1B3C,QAAQ,CAAC4C,mBAAmB,CAC1B,WAAW,EACXL,eACF,CAAC;oBACDvC,QAAQ,CAAC4C,mBAAmB,CAC1B,SAAS,EACTD,aACF,CAAC;kBACH,CAAC;kBAED3C,QAAQ,CAAC6C,gBAAgB,CAAC,WAAW,EAAEN,eAAe,CAAC;kBACvDvC,QAAQ,CAAC6C,gBAAgB,CAAC,SAAS,EAAEF,aAAa,CAAC;gBACrD;cAAE;gBAAAnM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA,eACF,CACH;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAEN5B,OAAA;YAAKuB,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7BxB,OAAA;cAAAwB,QAAA,EAAO3B,UAAU,CAACwD,WAAW,GAAG,IAAI;YAAC;cAAA5B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,EAC5C6B,cAAc,iBACbzD,OAAA;cAAMuB,SAAS,EAAC,WAAW;cAAAC,QAAA,GAAC,QACpB,EAAC3B,UAAU,CAAC8D,SAAS,GAAG,IAAI,CAAC,EAAC,IAAE,EAAC,GAAG,EACzC9D,UAAU,CAACgE,OAAO,GAAG,IAAI,CAAC;YAAA;cAAApC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB,CACP,eACD5B,OAAA;cAAAwB,QAAA,EAAO3B,UAAU,CAAC0D,QAAQ,GAAG,IAAI;YAAC;cAAA9B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN5B,OAAA;UAAKuB,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BxB,OAAA;YAAQ6B,OAAO,EAAEsH,UAAW;YAAC8E,QAAQ,EAAE5L,SAAU;YAAAb,QAAA,EAAC;UAElD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT5B,OAAA;YAAQ6B,OAAO,EAAE2H,WAAY;YAACyE,QAAQ,EAAE,CAAC5L,SAAU;YAAAb,QAAA,EAAC;UAEpD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT5B,OAAA;YAAQ6B,OAAO,EAAE8H,UAAW;YAAAnI,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAE5C,CAAC6B,cAAc,gBACdzD,OAAA;YAAQ6B,OAAO,EAAEqI,mBAAoB;YAAC3I,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAE9D;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,gBAET5B,OAAA,CAAAE,SAAA;YAAAsB,QAAA,gBACExB,OAAA;cAAQ6B,OAAO,EAAEyI,cAAe;cAAC/I,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAC;YAE9D;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACT5B,OAAA;cACE6B,OAAO,EAAE2J,gBAAiB;cAC1BjK,SAAS,EAAC,oBAAoB;cAAAC,QAAA,EAC/B;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,eACT,CACH;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAEAsC,QAAQ,iBACPlE,OAAA,CAACgB,QAAQ;MACPC,OAAO,EAAEiD,QAAQ,CAACjD,OAAQ;MAC1BP,IAAI,EAAEwD,QAAQ,CAACxD,IAAK;MACpBQ,OAAO,EAAEA,CAAA,KAAMiD,WAAW,CAAC,IAAI;IAAE;MAAA1C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACI,GAAA,CAvxBQD,GAAG;AAAAmM,GAAA,GAAHnM,GAAG;AAyxBZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAoM,GAAA;AAAAC,YAAA,CAAArM,EAAA;AAAAqM,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}