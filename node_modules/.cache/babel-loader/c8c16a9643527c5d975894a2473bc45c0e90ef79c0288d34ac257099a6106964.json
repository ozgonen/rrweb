{"ast":null,"code":"import { __awaiter } from './../../../../../ext/tslib/tslib.es6.js';\nimport { deserializeArg } from './deserialize-args.js';\nfunction canvasMutation({\n  event,\n  mutation,\n  target,\n  imageMap,\n  errorHandler\n}) {\n  return __awaiter(this, void 0, void 0, function* () {\n    try {\n      const ctx = target.getContext('2d');\n      if (mutation.setter) {\n        ctx[mutation.property] = mutation.args[0];\n        return;\n      }\n      const original = ctx[mutation.property];\n      if (mutation.property === 'drawImage' && typeof mutation.args[0] === 'string') {\n        imageMap.get(event);\n        original.apply(ctx, mutation.args);\n      } else {\n        const args = yield Promise.all(mutation.args.map(deserializeArg(imageMap, ctx)));\n        original.apply(ctx, args);\n      }\n    } catch (error) {\n      errorHandler(mutation, error);\n    }\n  });\n}\nexport { canvasMutation as default };","map":{"version":3,"names":["__awaiter","deserializeArg","canvasMutation","event","mutation","target","imageMap","errorHandler","ctx","getContext","setter","property","args","original","get","apply","Promise","all","map","error","default"],"sources":["/Users/ogonen/rrweb/node_modules/rrweb/es/rrweb/packages/rrweb/src/replay/canvas/2d.js"],"sourcesContent":["import { __awaiter } from './../../../../../ext/tslib/tslib.es6.js';\nimport { deserializeArg } from './deserialize-args.js';\n\nfunction canvasMutation({ event, mutation, target, imageMap, errorHandler, }) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            const ctx = target.getContext('2d');\r\n            if (mutation.setter) {\r\n                ctx[mutation.property] =\r\n                    mutation.args[0];\r\n                return;\r\n            }\r\n            const original = ctx[mutation.property];\r\n            if (mutation.property === 'drawImage' &&\r\n                typeof mutation.args[0] === 'string') {\r\n                imageMap.get(event);\r\n                original.apply(ctx, mutation.args);\r\n            }\r\n            else {\r\n                const args = yield Promise.all(mutation.args.map(deserializeArg(imageMap, ctx)));\r\n                original.apply(ctx, args);\r\n            }\r\n        }\r\n        catch (error) {\r\n            errorHandler(mutation, error);\r\n        }\r\n    });\r\n}\n\nexport { canvasMutation as default };\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,yCAAyC;AACnE,SAASC,cAAc,QAAQ,uBAAuB;AAEtD,SAASC,cAAcA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAc,CAAC,EAAE;EAC1E,OAAOP,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;IAChD,IAAI;MACA,MAAMQ,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;MACnC,IAAIL,QAAQ,CAACM,MAAM,EAAE;QACjBF,GAAG,CAACJ,QAAQ,CAACO,QAAQ,CAAC,GAClBP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC;QACpB;MACJ;MACA,MAAMC,QAAQ,GAAGL,GAAG,CAACJ,QAAQ,CAACO,QAAQ,CAAC;MACvC,IAAIP,QAAQ,CAACO,QAAQ,KAAK,WAAW,IACjC,OAAOP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;QACtCN,QAAQ,CAACQ,GAAG,CAACX,KAAK,CAAC;QACnBU,QAAQ,CAACE,KAAK,CAACP,GAAG,EAAEJ,QAAQ,CAACQ,IAAI,CAAC;MACtC,CAAC,MACI;QACD,MAAMA,IAAI,GAAG,MAAMI,OAAO,CAACC,GAAG,CAACb,QAAQ,CAACQ,IAAI,CAACM,GAAG,CAACjB,cAAc,CAACK,QAAQ,EAAEE,GAAG,CAAC,CAAC,CAAC;QAChFK,QAAQ,CAACE,KAAK,CAACP,GAAG,EAAEI,IAAI,CAAC;MAC7B;IACJ,CAAC,CACD,OAAOO,KAAK,EAAE;MACVZ,YAAY,CAACH,QAAQ,EAAEe,KAAK,CAAC;IACjC;EACJ,CAAC,CAAC;AACN;AAEA,SAASjB,cAAc,IAAIkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}