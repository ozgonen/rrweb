{"ast":null,"code":"import { patch, isBlocked } from '../../../utils.js';\nfunction initCanvasContextObserver(win, blockClass, blockSelector) {\n  const handlers = [];\n  try {\n    const restoreHandler = patch(win.HTMLCanvasElement.prototype, 'getContext', function (original) {\n      return function (contextType, ...args) {\n        if (!isBlocked(this, blockClass, blockSelector, true)) {\n          if (!('__context' in this)) this.__context = contextType;\n        }\n        return original.apply(this, [contextType, ...args]);\n      };\n    });\n    handlers.push(restoreHandler);\n  } catch (_a) {\n    console.error('failed to patch HTMLCanvasElement.prototype.getContext');\n  }\n  return () => {\n    handlers.forEach(h => h());\n  };\n}\nexport { initCanvasContextObserver as default };","map":{"version":3,"names":["patch","isBlocked","initCanvasContextObserver","win","blockClass","blockSelector","handlers","restoreHandler","HTMLCanvasElement","prototype","original","contextType","args","__context","apply","push","_a","console","error","forEach","h","default"],"sources":["/Users/ogonen/rrweb/node_modules/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/canvas.js"],"sourcesContent":["import { patch, isBlocked } from '../../../utils.js';\n\nfunction initCanvasContextObserver(win, blockClass, blockSelector) {\r\n    const handlers = [];\r\n    try {\r\n        const restoreHandler = patch(win.HTMLCanvasElement.prototype, 'getContext', function (original) {\r\n            return function (contextType, ...args) {\r\n                if (!isBlocked(this, blockClass, blockSelector, true)) {\r\n                    if (!('__context' in this))\r\n                        this.__context = contextType;\r\n                }\r\n                return original.apply(this, [contextType, ...args]);\r\n            };\r\n        });\r\n        handlers.push(restoreHandler);\r\n    }\r\n    catch (_a) {\r\n        console.error('failed to patch HTMLCanvasElement.prototype.getContext');\r\n    }\r\n    return () => {\r\n        handlers.forEach((h) => h());\r\n    };\r\n}\n\nexport { initCanvasContextObserver as default };\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,SAAS,QAAQ,mBAAmB;AAEpD,SAASC,yBAAyBA,CAACC,GAAG,EAAEC,UAAU,EAAEC,aAAa,EAAE;EAC/D,MAAMC,QAAQ,GAAG,EAAE;EACnB,IAAI;IACA,MAAMC,cAAc,GAAGP,KAAK,CAACG,GAAG,CAACK,iBAAiB,CAACC,SAAS,EAAE,YAAY,EAAE,UAAUC,QAAQ,EAAE;MAC5F,OAAO,UAAUC,WAAW,EAAE,GAAGC,IAAI,EAAE;QACnC,IAAI,CAACX,SAAS,CAAC,IAAI,EAAEG,UAAU,EAAEC,aAAa,EAAE,IAAI,CAAC,EAAE;UACnD,IAAI,EAAE,WAAW,IAAI,IAAI,CAAC,EACtB,IAAI,CAACQ,SAAS,GAAGF,WAAW;QACpC;QACA,OAAOD,QAAQ,CAACI,KAAK,CAAC,IAAI,EAAE,CAACH,WAAW,EAAE,GAAGC,IAAI,CAAC,CAAC;MACvD,CAAC;IACL,CAAC,CAAC;IACFN,QAAQ,CAACS,IAAI,CAACR,cAAc,CAAC;EACjC,CAAC,CACD,OAAOS,EAAE,EAAE;IACPC,OAAO,CAACC,KAAK,CAAC,wDAAwD,CAAC;EAC3E;EACA,OAAO,MAAM;IACTZ,QAAQ,CAACa,OAAO,CAAEC,CAAC,IAAKA,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;AACL;AAEA,SAASlB,yBAAyB,IAAImB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}