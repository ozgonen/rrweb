{"ast":null,"code":"var _jsxFileName = \"/Users/ogonen/rrweb/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Replayer } from \"rrweb\";\nimport \"./App.css\";\nimport { cutRecording, trimRecording, analyzeRecording, findEventsByContent, timestampToRelativeTime, formatTime, parseTimeString } from \"./RecordingCutter\";\n\n// Event type mapping for rrweb\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getEventTypeInfo = event => {\n  const eventTypes = {\n    0: {\n      name: \"DomContentLoaded\",\n      color: \"#4CAF50\",\n      symbol: \"📄\"\n    },\n    1: {\n      name: \"Load\",\n      color: \"#2196F3\",\n      symbol: \"✅\"\n    },\n    2: {\n      name: \"FullSnapshot\",\n      color: \"#FF9800\",\n      symbol: \"📸\"\n    },\n    3: {\n      name: \"IncrementalSnapshot\",\n      color: \"#9C27B0\",\n      symbol: \"🔄\"\n    },\n    4: {\n      name: \"Meta\",\n      color: \"#795548\",\n      symbol: \"ℹ️\"\n    },\n    5: {\n      name: \"Custom\",\n      color: \"#607D8B\",\n      symbol: \"⭐\"\n    }\n  };\n  const baseInfo = eventTypes[event.type] || {\n    name: \"Unknown\",\n    color: \"#666\",\n    symbol: \"❓\"\n  };\n\n  // Add more detail for incremental snapshots\n  if (event.type === 3 && event.data) {\n    const source = event.data.source;\n    const sourceNames = {\n      0: \"Mutation\",\n      1: \"MouseMove\",\n      2: \"MouseInteraction\",\n      3: \"Scroll\",\n      4: \"ViewportResize\",\n      5: \"Input\",\n      6: \"TouchMove\",\n      7: \"MediaInteraction\",\n      8: \"StyleSheetRule\",\n      9: \"CanvasMutation\",\n      10: \"Font\",\n      11: \"Log\",\n      12: \"Drag\",\n      13: \"StyleDeclaration\"\n    };\n    if (sourceNames[source] !== undefined) {\n      return {\n        ...baseInfo,\n        name: `${baseInfo.name} (${sourceNames[source]})`,\n        subType: sourceNames[source]\n      };\n    }\n  }\n  return baseInfo;\n};\nfunction App() {\n  _s();\n  const [events, setEvents] = useState(null);\n  const [error, setError] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [recording, setRecording] = useState(null); // Analysis of current recording\n  const [cutTimestamp, setCutTimestamp] = useState(\"\");\n  const [beforeSeconds, setBeforeSeconds] = useState(5);\n  const [afterSeconds, setAfterSeconds] = useState(5);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [foundEvents, setFoundEvents] = useState([]);\n  const playerRef = useRef(null);\n  const replayer = useRef(null);\n\n  // Player timeline states\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [isTrimmingMode, setIsTrimmingMode] = useState(false);\n  const [trimStart, setTrimStart] = useState(0);\n  const [trimEnd, setTrimEnd] = useState(0);\n  const timelineUpdateInterval = useRef(null);\n  const handleFileUpload = file => {\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const content = e.target.result;\n        let jsonData;\n        if (typeof content === \"string\") {\n          jsonData = JSON.parse(content);\n        } else {\n          // Handle binary content\n          const text = new TextDecoder().decode(content);\n          jsonData = JSON.parse(text);\n        }\n\n        // Debug: Log the raw data structure\n        console.log(\"Raw JSON data:\", jsonData);\n        console.log(\"Data type:\", typeof jsonData);\n        console.log(\"Is array:\", Array.isArray(jsonData));\n\n        // Handle different rrweb recording formats\n        let eventsArray;\n        if (Array.isArray(jsonData)) {\n          eventsArray = jsonData;\n        } else if (jsonData.events && Array.isArray(jsonData.events)) {\n          // Some recordings store events in a nested structure\n          eventsArray = jsonData.events;\n        } else if (jsonData.data && Array.isArray(jsonData.data)) {\n          eventsArray = jsonData.data;\n        } else {\n          // Single event wrapped in array\n          eventsArray = [jsonData];\n        }\n        console.log(\"Processed events array:\", eventsArray.length, \"events\");\n        console.log(\"First few events:\", eventsArray.slice(0, 3));\n        setEvents(eventsArray);\n        setError(null);\n\n        // Analyze the recording\n        const analysis = analyzeRecording(eventsArray);\n        setRecording(analysis);\n        console.log(\"Recording loaded:\", analysis);\n      } catch (err) {\n        console.error(\"Error parsing file:\", err);\n        setError(`Error loading file: ${err.message}. Please make sure the file contains valid rrweb recording data.`);\n      }\n    };\n    reader.onerror = () => {\n      setError(\"Error reading file. Please try again.\");\n    };\n\n    // Try to read as text first, fall back to binary if needed\n    reader.readAsText(file);\n  };\n  const handleFileDrop = e => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileUpload(files[0]);\n    }\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const initializePlayer = () => {\n    if (!events || !playerRef.current) return;\n    try {\n      // Clean up existing replayer with error handling\n      if (replayer.current) {\n        try {\n          replayer.current.destroy();\n        } catch (destroyError) {\n          console.warn(\"Error destroying previous replayer:\", destroyError);\n          // Force cleanup by clearing the container\n          if (playerRef.current) {\n            playerRef.current.innerHTML = \"\";\n          }\n        }\n        replayer.current = null;\n      }\n\n      // Ensure player container is clean\n      if (playerRef.current) {\n        playerRef.current.innerHTML = \"\";\n      }\n\n      // Debug: Check the events structure\n      console.log(\"Events to replay:\", events.length, \"events\");\n      const fullSnapshots = events.filter(e => e.type === 2);\n      const domUpdates = events.filter(e => e.type === 3);\n      console.log(\"Full snapshots:\", fullSnapshots.length);\n      console.log(\"DOM updates:\", domUpdates.length);\n      if (fullSnapshots.length === 0) {\n        setError(\"No full snapshot found in recording. This recording may be incomplete.\");\n        return;\n      }\n\n      // Create new replayer instance with enhanced configuration\n      replayer.current = new Replayer(events, {\n        root: playerRef.current,\n        skipInactive: false,\n        showWarning: true,\n        blockClass: \"rr-block\",\n        liveMode: false,\n        triggerFocus: false,\n        showDebug: false,\n        insertStyleRules: [\".rr-block { background: rgba(0, 0, 0, 0.1); }\", \"iframe { background: white !important; }\"]\n      });\n\n      // Add event listeners for debugging\n      replayer.current.on(\"state-change\", state => {\n        console.log(\"Replayer state changed:\", state);\n      });\n      replayer.current.on(\"resize\", size => {\n        console.log(\"Replayer resized:\", size);\n      });\n\n      // Get the duration from the replayer\n      const metadata = replayer.current.getMetaData();\n      const totalDuration = metadata.totalTime;\n      setDuration(totalDuration);\n      setTrimEnd(totalDuration);\n      console.log(\"Replayer initialized successfully\");\n    } catch (err) {\n      console.error(\"Error initializing replayer:\", err);\n      setError(`Error initializing player: ${err.message}`);\n    }\n  };\n  useEffect(() => {\n    if (events && playerRef.current) {\n      initializePlayer();\n    }\n\n    // Cleanup on unmount\n    return () => {\n      if (replayer.current) {\n        try {\n          replayer.current.destroy();\n        } catch (destroyError) {\n          console.warn(\"Error destroying replayer on cleanup:\", destroyError);\n          // Force cleanup by clearing the container\n          if (playerRef.current) {\n            playerRef.current.innerHTML = \"\";\n          }\n        }\n        replayer.current = null;\n      }\n    };\n  }, [events]);\n  const handlePlay = () => {\n    if (replayer.current) {\n      // Resume from current position instead of starting from beginning\n      if (currentTime > 0) {\n        replayer.current.play(currentTime);\n      } else {\n        replayer.current.play();\n      }\n      setIsPlaying(true);\n      // Start updating timeline\n      timelineUpdateInterval.current = setInterval(() => {\n        if (replayer.current) {\n          const time = replayer.current.getCurrentTime();\n          setCurrentTime(time);\n        }\n      }, 100);\n    }\n  };\n  const handlePause = () => {\n    if (replayer.current) {\n      replayer.current.pause();\n      setIsPlaying(false);\n      // Stop updating timeline\n      if (timelineUpdateInterval.current) {\n        clearInterval(timelineUpdateInterval.current);\n      }\n    }\n  };\n  const handleStop = () => {\n    if (replayer.current) {\n      replayer.current.pause();\n      // Reset to beginning\n      replayer.current.play(0);\n      replayer.current.pause();\n      setIsPlaying(false);\n      setCurrentTime(0);\n      // Stop updating timeline\n      if (timelineUpdateInterval.current) {\n        clearInterval(timelineUpdateInterval.current);\n      }\n    }\n  };\n  const handleSeek = time => {\n    if (replayer.current) {\n      replayer.current.play(time);\n      replayer.current.pause();\n      setCurrentTime(time);\n    }\n  };\n  const searchEvents = () => {\n    if (!events || !searchTerm.trim()) {\n      setFoundEvents([]);\n      return;\n    }\n    const found = findEventsByContent(events, searchTerm.trim());\n    setFoundEvents(found);\n  };\n  const fillTimestamp = relativeSeconds => {\n    setCutTimestamp(formatTime(relativeSeconds));\n  };\n  const handleStartTrimming = () => {\n    setIsTrimmingMode(true);\n    setTrimStart(currentTime);\n    setTrimEnd(duration);\n  };\n  const handleSaveTrim = () => {\n    if (!events || !recording) {\n      setError(\"No recording loaded\");\n      return;\n    }\n    try {\n      // Use the new trimRecording function with millisecond timestamps\n      const clip = trimRecording(events, trimStart, trimEnd);\n\n      // Convert milliseconds to seconds for the filename\n      const startSeconds = trimStart / 1000;\n      const endSeconds = trimEnd / 1000;\n\n      // Download the trimmed clip\n      const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(clip, null, 2));\n      const downloadAnchorNode = document.createElement(\"a\");\n      downloadAnchorNode.setAttribute(\"href\", dataStr);\n      downloadAnchorNode.setAttribute(\"download\", `trimmed_${formatTime(startSeconds)}_to_${formatTime(endSeconds)}.json`);\n      document.body.appendChild(downloadAnchorNode);\n      downloadAnchorNode.click();\n      downloadAnchorNode.remove();\n      setIsTrimmingMode(false);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error trimming recording:\", err);\n      setError(`Error trimming recording: ${err.message}`);\n    }\n  };\n  const handleCancelTrim = () => {\n    setIsTrimmingMode(false);\n    setTrimStart(0);\n    setTrimEnd(duration);\n  };\n  const handleTrimHandleChange = (type, value) => {\n    if (type === \"start\") {\n      setTrimStart(Math.max(0, Math.min(value, trimEnd - 1000))); // Ensure at least 1 second\n    } else {\n      setTrimEnd(Math.max(trimStart + 1000, Math.min(value, duration)));\n    }\n  };\n  const handleCut = action => {\n    if (!events || !recording) {\n      setError(\"No recording loaded\");\n      return;\n    }\n    try {\n      const relativeSeconds = parseTimeString(cutTimestamp);\n      const clip = cutRecording(events, relativeSeconds, beforeSeconds, afterSeconds);\n      if (action === \"load\") {\n        // Replace current recording with the clip\n        setEvents(clip);\n        const analysis = analyzeRecording(clip);\n        setRecording(analysis);\n        setCutTimestamp(\"\");\n        setFoundEvents([]);\n      } else if (action === \"download\") {\n        // Download the clip as JSON\n        const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(clip, null, 2));\n        const downloadAnchorNode = document.createElement(\"a\");\n        downloadAnchorNode.setAttribute(\"href\", dataStr);\n        downloadAnchorNode.setAttribute(\"download\", `clip_${cutTimestamp || \"segment\"}.json`);\n        document.body.appendChild(downloadAnchorNode);\n        downloadAnchorNode.click();\n        downloadAnchorNode.remove();\n      }\n    } catch (err) {\n      console.error(\"Error cutting recording:\", err);\n      setError(`Error cutting recording: ${err.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"RRWeb Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload an rrweb recording file to play it back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-area\",\n        onDrop: handleFileDrop,\n        onDragOver: handleDragOver,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => handleFileUpload(e.target.files[0]),\n          className: \"file-input\",\n          id: \"file-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          className: \"upload-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-icon\",\n            children: \"\\uD83D\\uDCC1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Choose a file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this), \" or drag it here\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-subtext\",\n            children: \"Supports rrweb recording files (with or without .json extension)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 17\n    }, this), recording && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recording-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recording Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Duration:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: formatTime(recording.duration)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Events:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: recording.eventCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Start:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: new Date(recording.startTime).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"End:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: new Date(recording.endTime).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 9\n    }, this), events && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: playerRef,\n        className: \"player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline\",\n            onClick: e => {\n              if (!isTrimmingMode && e.target === e.currentTarget) {\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const percentage = x / rect.width;\n                const seekTime = percentage * duration;\n                handleSeek(seekTime);\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timeline-progress\",\n              style: {\n                width: `${currentTime / duration * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 17\n            }, this), !isTrimmingMode && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timeline-scrubber\",\n              style: {\n                left: `${currentTime / duration * 100}%`\n              },\n              onMouseDown: e => {\n                e.stopPropagation();\n                const startX = e.clientX;\n                const startTime = currentTime;\n                const rect = e.currentTarget.parentElement.getBoundingClientRect();\n                const handleMouseMove = e => {\n                  const deltaX = e.clientX - startX;\n                  const deltaPercent = deltaX / rect.width;\n                  const newTime = Math.max(0, Math.min(duration, startTime + deltaPercent * duration));\n                  handleSeek(newTime);\n                };\n                const handleMouseUp = () => {\n                  document.removeEventListener(\"mousemove\", handleMouseMove);\n                  document.removeEventListener(\"mouseup\", handleMouseUp);\n                };\n                document.addEventListener(\"mousemove\", handleMouseMove);\n                document.addEventListener(\"mouseup\", handleMouseUp);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 19\n            }, this), isTrimmingMode && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"trim-overlay trim-start\",\n                style: {\n                  width: `${trimStart / duration * 100}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"trim-overlay trim-end\",\n                style: {\n                  left: `${trimEnd / duration * 100}%`,\n                  width: `${(duration - trimEnd) / duration * 100}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"trim-handle trim-handle-start\",\n                style: {\n                  left: `${trimStart / duration * 100}%`\n                },\n                onMouseDown: e => {\n                  e.stopPropagation();\n                  const startX = e.clientX;\n                  const startValue = trimStart;\n                  const rect = e.currentTarget.parentElement.getBoundingClientRect();\n                  const handleMouseMove = e => {\n                    const deltaX = e.clientX - startX;\n                    const deltaPercent = deltaX / rect.width;\n                    const newValue = startValue + deltaPercent * duration;\n                    handleTrimHandleChange(\"start\", newValue);\n                  };\n                  const handleMouseUp = () => {\n                    document.removeEventListener(\"mousemove\", handleMouseMove);\n                    document.removeEventListener(\"mouseup\", handleMouseUp);\n                  };\n                  document.addEventListener(\"mousemove\", handleMouseMove);\n                  document.addEventListener(\"mouseup\", handleMouseUp);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"trim-handle trim-handle-end\",\n                style: {\n                  left: `${trimEnd / duration * 100}%`\n                },\n                onMouseDown: e => {\n                  e.stopPropagation();\n                  const startX = e.clientX;\n                  const startValue = trimEnd;\n                  const rect = e.currentTarget.parentElement.getBoundingClientRect();\n                  const handleMouseMove = e => {\n                    const deltaX = e.clientX - startX;\n                    const deltaPercent = deltaX / rect.width;\n                    const newValue = startValue + deltaPercent * duration;\n                    handleTrimHandleChange(\"end\", newValue);\n                  };\n                  const handleMouseUp = () => {\n                    document.removeEventListener(\"mousemove\", handleMouseMove);\n                    document.removeEventListener(\"mouseup\", handleMouseUp);\n                  };\n                  document.addEventListener(\"mousemove\", handleMouseMove);\n                  document.addEventListener(\"mouseup\", handleMouseUp);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline-times\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatTime(currentTime / 1000)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 17\n            }, this), isTrimmingMode && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"trim-info\",\n              children: [\"Trim: \", formatTime(trimStart / 1000), \" -\", \" \", formatTime(trimEnd / 1000)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatTime(duration / 1000)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePlay,\n            disabled: isPlaying,\n            children: \"\\u25B6\\uFE0F Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePause,\n            disabled: !isPlaying,\n            children: \"\\u23F8\\uFE0F Pause\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStop,\n            children: \"\\u23F9\\uFE0F Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 15\n          }, this), !isTrimmingMode ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStartTrimming,\n            className: \"trim-button\",\n            children: \"\\u2702\\uFE0F Trim\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSaveTrim,\n              className: \"save-trim-button\",\n              children: \"\\uD83D\\uDCBE Save Trim\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCancelTrim,\n              className: \"cancel-trim-button\",\n              children: \"\\u274C Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 421,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6TwTMeWJC7PNk9FWrVXLKp0Tivk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Replayer","cutRecording","trimRecording","analyzeRecording","findEventsByContent","timestampToRelativeTime","formatTime","parseTimeString","jsxDEV","_jsxDEV","Fragment","_Fragment","getEventTypeInfo","event","eventTypes","name","color","symbol","baseInfo","type","data","source","sourceNames","undefined","subType","App","_s","events","setEvents","error","setError","isPlaying","setIsPlaying","recording","setRecording","cutTimestamp","setCutTimestamp","beforeSeconds","setBeforeSeconds","afterSeconds","setAfterSeconds","searchTerm","setSearchTerm","foundEvents","setFoundEvents","playerRef","replayer","currentTime","setCurrentTime","duration","setDuration","isTrimmingMode","setIsTrimmingMode","trimStart","setTrimStart","trimEnd","setTrimEnd","timelineUpdateInterval","handleFileUpload","file","reader","FileReader","onload","e","content","target","result","jsonData","JSON","parse","text","TextDecoder","decode","console","log","Array","isArray","eventsArray","length","slice","analysis","err","message","onerror","readAsText","handleFileDrop","preventDefault","files","dataTransfer","handleDragOver","initializePlayer","current","destroy","destroyError","warn","innerHTML","fullSnapshots","filter","domUpdates","root","skipInactive","showWarning","blockClass","liveMode","triggerFocus","showDebug","insertStyleRules","on","state","size","metadata","getMetaData","totalDuration","totalTime","handlePlay","play","setInterval","time","getCurrentTime","handlePause","pause","clearInterval","handleStop","handleSeek","searchEvents","trim","found","fillTimestamp","relativeSeconds","handleStartTrimming","handleSaveTrim","clip","startSeconds","endSeconds","dataStr","encodeURIComponent","stringify","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","handleCancelTrim","handleTrimHandleChange","value","Math","max","min","handleCut","action","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onDragOver","onChange","id","htmlFor","eventCount","Date","startTime","toLocaleTimeString","endTime","ref","onClick","currentTarget","rect","getBoundingClientRect","x","clientX","left","percentage","width","seekTime","style","onMouseDown","stopPropagation","startX","parentElement","handleMouseMove","deltaX","deltaPercent","newTime","handleMouseUp","removeEventListener","addEventListener","startValue","newValue","disabled","_c","$RefreshReg$"],"sources":["/Users/ogonen/rrweb/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { Replayer } from \"rrweb\";\nimport \"./App.css\";\nimport {\n  cutRecording,\n  trimRecording,\n  analyzeRecording,\n  findEventsByContent,\n  timestampToRelativeTime,\n  formatTime,\n  parseTimeString,\n} from \"./RecordingCutter\";\n\n// Event type mapping for rrweb\nconst getEventTypeInfo = (event) => {\n  const eventTypes = {\n    0: { name: \"DomContentLoaded\", color: \"#4CAF50\", symbol: \"📄\" },\n    1: { name: \"Load\", color: \"#2196F3\", symbol: \"✅\" },\n    2: { name: \"FullSnapshot\", color: \"#FF9800\", symbol: \"📸\" },\n    3: { name: \"IncrementalSnapshot\", color: \"#9C27B0\", symbol: \"🔄\" },\n    4: { name: \"Meta\", color: \"#795548\", symbol: \"ℹ️\" },\n    5: { name: \"Custom\", color: \"#607D8B\", symbol: \"⭐\" },\n  };\n\n  const baseInfo = eventTypes[event.type] || {\n    name: \"Unknown\",\n    color: \"#666\",\n    symbol: \"❓\",\n  };\n\n  // Add more detail for incremental snapshots\n  if (event.type === 3 && event.data) {\n    const source = event.data.source;\n    const sourceNames = {\n      0: \"Mutation\",\n      1: \"MouseMove\",\n      2: \"MouseInteraction\",\n      3: \"Scroll\",\n      4: \"ViewportResize\",\n      5: \"Input\",\n      6: \"TouchMove\",\n      7: \"MediaInteraction\",\n      8: \"StyleSheetRule\",\n      9: \"CanvasMutation\",\n      10: \"Font\",\n      11: \"Log\",\n      12: \"Drag\",\n      13: \"StyleDeclaration\",\n    };\n\n    if (sourceNames[source] !== undefined) {\n      return {\n        ...baseInfo,\n        name: `${baseInfo.name} (${sourceNames[source]})`,\n        subType: sourceNames[source],\n      };\n    }\n  }\n\n  return baseInfo;\n};\n\nfunction App() {\n  const [events, setEvents] = useState(null);\n  const [error, setError] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [recording, setRecording] = useState(null); // Analysis of current recording\n  const [cutTimestamp, setCutTimestamp] = useState(\"\");\n  const [beforeSeconds, setBeforeSeconds] = useState(5);\n  const [afterSeconds, setAfterSeconds] = useState(5);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [foundEvents, setFoundEvents] = useState([]);\n  const playerRef = useRef(null);\n  const replayer = useRef(null);\n\n  // Player timeline states\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [isTrimmingMode, setIsTrimmingMode] = useState(false);\n  const [trimStart, setTrimStart] = useState(0);\n  const [trimEnd, setTrimEnd] = useState(0);\n  const timelineUpdateInterval = useRef(null);\n\n  const handleFileUpload = (file) => {\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const content = e.target.result;\n        let jsonData;\n\n        if (typeof content === \"string\") {\n          jsonData = JSON.parse(content);\n        } else {\n          // Handle binary content\n          const text = new TextDecoder().decode(content);\n          jsonData = JSON.parse(text);\n        }\n\n        // Debug: Log the raw data structure\n        console.log(\"Raw JSON data:\", jsonData);\n        console.log(\"Data type:\", typeof jsonData);\n        console.log(\"Is array:\", Array.isArray(jsonData));\n\n        // Handle different rrweb recording formats\n        let eventsArray;\n        if (Array.isArray(jsonData)) {\n          eventsArray = jsonData;\n        } else if (jsonData.events && Array.isArray(jsonData.events)) {\n          // Some recordings store events in a nested structure\n          eventsArray = jsonData.events;\n        } else if (jsonData.data && Array.isArray(jsonData.data)) {\n          eventsArray = jsonData.data;\n        } else {\n          // Single event wrapped in array\n          eventsArray = [jsonData];\n        }\n\n        console.log(\"Processed events array:\", eventsArray.length, \"events\");\n        console.log(\"First few events:\", eventsArray.slice(0, 3));\n\n        setEvents(eventsArray);\n        setError(null);\n\n        // Analyze the recording\n        const analysis = analyzeRecording(eventsArray);\n        setRecording(analysis);\n        console.log(\"Recording loaded:\", analysis);\n      } catch (err) {\n        console.error(\"Error parsing file:\", err);\n        setError(\n          `Error loading file: ${err.message}. Please make sure the file contains valid rrweb recording data.`\n        );\n      }\n    };\n\n    reader.onerror = () => {\n      setError(\"Error reading file. Please try again.\");\n    };\n\n    // Try to read as text first, fall back to binary if needed\n    reader.readAsText(file);\n  };\n\n  const handleFileDrop = (e) => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileUpload(files[0]);\n    }\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const initializePlayer = () => {\n    if (!events || !playerRef.current) return;\n\n    try {\n      // Clean up existing replayer with error handling\n      if (replayer.current) {\n        try {\n          replayer.current.destroy();\n        } catch (destroyError) {\n          console.warn(\"Error destroying previous replayer:\", destroyError);\n          // Force cleanup by clearing the container\n          if (playerRef.current) {\n            playerRef.current.innerHTML = \"\";\n          }\n        }\n        replayer.current = null;\n      }\n\n      // Ensure player container is clean\n      if (playerRef.current) {\n        playerRef.current.innerHTML = \"\";\n      }\n\n      // Debug: Check the events structure\n      console.log(\"Events to replay:\", events.length, \"events\");\n      const fullSnapshots = events.filter((e) => e.type === 2);\n      const domUpdates = events.filter((e) => e.type === 3);\n      console.log(\"Full snapshots:\", fullSnapshots.length);\n      console.log(\"DOM updates:\", domUpdates.length);\n\n      if (fullSnapshots.length === 0) {\n        setError(\n          \"No full snapshot found in recording. This recording may be incomplete.\"\n        );\n        return;\n      }\n\n      // Create new replayer instance with enhanced configuration\n      replayer.current = new Replayer(events, {\n        root: playerRef.current,\n        skipInactive: false,\n        showWarning: true,\n        blockClass: \"rr-block\",\n        liveMode: false,\n        triggerFocus: false,\n        showDebug: false,\n        insertStyleRules: [\n          \".rr-block { background: rgba(0, 0, 0, 0.1); }\",\n          \"iframe { background: white !important; }\",\n        ],\n      });\n\n      // Add event listeners for debugging\n      replayer.current.on(\"state-change\", (state) => {\n        console.log(\"Replayer state changed:\", state);\n      });\n\n      replayer.current.on(\"resize\", (size) => {\n        console.log(\"Replayer resized:\", size);\n      });\n\n      // Get the duration from the replayer\n      const metadata = replayer.current.getMetaData();\n      const totalDuration = metadata.totalTime;\n      setDuration(totalDuration);\n      setTrimEnd(totalDuration);\n\n      console.log(\"Replayer initialized successfully\");\n    } catch (err) {\n      console.error(\"Error initializing replayer:\", err);\n      setError(`Error initializing player: ${err.message}`);\n    }\n  };\n\n  useEffect(() => {\n    if (events && playerRef.current) {\n      initializePlayer();\n    }\n\n    // Cleanup on unmount\n    return () => {\n      if (replayer.current) {\n        try {\n          replayer.current.destroy();\n        } catch (destroyError) {\n          console.warn(\"Error destroying replayer on cleanup:\", destroyError);\n          // Force cleanup by clearing the container\n          if (playerRef.current) {\n            playerRef.current.innerHTML = \"\";\n          }\n        }\n        replayer.current = null;\n      }\n    };\n  }, [events]);\n\n  const handlePlay = () => {\n    if (replayer.current) {\n      // Resume from current position instead of starting from beginning\n      if (currentTime > 0) {\n        replayer.current.play(currentTime);\n      } else {\n        replayer.current.play();\n      }\n      setIsPlaying(true);\n      // Start updating timeline\n      timelineUpdateInterval.current = setInterval(() => {\n        if (replayer.current) {\n          const time = replayer.current.getCurrentTime();\n          setCurrentTime(time);\n        }\n      }, 100);\n    }\n  };\n\n  const handlePause = () => {\n    if (replayer.current) {\n      replayer.current.pause();\n      setIsPlaying(false);\n      // Stop updating timeline\n      if (timelineUpdateInterval.current) {\n        clearInterval(timelineUpdateInterval.current);\n      }\n    }\n  };\n\n  const handleStop = () => {\n    if (replayer.current) {\n      replayer.current.pause();\n      // Reset to beginning\n      replayer.current.play(0);\n      replayer.current.pause();\n      setIsPlaying(false);\n      setCurrentTime(0);\n      // Stop updating timeline\n      if (timelineUpdateInterval.current) {\n        clearInterval(timelineUpdateInterval.current);\n      }\n    }\n  };\n\n  const handleSeek = (time) => {\n    if (replayer.current) {\n      replayer.current.play(time);\n      replayer.current.pause();\n      setCurrentTime(time);\n    }\n  };\n\n  const searchEvents = () => {\n    if (!events || !searchTerm.trim()) {\n      setFoundEvents([]);\n      return;\n    }\n\n    const found = findEventsByContent(events, searchTerm.trim());\n    setFoundEvents(found);\n  };\n\n  const fillTimestamp = (relativeSeconds) => {\n    setCutTimestamp(formatTime(relativeSeconds));\n  };\n\n  const handleStartTrimming = () => {\n    setIsTrimmingMode(true);\n    setTrimStart(currentTime);\n    setTrimEnd(duration);\n  };\n\n  const handleSaveTrim = () => {\n    if (!events || !recording) {\n      setError(\"No recording loaded\");\n      return;\n    }\n\n    try {\n      // Use the new trimRecording function with millisecond timestamps\n      const clip = trimRecording(events, trimStart, trimEnd);\n\n      // Convert milliseconds to seconds for the filename\n      const startSeconds = trimStart / 1000;\n      const endSeconds = trimEnd / 1000;\n\n      // Download the trimmed clip\n      const dataStr =\n        \"data:text/json;charset=utf-8,\" +\n        encodeURIComponent(JSON.stringify(clip, null, 2));\n      const downloadAnchorNode = document.createElement(\"a\");\n      downloadAnchorNode.setAttribute(\"href\", dataStr);\n      downloadAnchorNode.setAttribute(\n        \"download\",\n        `trimmed_${formatTime(startSeconds)}_to_${formatTime(endSeconds)}.json`\n      );\n      document.body.appendChild(downloadAnchorNode);\n      downloadAnchorNode.click();\n      downloadAnchorNode.remove();\n\n      setIsTrimmingMode(false);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error trimming recording:\", err);\n      setError(`Error trimming recording: ${err.message}`);\n    }\n  };\n\n  const handleCancelTrim = () => {\n    setIsTrimmingMode(false);\n    setTrimStart(0);\n    setTrimEnd(duration);\n  };\n\n  const handleTrimHandleChange = (type, value) => {\n    if (type === \"start\") {\n      setTrimStart(Math.max(0, Math.min(value, trimEnd - 1000))); // Ensure at least 1 second\n    } else {\n      setTrimEnd(Math.max(trimStart + 1000, Math.min(value, duration)));\n    }\n  };\n\n  const handleCut = (action) => {\n    if (!events || !recording) {\n      setError(\"No recording loaded\");\n      return;\n    }\n\n    try {\n      const relativeSeconds = parseTimeString(cutTimestamp);\n      const clip = cutRecording(\n        events,\n        relativeSeconds,\n        beforeSeconds,\n        afterSeconds\n      );\n\n      if (action === \"load\") {\n        // Replace current recording with the clip\n        setEvents(clip);\n        const analysis = analyzeRecording(clip);\n        setRecording(analysis);\n        setCutTimestamp(\"\");\n        setFoundEvents([]);\n      } else if (action === \"download\") {\n        // Download the clip as JSON\n        const dataStr =\n          \"data:text/json;charset=utf-8,\" +\n          encodeURIComponent(JSON.stringify(clip, null, 2));\n        const downloadAnchorNode = document.createElement(\"a\");\n        downloadAnchorNode.setAttribute(\"href\", dataStr);\n        downloadAnchorNode.setAttribute(\n          \"download\",\n          `clip_${cutTimestamp || \"segment\"}.json`\n        );\n        document.body.appendChild(downloadAnchorNode);\n        downloadAnchorNode.click();\n        downloadAnchorNode.remove();\n      }\n    } catch (err) {\n      console.error(\"Error cutting recording:\", err);\n      setError(`Error cutting recording: ${err.message}`);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"header\">\n        <h1>RRWeb Player</h1>\n        <p>Upload an rrweb recording file to play it back</p>\n      </div>\n\n      <div className=\"upload-section\">\n        <div\n          className=\"upload-area\"\n          onDrop={handleFileDrop}\n          onDragOver={handleDragOver}\n        >\n          <input\n            type=\"file\"\n            onChange={(e) => handleFileUpload(e.target.files[0])}\n            className=\"file-input\"\n            id=\"file-upload\"\n          />\n          <label htmlFor=\"file-upload\" className=\"upload-label\">\n            <div className=\"upload-icon\">📁</div>\n            <div className=\"upload-text\">\n              <strong>Choose a file</strong> or drag it here\n            </div>\n            <div className=\"upload-subtext\">\n              Supports rrweb recording files (with or without .json extension)\n            </div>\n          </label>\n        </div>\n      </div>\n\n      {error && <div className=\"error\">{error}</div>}\n\n      {recording && (\n        <div className=\"recording-info\">\n          <h3>Recording Information</h3>\n          <div className=\"recording-stats\">\n            <div className=\"stat\">\n              <span className=\"stat-label\">Duration:</span>\n              <span className=\"stat-value\">\n                {formatTime(recording.duration)}\n              </span>\n            </div>\n            <div className=\"stat\">\n              <span className=\"stat-label\">Events:</span>\n              <span className=\"stat-value\">{recording.eventCount}</span>\n            </div>\n            <div className=\"stat\">\n              <span className=\"stat-label\">Start:</span>\n              <span className=\"stat-value\">\n                {new Date(recording.startTime).toLocaleTimeString()}\n              </span>\n            </div>\n            <div className=\"stat\">\n              <span className=\"stat-label\">End:</span>\n              <span className=\"stat-value\">\n                {new Date(recording.endTime).toLocaleTimeString()}\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {events && (\n        <div className=\"player-section\">\n          <div ref={playerRef} className=\"player\"></div>\n\n          <div className=\"custom-controls\">\n            <div className=\"timeline-container\">\n              <div\n                className=\"timeline\"\n                onClick={(e) => {\n                  if (!isTrimmingMode && e.target === e.currentTarget) {\n                    const rect = e.currentTarget.getBoundingClientRect();\n                    const x = e.clientX - rect.left;\n                    const percentage = x / rect.width;\n                    const seekTime = percentage * duration;\n                    handleSeek(seekTime);\n                  }\n                }}\n              >\n                <div\n                  className=\"timeline-progress\"\n                  style={{ width: `${(currentTime / duration) * 100}%` }}\n                />\n\n                {/* Draggable timeline scrubber */}\n                {!isTrimmingMode && (\n                  <div\n                    className=\"timeline-scrubber\"\n                    style={{ left: `${(currentTime / duration) * 100}%` }}\n                    onMouseDown={(e) => {\n                      e.stopPropagation();\n                      const startX = e.clientX;\n                      const startTime = currentTime;\n                      const rect =\n                        e.currentTarget.parentElement.getBoundingClientRect();\n\n                      const handleMouseMove = (e) => {\n                        const deltaX = e.clientX - startX;\n                        const deltaPercent = deltaX / rect.width;\n                        const newTime = Math.max(\n                          0,\n                          Math.min(\n                            duration,\n                            startTime + deltaPercent * duration\n                          )\n                        );\n                        handleSeek(newTime);\n                      };\n\n                      const handleMouseUp = () => {\n                        document.removeEventListener(\n                          \"mousemove\",\n                          handleMouseMove\n                        );\n                        document.removeEventListener(\"mouseup\", handleMouseUp);\n                      };\n\n                      document.addEventListener(\"mousemove\", handleMouseMove);\n                      document.addEventListener(\"mouseup\", handleMouseUp);\n                    }}\n                  />\n                )}\n\n                {isTrimmingMode && (\n                  <>\n                    <div\n                      className=\"trim-overlay trim-start\"\n                      style={{ width: `${(trimStart / duration) * 100}%` }}\n                    />\n                    <div\n                      className=\"trim-overlay trim-end\"\n                      style={{\n                        left: `${(trimEnd / duration) * 100}%`,\n                        width: `${((duration - trimEnd) / duration) * 100}%`,\n                      }}\n                    />\n                    <div\n                      className=\"trim-handle trim-handle-start\"\n                      style={{ left: `${(trimStart / duration) * 100}%` }}\n                      onMouseDown={(e) => {\n                        e.stopPropagation();\n                        const startX = e.clientX;\n                        const startValue = trimStart;\n                        const rect =\n                          e.currentTarget.parentElement.getBoundingClientRect();\n\n                        const handleMouseMove = (e) => {\n                          const deltaX = e.clientX - startX;\n                          const deltaPercent = deltaX / rect.width;\n                          const newValue = startValue + deltaPercent * duration;\n                          handleTrimHandleChange(\"start\", newValue);\n                        };\n\n                        const handleMouseUp = () => {\n                          document.removeEventListener(\n                            \"mousemove\",\n                            handleMouseMove\n                          );\n                          document.removeEventListener(\n                            \"mouseup\",\n                            handleMouseUp\n                          );\n                        };\n\n                        document.addEventListener(\"mousemove\", handleMouseMove);\n                        document.addEventListener(\"mouseup\", handleMouseUp);\n                      }}\n                    />\n                    <div\n                      className=\"trim-handle trim-handle-end\"\n                      style={{ left: `${(trimEnd / duration) * 100}%` }}\n                      onMouseDown={(e) => {\n                        e.stopPropagation();\n                        const startX = e.clientX;\n                        const startValue = trimEnd;\n                        const rect =\n                          e.currentTarget.parentElement.getBoundingClientRect();\n\n                        const handleMouseMove = (e) => {\n                          const deltaX = e.clientX - startX;\n                          const deltaPercent = deltaX / rect.width;\n                          const newValue = startValue + deltaPercent * duration;\n                          handleTrimHandleChange(\"end\", newValue);\n                        };\n\n                        const handleMouseUp = () => {\n                          document.removeEventListener(\n                            \"mousemove\",\n                            handleMouseMove\n                          );\n                          document.removeEventListener(\n                            \"mouseup\",\n                            handleMouseUp\n                          );\n                        };\n\n                        document.addEventListener(\"mousemove\", handleMouseMove);\n                        document.addEventListener(\"mouseup\", handleMouseUp);\n                      }}\n                    />\n                  </>\n                )}\n              </div>\n\n              <div className=\"timeline-times\">\n                <span>{formatTime(currentTime / 1000)}</span>\n                {isTrimmingMode && (\n                  <span className=\"trim-info\">\n                    Trim: {formatTime(trimStart / 1000)} -{\" \"}\n                    {formatTime(trimEnd / 1000)}\n                  </span>\n                )}\n                <span>{formatTime(duration / 1000)}</span>\n              </div>\n            </div>\n\n            <div className=\"player-controls\">\n              <button onClick={handlePlay} disabled={isPlaying}>\n                ▶️ Play\n              </button>\n              <button onClick={handlePause} disabled={!isPlaying}>\n                ⏸️ Pause\n              </button>\n              <button onClick={handleStop}>⏹️ Stop</button>\n\n              {!isTrimmingMode ? (\n                <button onClick={handleStartTrimming} className=\"trim-button\">\n                  ✂️ Trim\n                </button>\n              ) : (\n                <>\n                  <button onClick={handleSaveTrim} className=\"save-trim-button\">\n                    💾 Save Trim\n                  </button>\n                  <button\n                    onClick={handleCancelTrim}\n                    className=\"cancel-trim-button\"\n                  >\n                    ❌ Cancel\n                  </button>\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}